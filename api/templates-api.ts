/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { DeleteTemplateResponse } from '../models';
// @ts-ignore
import { GetCatalogItems4XXResponse } from '../models';
// @ts-ignore
import { GetTemplateResponse } from '../models';
// @ts-ignore
import { GetTemplateResponseCollection } from '../models';
// @ts-ignore
import { PatchTemplateResponse } from '../models';
// @ts-ignore
import { PostTemplateResponse } from '../models';
// @ts-ignore
import { TemplateCloneQuery } from '../models';
// @ts-ignore
import { TemplateCreateQuery } from '../models';
// @ts-ignore
import { TemplateUpdateQuery } from '../models';
// @ts-ignore
import { V2TemplateRenderQuery } from '../models';
/**
 * TemplatesApi - axios parameter creator
 * @export
 */
export const TemplatesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Create a new custom HTML template. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Create Template
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateCreateQuery} TemplateCreateQuery Query for creating a CODE template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplate: async (revision: string, TemplateCreateQuery: TemplateCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createTemplate', 'revision', revision)
            // verify required parameter 'TemplateCreateQuery' is not null or undefined
            assertParamExists('createTemplate', 'TemplateCreateQuery', TemplateCreateQuery)
            const localVarPath = `/api/templates/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(TemplateCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a clone of a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Create Template Clone
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateCloneQuery} TemplateCloneQuery Query for cloning a template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplateClone: async (id: string, revision: string, TemplateCloneQuery: TemplateCloneQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('createTemplateClone', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createTemplateClone', 'revision', revision)
            // verify required parameter 'TemplateCloneQuery' is not null or undefined
            assertParamExists('createTemplateClone', 'TemplateCloneQuery', TemplateCloneQuery)
            const localVarPath = `/api/templates/{id}/clone/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(TemplateCloneQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.  **Request body parameters** (nested under `attributes`):  * `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). * `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.  Email templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.  Ex. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Templates Read`
         * @summary Create Template Render
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {V2TemplateRenderQuery} V2TemplateRenderQuery Query for rendering a template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplateRender: async (id: string, revision: string, V2TemplateRenderQuery: V2TemplateRenderQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('createTemplateRender', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createTemplateRender', 'revision', revision)
            // verify required parameter 'V2TemplateRenderQuery' is not null or undefined
            assertParamExists('createTemplateRender', 'V2TemplateRenderQuery', V2TemplateRenderQuery)
            const localVarPath = `/api/templates/{id}/render/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(V2TemplateRenderQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Delete Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteTemplate: async (id: string, revision: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('deleteTemplate', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('deleteTemplate', 'revision', revision)
            const localVarPath = `/api/templates/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Read`
         * @summary Get Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>} [fields_template] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTemplate: async (id: string, revision: string, fields_template?: Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getTemplate', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getTemplate', 'revision', revision)
            const localVarPath = `/api/templates/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_template) {
                localVarQueryParameter['fields[template]'] = fields_template.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all templates in an account. Filter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated` Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 20 results per page. Results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Read`
         * @summary Get Templates
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>} [fields_template] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created' | 'id' | '-id' | 'name' | '-name' | 'updated' | '-updated'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTemplates: async (revision: string, fields_template?: Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created' | 'id' | '-id' | 'name' | '-name' | 'updated' | '-updated', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getTemplates', 'revision', revision)
            const localVarPath = `/api/templates/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_template) {
                localVarQueryParameter['fields[template]'] = fields_template.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Update Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateUpdateQuery} TemplateUpdateQuery Query for updating a CODE template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateTemplate: async (id: string, revision: string, TemplateUpdateQuery: TemplateUpdateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateTemplate', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateTemplate', 'revision', revision)
            // verify required parameter 'TemplateUpdateQuery' is not null or undefined
            assertParamExists('updateTemplate', 'TemplateUpdateQuery', TemplateUpdateQuery)
            const localVarPath = `/api/templates/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(TemplateUpdateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * TemplatesApi - functional programming interface
 * @export
 */
export const TemplatesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = TemplatesApiAxiosParamCreator(configuration)
    return {
        /**
         * Create a new custom HTML template. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Create Template
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateCreateQuery} TemplateCreateQuery Query for creating a CODE template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createTemplate(revision: string, TemplateCreateQuery: TemplateCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostTemplateResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createTemplate(revision, TemplateCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a clone of a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Create Template Clone
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateCloneQuery} TemplateCloneQuery Query for cloning a template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createTemplateClone(id: string, revision: string, TemplateCloneQuery: TemplateCloneQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostTemplateResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createTemplateClone(id, revision, TemplateCloneQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.  **Request body parameters** (nested under `attributes`):  * `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). * `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.  Email templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.  Ex. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Templates Read`
         * @summary Create Template Render
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {V2TemplateRenderQuery} V2TemplateRenderQuery Query for rendering a template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createTemplateRender(id: string, revision: string, V2TemplateRenderQuery: V2TemplateRenderQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostTemplateResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createTemplateRender(id, revision, V2TemplateRenderQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Delete Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteTemplate(id: string, revision: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteTemplateResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteTemplate(id, revision, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Read`
         * @summary Get Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>} [fields_template] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTemplate(id: string, revision: string, fields_template?: Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTemplateResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTemplate(id, revision, fields_template, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all templates in an account. Filter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated` Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 20 results per page. Results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Read`
         * @summary Get Templates
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>} [fields_template] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created' | 'id' | '-id' | 'name' | '-name' | 'updated' | '-updated'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTemplates(revision: string, fields_template?: Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created' | 'id' | '-id' | 'name' | '-name' | 'updated' | '-updated', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTemplateResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTemplates(revision, fields_template, filter, page_cursor, sort, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Update Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateUpdateQuery} TemplateUpdateQuery Query for updating a CODE template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateTemplate(id: string, revision: string, TemplateUpdateQuery: TemplateUpdateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PatchTemplateResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateTemplate(id, revision, TemplateUpdateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * TemplatesApi - factory interface
 * @export
 */
export const TemplatesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = TemplatesApiFp(configuration)
    return {
        /**
         * Create a new custom HTML template. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Create Template
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateCreateQuery} TemplateCreateQuery Query for creating a CODE template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplate(revision: string, TemplateCreateQuery: TemplateCreateQuery, options?: any): AxiosPromise<PostTemplateResponse> {
            return localVarFp.createTemplate(revision, TemplateCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a clone of a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Create Template Clone
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateCloneQuery} TemplateCloneQuery Query for cloning a template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplateClone(id: string, revision: string, TemplateCloneQuery: TemplateCloneQuery, options?: any): AxiosPromise<PostTemplateResponse> {
            return localVarFp.createTemplateClone(id, revision, TemplateCloneQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.  **Request body parameters** (nested under `attributes`):  * `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). * `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.  Email templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.  Ex. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Templates Read`
         * @summary Create Template Render
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {V2TemplateRenderQuery} V2TemplateRenderQuery Query for rendering a template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createTemplateRender(id: string, revision: string, V2TemplateRenderQuery: V2TemplateRenderQuery, options?: any): AxiosPromise<PostTemplateResponse> {
            return localVarFp.createTemplateRender(id, revision, V2TemplateRenderQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Delete Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteTemplate(id: string, revision: string, options?: any): AxiosPromise<DeleteTemplateResponse> {
            return localVarFp.deleteTemplate(id, revision, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Read`
         * @summary Get Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>} [fields_template] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTemplate(id: string, revision: string, fields_template?: Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>, options?: any): AxiosPromise<GetTemplateResponse> {
            return localVarFp.getTemplate(id, revision, fields_template, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all templates in an account. Filter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated` Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 20 results per page. Results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Read`
         * @summary Get Templates
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>} [fields_template] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created' | 'id' | '-id' | 'name' | '-name' | 'updated' | '-updated'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTemplates(revision: string, fields_template?: Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created' | 'id' | '-id' | 'name' | '-name' | 'updated' | '-updated', options?: any): AxiosPromise<GetTemplateResponseCollection> {
            return localVarFp.getTemplates(revision, fields_template, filter, page_cursor, sort, options).then((request) => request(axios, basePath));
        },
        /**
         * Update a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
         * @summary Update Template
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {TemplateUpdateQuery} TemplateUpdateQuery Query for updating a CODE template
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateTemplate(id: string, revision: string, TemplateUpdateQuery: TemplateUpdateQuery, options?: any): AxiosPromise<PatchTemplateResponse> {
            return localVarFp.updateTemplate(id, revision, TemplateUpdateQuery, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createTemplate operation in TemplatesApi.
 * @export
 * @interface TemplatesApiCreateTemplateRequest
 */
export interface TemplatesApiCreateTemplateRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof TemplatesApiCreateTemplate
     */
    readonly revision: string

    /**
     * Query for creating a CODE template
     * @type {TemplateCreateQuery}
     * @memberof TemplatesApiCreateTemplate
     */
    readonly TemplateCreateQuery: TemplateCreateQuery
}

/**
 * Request parameters for createTemplateClone operation in TemplatesApi.
 * @export
 * @interface TemplatesApiCreateTemplateCloneRequest
 */
export interface TemplatesApiCreateTemplateCloneRequest {
    /**
     * 
     * @type {string}
     * @memberof TemplatesApiCreateTemplateClone
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof TemplatesApiCreateTemplateClone
     */
    readonly revision: string

    /**
     * Query for cloning a template
     * @type {TemplateCloneQuery}
     * @memberof TemplatesApiCreateTemplateClone
     */
    readonly TemplateCloneQuery: TemplateCloneQuery
}

/**
 * Request parameters for createTemplateRender operation in TemplatesApi.
 * @export
 * @interface TemplatesApiCreateTemplateRenderRequest
 */
export interface TemplatesApiCreateTemplateRenderRequest {
    /**
     * 
     * @type {string}
     * @memberof TemplatesApiCreateTemplateRender
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof TemplatesApiCreateTemplateRender
     */
    readonly revision: string

    /**
     * Query for rendering a template
     * @type {V2TemplateRenderQuery}
     * @memberof TemplatesApiCreateTemplateRender
     */
    readonly V2TemplateRenderQuery: V2TemplateRenderQuery
}

/**
 * Request parameters for deleteTemplate operation in TemplatesApi.
 * @export
 * @interface TemplatesApiDeleteTemplateRequest
 */
export interface TemplatesApiDeleteTemplateRequest {
    /**
     * 
     * @type {string}
     * @memberof TemplatesApiDeleteTemplate
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof TemplatesApiDeleteTemplate
     */
    readonly revision: string
}

/**
 * Request parameters for getTemplate operation in TemplatesApi.
 * @export
 * @interface TemplatesApiGetTemplateRequest
 */
export interface TemplatesApiGetTemplateRequest {
    /**
     * 
     * @type {string}
     * @memberof TemplatesApiGetTemplate
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof TemplatesApiGetTemplate
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>}
     * @memberof TemplatesApiGetTemplate
     */
    readonly fields_template?: Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>
}

/**
 * Request parameters for getTemplates operation in TemplatesApi.
 * @export
 * @interface TemplatesApiGetTemplatesRequest
 */
export interface TemplatesApiGetTemplatesRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof TemplatesApiGetTemplates
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>}
     * @memberof TemplatesApiGetTemplates
     */
    readonly fields_template?: Array<'company_id' | 'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;
     * @type {string}
     * @memberof TemplatesApiGetTemplates
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof TemplatesApiGetTemplates
     */
    readonly page_cursor?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
     * @type {'created' | '-created' | 'id' | '-id' | 'name' | '-name' | 'updated' | '-updated'}
     * @memberof TemplatesApiGetTemplates
     */
    readonly sort?: 'created' | '-created' | 'id' | '-id' | 'name' | '-name' | 'updated' | '-updated'
}

/**
 * Request parameters for updateTemplate operation in TemplatesApi.
 * @export
 * @interface TemplatesApiUpdateTemplateRequest
 */
export interface TemplatesApiUpdateTemplateRequest {
    /**
     * 
     * @type {string}
     * @memberof TemplatesApiUpdateTemplate
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof TemplatesApiUpdateTemplate
     */
    readonly revision: string

    /**
     * Query for updating a CODE template
     * @type {TemplateUpdateQuery}
     * @memberof TemplatesApiUpdateTemplate
     */
    readonly TemplateUpdateQuery: TemplateUpdateQuery
}

/**
 * TemplatesApi - object-oriented interface
 * @export
 * @class TemplatesApi
 * @extends {BaseAPI}
 */
export class TemplatesApi extends BaseAPI {
    /**
     * Create a new custom HTML template. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
     * @summary Create Template
     * @param {TemplatesApiCreateTemplateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    public createTemplate(requestParameters: TemplatesApiCreateTemplateRequest, options?: AxiosRequestConfig) {
        return TemplatesApiFp(this.configuration).createTemplate(requestParameters.revision, requestParameters.TemplateCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a clone of a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
     * @summary Create Template Clone
     * @param {TemplatesApiCreateTemplateCloneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    public createTemplateClone(requestParameters: TemplatesApiCreateTemplateCloneRequest, options?: AxiosRequestConfig) {
        return TemplatesApiFp(this.configuration).createTemplateClone(requestParameters.id, requestParameters.revision, requestParameters.TemplateCloneQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.  **Request body parameters** (nested under `attributes`):  * `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). * `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.  Email templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.  Ex. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Templates Read`
     * @summary Create Template Render
     * @param {TemplatesApiCreateTemplateRenderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    public createTemplateRender(requestParameters: TemplatesApiCreateTemplateRenderRequest, options?: AxiosRequestConfig) {
        return TemplatesApiFp(this.configuration).createTemplateRender(requestParameters.id, requestParameters.revision, requestParameters.V2TemplateRenderQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
     * @summary Delete Template
     * @param {TemplatesApiDeleteTemplateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    public deleteTemplate(requestParameters: TemplatesApiDeleteTemplateRequest, options?: AxiosRequestConfig) {
        return TemplatesApiFp(this.configuration).deleteTemplate(requestParameters.id, requestParameters.revision, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Read`
     * @summary Get Template
     * @param {TemplatesApiGetTemplateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    public getTemplate(requestParameters: TemplatesApiGetTemplateRequest, options?: AxiosRequestConfig) {
        return TemplatesApiFp(this.configuration).getTemplate(requestParameters.id, requestParameters.revision, requestParameters.fields_template, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all templates in an account. Filter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated` Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 20 results per page. Results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Read`
     * @summary Get Templates
     * @param {TemplatesApiGetTemplatesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    public getTemplates(requestParameters: TemplatesApiGetTemplatesRequest, options?: AxiosRequestConfig) {
        return TemplatesApiFp(this.configuration).getTemplates(requestParameters.revision, requestParameters.fields_template, requestParameters.filter, requestParameters.page_cursor, requestParameters.sort, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update a template with the given template ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Templates Write`
     * @summary Update Template
     * @param {TemplatesApiUpdateTemplateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApi
     */
    public updateTemplate(requestParameters: TemplatesApiUpdateTemplateRequest, options?: AxiosRequestConfig) {
        return TemplatesApiFp(this.configuration).updateTemplate(requestParameters.id, requestParameters.revision, requestParameters.TemplateUpdateQuery, options).then((request) => request(this.axios, this.basePath));
    }
}
