/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { GetCatalogItems4XXResponse } from '../models';
// @ts-ignore
import { GetListRelationshipsResponseCollection } from '../models';
// @ts-ignore
import { GetListResponse } from '../models';
// @ts-ignore
import { GetListResponseCollection } from '../models';
// @ts-ignore
import { GetProfileResponseCollection } from '../models';
// @ts-ignore
import { ListCreateQuery } from '../models';
// @ts-ignore
import { ListMembersAddQuery } from '../models';
// @ts-ignore
import { ListMembersDeleteQuery } from '../models';
// @ts-ignore
import { ListPartialUpdateQuery } from '../models';
// @ts-ignore
import { PatchListResponse } from '../models';
// @ts-ignore
import { PostListResponse } from '../models';
/**
 * ListsApi - axios parameter creator
 * @export
 */
export const ListsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Create List
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListCreateQuery} ListCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createList: async (revision: string, ListCreateQuery: ListCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createList', 'revision', revision)
            // verify required parameter 'ListCreateQuery' is not null or undefined
            assertParamExists('createList', 'ListCreateQuery', ListCreateQuery)
            const localVarPath = `/api/lists/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ListCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Add a profile to a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write` `Profiles Write`
         * @summary Add Profile to List
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListMembersAddQuery} ListMembersAddQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createListRelationships: async (id: string, related_resource: 'profiles', revision: string, ListMembersAddQuery: ListMembersAddQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('createListRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('createListRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createListRelationships', 'revision', revision)
            // verify required parameter 'ListMembersAddQuery' is not null or undefined
            assertParamExists('createListRelationships', 'ListMembersAddQuery', ListMembersAddQuery)
            const localVarPath = `/api/lists/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ListMembersAddQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Delete List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteList: async (id: string, revision: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('deleteList', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('deleteList', 'revision', revision)
            const localVarPath = `/api/lists/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Remove a profile from a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write` `Profiles Write`
         * @summary Remove Profile from List
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListMembersDeleteQuery} ListMembersDeleteQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteListRelationships: async (id: string, related_resource: 'profiles', revision: string, ListMembersDeleteQuery: ListMembersDeleteQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('deleteListRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('deleteListRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('deleteListRelationships', 'revision', revision)
            // verify required parameter 'ListMembersDeleteQuery' is not null or undefined
            assertParamExists('deleteListRelationships', 'ListMembersDeleteQuery', ListMembersDeleteQuery)
            const localVarPath = `/api/lists/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ListMembersDeleteQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Get List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getList: async (id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getList', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getList', 'revision', revision)
            const localVarPath = `/api/lists/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_list) {
                localVarQueryParameter['fields[list]'] = fields_list.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all profiles within a list with the given list ID. Use filters to narrow your results. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get List Profiles
         * @param {string} list_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;push_token&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getListProfiles: async (list_id: string, revision: string, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'list_id' is not null or undefined
            assertParamExists('getListProfiles', 'list_id', list_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getListProfiles', 'revision', revision)
            const localVarPath = `/api/lists/{list_id}/profiles/`
                .replace(`{${"list_id"}}`, encodeURIComponent(String(list_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_profile) {
                localVarQueryParameter['fields[profile]'] = fields_profile.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for a list with the given list ID. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get List Profile Relationships
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getListRelationships: async (id: string, related_resource: 'profiles', revision: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getListRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('getListRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getListRelationships', 'revision', revision)
            const localVarPath = `/api/lists/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all lists in an account. Use filters to narrow your results. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read`
         * @summary Get Lists
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLists: async (revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getLists', 'revision', revision)
            const localVarPath = `/api/lists/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_list) {
                localVarQueryParameter['fields[list]'] = fields_list.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Update List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListPartialUpdateQuery} ListPartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateList: async (id: string, revision: string, ListPartialUpdateQuery: ListPartialUpdateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateList', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateList', 'revision', revision)
            // verify required parameter 'ListPartialUpdateQuery' is not null or undefined
            assertParamExists('updateList', 'ListPartialUpdateQuery', ListPartialUpdateQuery)
            const localVarPath = `/api/lists/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ListPartialUpdateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ListsApi - functional programming interface
 * @export
 */
export const ListsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ListsApiAxiosParamCreator(configuration)
    return {
        /**
         * Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Create List
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListCreateQuery} ListCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createList(revision: string, ListCreateQuery: ListCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostListResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createList(revision, ListCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Add a profile to a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write` `Profiles Write`
         * @summary Add Profile to List
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListMembersAddQuery} ListMembersAddQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createListRelationships(id: string, related_resource: 'profiles', revision: string, ListMembersAddQuery: ListMembersAddQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createListRelationships(id, related_resource, revision, ListMembersAddQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Delete List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteList(id: string, revision: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteList(id, revision, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Remove a profile from a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write` `Profiles Write`
         * @summary Remove Profile from List
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListMembersDeleteQuery} ListMembersDeleteQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteListRelationships(id: string, related_resource: 'profiles', revision: string, ListMembersDeleteQuery: ListMembersDeleteQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteListRelationships(id, related_resource, revision, ListMembersDeleteQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Get List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getList(id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetListResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getList(id, revision, fields_list, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all profiles within a list with the given list ID. Use filters to narrow your results. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get List Profiles
         * @param {string} list_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;push_token&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getListProfiles(list_id: string, revision: string, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetProfileResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getListProfiles(list_id, revision, fields_profile, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for a list with the given list ID. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get List Profile Relationships
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getListRelationships(id: string, related_resource: 'profiles', revision: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetListRelationshipsResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getListRelationships(id, related_resource, revision, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all lists in an account. Use filters to narrow your results. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read`
         * @summary Get Lists
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getLists(revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetListResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getLists(revision, fields_list, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Update List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListPartialUpdateQuery} ListPartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateList(id: string, revision: string, ListPartialUpdateQuery: ListPartialUpdateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PatchListResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateList(id, revision, ListPartialUpdateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ListsApi - factory interface
 * @export
 */
export const ListsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ListsApiFp(configuration)
    return {
        /**
         * Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Create List
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListCreateQuery} ListCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createList(revision: string, ListCreateQuery: ListCreateQuery, options?: any): AxiosPromise<PostListResponse> {
            return localVarFp.createList(revision, ListCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Add a profile to a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write` `Profiles Write`
         * @summary Add Profile to List
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListMembersAddQuery} ListMembersAddQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createListRelationships(id: string, related_resource: 'profiles', revision: string, ListMembersAddQuery: ListMembersAddQuery, options?: any): AxiosPromise<void> {
            return localVarFp.createListRelationships(id, related_resource, revision, ListMembersAddQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Delete List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteList(id: string, revision: string, options?: any): AxiosPromise<void> {
            return localVarFp.deleteList(id, revision, options).then((request) => request(axios, basePath));
        },
        /**
         * Remove a profile from a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write` `Profiles Write`
         * @summary Remove Profile from List
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListMembersDeleteQuery} ListMembersDeleteQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteListRelationships(id: string, related_resource: 'profiles', revision: string, ListMembersDeleteQuery: ListMembersDeleteQuery, options?: any): AxiosPromise<void> {
            return localVarFp.deleteListRelationships(id, related_resource, revision, ListMembersDeleteQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Get List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getList(id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, options?: any): AxiosPromise<GetListResponse> {
            return localVarFp.getList(id, revision, fields_list, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all profiles within a list with the given list ID. Use filters to narrow your results. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get List Profiles
         * @param {string} list_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;push_token&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getListProfiles(list_id: string, revision: string, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetProfileResponseCollection> {
            return localVarFp.getListProfiles(list_id, revision, fields_profile, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for a list with the given list ID. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get List Profile Relationships
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getListRelationships(id: string, related_resource: 'profiles', revision: string, page_cursor?: string, options?: any): AxiosPromise<GetListRelationshipsResponseCollection> {
            return localVarFp.getListRelationships(id, related_resource, revision, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all lists in an account. Use filters to narrow your results. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read`
         * @summary Get Lists
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLists(revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetListResponseCollection> {
            return localVarFp.getLists(revision, fields_list, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
         * @summary Update List
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ListPartialUpdateQuery} ListPartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateList(id: string, revision: string, ListPartialUpdateQuery: ListPartialUpdateQuery, options?: any): AxiosPromise<PatchListResponse> {
            return localVarFp.updateList(id, revision, ListPartialUpdateQuery, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createList operation in ListsApi.
 * @export
 * @interface ListsApiCreateListRequest
 */
export interface ListsApiCreateListRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiCreateList
     */
    readonly revision: string

    /**
     * 
     * @type {ListCreateQuery}
     * @memberof ListsApiCreateList
     */
    readonly ListCreateQuery: ListCreateQuery
}

/**
 * Request parameters for createListRelationships operation in ListsApi.
 * @export
 * @interface ListsApiCreateListRelationshipsRequest
 */
export interface ListsApiCreateListRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof ListsApiCreateListRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'profiles'}
     * @memberof ListsApiCreateListRelationships
     */
    readonly related_resource: 'profiles'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiCreateListRelationships
     */
    readonly revision: string

    /**
     * 
     * @type {ListMembersAddQuery}
     * @memberof ListsApiCreateListRelationships
     */
    readonly ListMembersAddQuery: ListMembersAddQuery
}

/**
 * Request parameters for deleteList operation in ListsApi.
 * @export
 * @interface ListsApiDeleteListRequest
 */
export interface ListsApiDeleteListRequest {
    /**
     * 
     * @type {string}
     * @memberof ListsApiDeleteList
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiDeleteList
     */
    readonly revision: string
}

/**
 * Request parameters for deleteListRelationships operation in ListsApi.
 * @export
 * @interface ListsApiDeleteListRelationshipsRequest
 */
export interface ListsApiDeleteListRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof ListsApiDeleteListRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'profiles'}
     * @memberof ListsApiDeleteListRelationships
     */
    readonly related_resource: 'profiles'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiDeleteListRelationships
     */
    readonly revision: string

    /**
     * 
     * @type {ListMembersDeleteQuery}
     * @memberof ListsApiDeleteListRelationships
     */
    readonly ListMembersDeleteQuery: ListMembersDeleteQuery
}

/**
 * Request parameters for getList operation in ListsApi.
 * @export
 * @interface ListsApiGetListRequest
 */
export interface ListsApiGetListRequest {
    /**
     * 
     * @type {string}
     * @memberof ListsApiGetList
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiGetList
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'name' | 'created' | 'updated'>}
     * @memberof ListsApiGetList
     */
    readonly fields_list?: Array<'name' | 'created' | 'updated'>
}

/**
 * Request parameters for getListProfiles operation in ListsApi.
 * @export
 * @interface ListsApiGetListProfilesRequest
 */
export interface ListsApiGetListProfilesRequest {
    /**
     * 
     * @type {string}
     * @memberof ListsApiGetListProfiles
     */
    readonly list_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiGetListProfiles
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>}
     * @memberof ListsApiGetListProfiles
     */
    readonly fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;push_token&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof ListsApiGetListProfiles
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof ListsApiGetListProfiles
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getListRelationships operation in ListsApi.
 * @export
 * @interface ListsApiGetListRelationshipsRequest
 */
export interface ListsApiGetListRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof ListsApiGetListRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'profiles'}
     * @memberof ListsApiGetListRelationships
     */
    readonly related_resource: 'profiles'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiGetListRelationships
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof ListsApiGetListRelationships
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getLists operation in ListsApi.
 * @export
 * @interface ListsApiGetListsRequest
 */
export interface ListsApiGetListsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiGetLists
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'name' | 'created' | 'updated'>}
     * @memberof ListsApiGetLists
     */
    readonly fields_list?: Array<'name' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;
     * @type {string}
     * @memberof ListsApiGetLists
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof ListsApiGetLists
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for updateList operation in ListsApi.
 * @export
 * @interface ListsApiUpdateListRequest
 */
export interface ListsApiUpdateListRequest {
    /**
     * 
     * @type {string}
     * @memberof ListsApiUpdateList
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ListsApiUpdateList
     */
    readonly revision: string

    /**
     * 
     * @type {ListPartialUpdateQuery}
     * @memberof ListsApiUpdateList
     */
    readonly ListPartialUpdateQuery: ListPartialUpdateQuery
}

/**
 * ListsApi - object-oriented interface
 * @export
 * @class ListsApi
 * @extends {BaseAPI}
 */
export class ListsApi extends BaseAPI {
    /**
     * Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
     * @summary Create List
     * @param {ListsApiCreateListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public createList(requestParameters: ListsApiCreateListRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).createList(requestParameters.revision, requestParameters.ListCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Add a profile to a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write` `Profiles Write`
     * @summary Add Profile to List
     * @param {ListsApiCreateListRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public createListRelationships(requestParameters: ListsApiCreateListRelationshipsRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).createListRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.ListMembersAddQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
     * @summary Delete List
     * @param {ListsApiDeleteListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public deleteList(requestParameters: ListsApiDeleteListRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).deleteList(requestParameters.id, requestParameters.revision, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Remove a profile from a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write` `Profiles Write`
     * @summary Remove Profile from List
     * @param {ListsApiDeleteListRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public deleteListRelationships(requestParameters: ListsApiDeleteListRelationshipsRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).deleteListRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.ListMembersDeleteQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
     * @summary Get List
     * @param {ListsApiGetListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public getList(requestParameters: ListsApiGetListRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).getList(requestParameters.id, requestParameters.revision, requestParameters.fields_list, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all profiles within a list with the given list ID. Use filters to narrow your results. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read` `Profiles Read`
     * @summary Get List Profiles
     * @param {ListsApiGetListProfilesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public getListProfiles(requestParameters: ListsApiGetListProfilesRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).getListProfiles(requestParameters.list_id, requestParameters.revision, requestParameters.fields_profile, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for a list with the given list ID. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read` `Profiles Read`
     * @summary Get List Profile Relationships
     * @param {ListsApiGetListRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public getListRelationships(requestParameters: ListsApiGetListRelationshipsRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).getListRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all lists in an account. Use filters to narrow your results. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Read`
     * @summary Get Lists
     * @param {ListsApiGetListsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public getLists(requestParameters: ListsApiGetListsRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).getLists(requestParameters.revision, requestParameters.fields_list, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `List Write`
     * @summary Update List
     * @param {ListsApiUpdateListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListsApi
     */
    public updateList(requestParameters: ListsApiUpdateListRequest, options?: AxiosRequestConfig) {
        return ListsApiFp(this.configuration).updateList(requestParameters.id, requestParameters.revision, requestParameters.ListPartialUpdateQuery, options).then((request) => request(this.axios, this.basePath));
    }
}
