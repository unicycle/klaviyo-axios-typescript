/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { EventCreateQuery } from '../models';
// @ts-ignore
import { GetCatalogItems4XXResponse } from '../models';
// @ts-ignore
import { OnsiteProfileCreateQuery } from '../models';
// @ts-ignore
import { OnsiteSubscriptionCreateQuery } from '../models';
/**
 * ClientApi - axios parameter creator
 * @export
 */
export const ClientApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Create a new event to track a profile\'s activity. This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create [events] from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/v2022-10-17/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Events Write`
         * @summary Create Client Event
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {EventCreateQuery} EventCreateQuery Event to create.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClientEvent: async (company_id: string, revision: string, EventCreateQuery: EventCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'company_id' is not null or undefined
            assertParamExists('createClientEvent', 'company_id', company_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createClientEvent', 'revision', revision)
            // verify required parameter 'EventCreateQuery' is not null or undefined
            assertParamExists('createClientEvent', 'EventCreateQuery', EventCreateQuery)
            const localVarPath = `/client/events/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (company_id !== undefined) {
                localVarQueryParameter['company_id'] = company_id;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(EventCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create and update properties about a profile without tracking an associated event. This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Profiles Write`
         * @summary Create Client Profile
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {OnsiteProfileCreateQuery} OnsiteProfileCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClientProfile: async (company_id: string, revision: string, OnsiteProfileCreateQuery: OnsiteProfileCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'company_id' is not null or undefined
            assertParamExists('createClientProfile', 'company_id', company_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createClientProfile', 'revision', revision)
            // verify required parameter 'OnsiteProfileCreateQuery' is not null or undefined
            assertParamExists('createClientProfile', 'OnsiteProfileCreateQuery', OnsiteProfileCreateQuery)
            const localVarPath = `/client/profiles/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (company_id !== undefined) {
                localVarQueryParameter['company_id'] = company_id;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(OnsiteProfileCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a new subscription for the given list ID and channel:  * Email `email` * SMS `phone_number`  This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/profile-subscription-bulk-create-jobs](https://developers.klaviyo.com/en/reference/subscribe_profiles)<br><br>*Rate limits*:<br>Burst: `100/s`<br>Steady: `100/m`  **Scopes:** `Subscriptions Write`
         * @summary Create Client Subscription
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {OnsiteSubscriptionCreateQuery} OnsiteSubscriptionCreateQuery Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number attributes respectively. One of either email or phone_number must be provided. To create a subscription and consent record for only one channel but still include the other channel as a profile property the consent channel can be provided as a top level attribute and the other channel can be included in the properties object.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClientSubscription: async (company_id: string, revision: string, OnsiteSubscriptionCreateQuery: OnsiteSubscriptionCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'company_id' is not null or undefined
            assertParamExists('createClientSubscription', 'company_id', company_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createClientSubscription', 'revision', revision)
            // verify required parameter 'OnsiteSubscriptionCreateQuery' is not null or undefined
            assertParamExists('createClientSubscription', 'OnsiteSubscriptionCreateQuery', OnsiteSubscriptionCreateQuery)
            const localVarPath = `/client/subscriptions/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (company_id !== undefined) {
                localVarQueryParameter['company_id'] = company_id;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(OnsiteSubscriptionCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ClientApi - functional programming interface
 * @export
 */
export const ClientApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ClientApiAxiosParamCreator(configuration)
    return {
        /**
         * Create a new event to track a profile\'s activity. This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create [events] from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/v2022-10-17/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Events Write`
         * @summary Create Client Event
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {EventCreateQuery} EventCreateQuery Event to create.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createClientEvent(company_id: string, revision: string, EventCreateQuery: EventCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createClientEvent(company_id, revision, EventCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create and update properties about a profile without tracking an associated event. This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Profiles Write`
         * @summary Create Client Profile
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {OnsiteProfileCreateQuery} OnsiteProfileCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createClientProfile(company_id: string, revision: string, OnsiteProfileCreateQuery: OnsiteProfileCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createClientProfile(company_id, revision, OnsiteProfileCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a new subscription for the given list ID and channel:  * Email `email` * SMS `phone_number`  This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/profile-subscription-bulk-create-jobs](https://developers.klaviyo.com/en/reference/subscribe_profiles)<br><br>*Rate limits*:<br>Burst: `100/s`<br>Steady: `100/m`  **Scopes:** `Subscriptions Write`
         * @summary Create Client Subscription
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {OnsiteSubscriptionCreateQuery} OnsiteSubscriptionCreateQuery Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number attributes respectively. One of either email or phone_number must be provided. To create a subscription and consent record for only one channel but still include the other channel as a profile property the consent channel can be provided as a top level attribute and the other channel can be included in the properties object.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createClientSubscription(company_id: string, revision: string, OnsiteSubscriptionCreateQuery: OnsiteSubscriptionCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createClientSubscription(company_id, revision, OnsiteSubscriptionCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ClientApi - factory interface
 * @export
 */
export const ClientApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ClientApiFp(configuration)
    return {
        /**
         * Create a new event to track a profile\'s activity. This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create [events] from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/v2022-10-17/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Events Write`
         * @summary Create Client Event
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {EventCreateQuery} EventCreateQuery Event to create.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClientEvent(company_id: string, revision: string, EventCreateQuery: EventCreateQuery, options?: any): AxiosPromise<void> {
            return localVarFp.createClientEvent(company_id, revision, EventCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create and update properties about a profile without tracking an associated event. This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Profiles Write`
         * @summary Create Client Profile
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {OnsiteProfileCreateQuery} OnsiteProfileCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClientProfile(company_id: string, revision: string, OnsiteProfileCreateQuery: OnsiteProfileCreateQuery, options?: any): AxiosPromise<void> {
            return localVarFp.createClientProfile(company_id, revision, OnsiteProfileCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a new subscription for the given list ID and channel:  * Email `email` * SMS `phone_number`  This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/profile-subscription-bulk-create-jobs](https://developers.klaviyo.com/en/reference/subscribe_profiles)<br><br>*Rate limits*:<br>Burst: `100/s`<br>Steady: `100/m`  **Scopes:** `Subscriptions Write`
         * @summary Create Client Subscription
         * @param {string} company_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {OnsiteSubscriptionCreateQuery} OnsiteSubscriptionCreateQuery Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number attributes respectively. One of either email or phone_number must be provided. To create a subscription and consent record for only one channel but still include the other channel as a profile property the consent channel can be provided as a top level attribute and the other channel can be included in the properties object.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClientSubscription(company_id: string, revision: string, OnsiteSubscriptionCreateQuery: OnsiteSubscriptionCreateQuery, options?: any): AxiosPromise<void> {
            return localVarFp.createClientSubscription(company_id, revision, OnsiteSubscriptionCreateQuery, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createClientEvent operation in ClientApi.
 * @export
 * @interface ClientApiCreateClientEventRequest
 */
export interface ClientApiCreateClientEventRequest {
    /**
     * 
     * @type {string}
     * @memberof ClientApiCreateClientEvent
     */
    readonly company_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ClientApiCreateClientEvent
     */
    readonly revision: string

    /**
     * Event to create.
     * @type {EventCreateQuery}
     * @memberof ClientApiCreateClientEvent
     */
    readonly EventCreateQuery: EventCreateQuery
}

/**
 * Request parameters for createClientProfile operation in ClientApi.
 * @export
 * @interface ClientApiCreateClientProfileRequest
 */
export interface ClientApiCreateClientProfileRequest {
    /**
     * 
     * @type {string}
     * @memberof ClientApiCreateClientProfile
     */
    readonly company_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ClientApiCreateClientProfile
     */
    readonly revision: string

    /**
     * 
     * @type {OnsiteProfileCreateQuery}
     * @memberof ClientApiCreateClientProfile
     */
    readonly OnsiteProfileCreateQuery: OnsiteProfileCreateQuery
}

/**
 * Request parameters for createClientSubscription operation in ClientApi.
 * @export
 * @interface ClientApiCreateClientSubscriptionRequest
 */
export interface ClientApiCreateClientSubscriptionRequest {
    /**
     * 
     * @type {string}
     * @memberof ClientApiCreateClientSubscription
     */
    readonly company_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ClientApiCreateClientSubscription
     */
    readonly revision: string

    /**
     * Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number attributes respectively. One of either email or phone_number must be provided. To create a subscription and consent record for only one channel but still include the other channel as a profile property the consent channel can be provided as a top level attribute and the other channel can be included in the properties object.
     * @type {OnsiteSubscriptionCreateQuery}
     * @memberof ClientApiCreateClientSubscription
     */
    readonly OnsiteSubscriptionCreateQuery: OnsiteSubscriptionCreateQuery
}

/**
 * ClientApi - object-oriented interface
 * @export
 * @class ClientApi
 * @extends {BaseAPI}
 */
export class ClientApi extends BaseAPI {
    /**
     * Create a new event to track a profile\'s activity. This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create [events] from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/v2022-10-17/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Events Write`
     * @summary Create Client Event
     * @param {ClientApiCreateClientEventRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClientApi
     */
    public createClientEvent(requestParameters: ClientApiCreateClientEventRequest, options?: AxiosRequestConfig) {
        return ClientApiFp(this.configuration).createClientEvent(requestParameters.company_id, requestParameters.revision, requestParameters.EventCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create and update properties about a profile without tracking an associated event. This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Profiles Write`
     * @summary Create Client Profile
     * @param {ClientApiCreateClientProfileRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClientApi
     */
    public createClientProfile(requestParameters: ClientApiCreateClientProfileRequest, options?: AxiosRequestConfig) {
        return ClientApiFp(this.configuration).createClientProfile(requestParameters.company_id, requestParameters.revision, requestParameters.OnsiteProfileCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a new subscription for the given list ID and channel:  * Email `email` * SMS `phone_number`  This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/profile-subscription-bulk-create-jobs](https://developers.klaviyo.com/en/reference/subscribe_profiles)<br><br>*Rate limits*:<br>Burst: `100/s`<br>Steady: `100/m`  **Scopes:** `Subscriptions Write`
     * @summary Create Client Subscription
     * @param {ClientApiCreateClientSubscriptionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClientApi
     */
    public createClientSubscription(requestParameters: ClientApiCreateClientSubscriptionRequest, options?: AxiosRequestConfig) {
        return ClientApiFp(this.configuration).createClientSubscription(requestParameters.company_id, requestParameters.revision, requestParameters.OnsiteSubscriptionCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }
}
