/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { GetCatalogItems4XXResponse } from '../models';
// @ts-ignore
import { GetListResponseCollection } from '../models';
// @ts-ignore
import { GetProfileResponseCollectionWithIncludedSection } from '../models';
// @ts-ignore
import { GetProfileResponseWithIncludedSection } from '../models';
// @ts-ignore
import { GetProfileSegmentRelationshipsResponseCollection } from '../models';
// @ts-ignore
import { GetSegmentResponseCollection } from '../models';
// @ts-ignore
import { PatchProfileResponse } from '../models';
// @ts-ignore
import { PostProfileResponse } from '../models';
// @ts-ignore
import { ProfileCreateQuery } from '../models';
// @ts-ignore
import { ProfilePartialUpdateQuery } from '../models';
// @ts-ignore
import { SubscriptionCreateJobCreateQuery } from '../models';
// @ts-ignore
import { SuppressionCreateJobCreateQuery } from '../models';
// @ts-ignore
import { UnsubscriptionCreateJobCreateQuery } from '../models';
// @ts-ignore
import { UnsuppressionCreateJobCreateQuery } from '../models';
/**
 * ProfilesApi - axios parameter creator
 * @export
 */
export const ProfilesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Create a new profile.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write`
         * @summary Create Profile
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ProfileCreateQuery} ProfileCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createProfile: async (revision: string, ProfileCreateQuery: ProfileCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createProfile', 'revision', revision)
            // verify required parameter 'ProfileCreateQuery' is not null or undefined
            assertParamExists('createProfile', 'ProfileCreateQuery', ProfileCreateQuery)
            const localVarPath = `/api/profiles/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ProfileCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get the profile with the given profile ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `lists` memberships, `segments` memberships\"<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Read`
         * @summary Get Profile
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'lists' | 'segments'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfile: async (id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, fields_segment?: Array<'name' | 'created' | 'updated'>, include?: Array<'lists' | 'segments'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getProfile', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getProfile', 'revision', revision)
            const localVarPath = `/api/profiles/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_list) {
                localVarQueryParameter['fields[list]'] = fields_list.join(COLLECTION_FORMATS.csv);
            }

            if (fields_profile) {
                localVarQueryParameter['fields[profile]'] = fields_profile.join(COLLECTION_FORMATS.csv);
            }

            if (fields_segment) {
                localVarQueryParameter['fields[segment]'] = fields_segment.join(COLLECTION_FORMATS.csv);
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get Profile Lists
         * @param {string} profile_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfileLists: async (profile_id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'profile_id' is not null or undefined
            assertParamExists('getProfileLists', 'profile_id', profile_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getProfileLists', 'revision', revision)
            const localVarPath = `/api/profiles/{profile_id}/lists/`
                .replace(`{${"profile_id"}}`, encodeURIComponent(String(profile_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_list) {
                localVarQueryParameter['fields[list]'] = fields_list.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get list membership or segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Profile Relationships
         * @param {string} id 
         * @param {'lists' | 'segments'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfileRelationships: async (id: string, related_resource: 'lists' | 'segments', revision: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getProfileRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('getProfileRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getProfileRelationships', 'revision', revision)
            const localVarPath = `/api/profiles/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Profile Segments
         * @param {string} profile_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfileSegments: async (profile_id: string, revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'profile_id' is not null or undefined
            assertParamExists('getProfileSegments', 'profile_id', profile_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getProfileSegments', 'revision', revision)
            const localVarPath = `/api/profiles/{profile_id}/segments/`
                .replace(`{${"profile_id"}}`, encodeURIComponent(String(profile_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_segment) {
                localVarQueryParameter['fields[segment]'] = fields_segment.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all profiles in an account. Profiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `email` Use filters to narrow your results. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 20 profiles per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Write`
         * @summary Get Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;external_id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;anonymous_id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;, &#x60;less-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created' | 'email' | '-email' | 'id' | '-id'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfiles: async (revision: string, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created' | 'email' | '-email' | 'id' | '-id', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getProfiles', 'revision', revision)
            const localVarPath = `/api/profiles/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_profile) {
                localVarQueryParameter['fields[profile]'] = fields_profile.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Subscribe one or more profiles to email marketing, SMS marketing, or both. If the list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message. To add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/v2022-10-17/reference/create_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `List Write` `Profiles Write` `Subscriptions Write`
         * @summary Subscribe Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SubscriptionCreateJobCreateQuery} SubscriptionCreateJobCreateQuery Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels. If a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        subscribeProfiles: async (revision: string, SubscriptionCreateJobCreateQuery: SubscriptionCreateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('subscribeProfiles', 'revision', revision)
            // verify required parameter 'SubscriptionCreateJobCreateQuery' is not null or undefined
            assertParamExists('subscribeProfiles', 'SubscriptionCreateJobCreateQuery', SubscriptionCreateJobCreateQuery)
            const localVarPath = `/api/profile-subscription-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(SubscriptionCreateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Manually suppress one or more profiles. Manually suppressed profiles will not receive email marketing. Not supported for SMS marketing.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write` `Subscriptions Write`
         * @summary Suppress Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SuppressionCreateJobCreateQuery} SuppressionCreateJobCreateQuery Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        suppressProfiles: async (revision: string, SuppressionCreateJobCreateQuery: SuppressionCreateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('suppressProfiles', 'revision', revision)
            // verify required parameter 'SuppressionCreateJobCreateQuery' is not null or undefined
            assertParamExists('suppressProfiles', 'SuppressionCreateJobCreateQuery', SuppressionCreateJobCreateQuery)
            const localVarPath = `/api/profile-suppression-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(SuppressionCreateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Unsubscribe one or more profiles to email marketing, SMS marketing, or both. To remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/v2022-10-17/reference/delete_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `List Write` `Profiles Write` `Subscriptions Write`
         * @summary Unsubscribe Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {UnsubscriptionCreateJobCreateQuery} UnsubscriptionCreateJobCreateQuery Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list. Either email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unsubscribeProfiles: async (revision: string, UnsubscriptionCreateJobCreateQuery: UnsubscriptionCreateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('unsubscribeProfiles', 'revision', revision)
            // verify required parameter 'UnsubscriptionCreateJobCreateQuery' is not null or undefined
            assertParamExists('unsubscribeProfiles', 'UnsubscriptionCreateJobCreateQuery', UnsubscriptionCreateJobCreateQuery)
            const localVarPath = `/api/profile-unsubscription-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(UnsubscriptionCreateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Unsuppress one or more profiles. Unsuppressed profiles will receive email marketing. Not supported for SMS marketing. Profiles suppressed due to a hard bounced email will not be unsuppressed.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Subscriptions Write`
         * @summary Unsuppress Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {UnsuppressionCreateJobCreateQuery} UnsuppressionCreateJobCreateQuery Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, no action will be taken.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unsuppressProfiles: async (revision: string, UnsuppressionCreateJobCreateQuery: UnsuppressionCreateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('unsuppressProfiles', 'revision', revision)
            // verify required parameter 'UnsuppressionCreateJobCreateQuery' is not null or undefined
            assertParamExists('unsuppressProfiles', 'UnsuppressionCreateJobCreateQuery', UnsuppressionCreateJobCreateQuery)
            const localVarPath = `/api/profile-unsuppression-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(UnsuppressionCreateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update the profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write`
         * @summary Update Profile
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ProfilePartialUpdateQuery} ProfilePartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateProfile: async (id: string, revision: string, ProfilePartialUpdateQuery: ProfilePartialUpdateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateProfile', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateProfile', 'revision', revision)
            // verify required parameter 'ProfilePartialUpdateQuery' is not null or undefined
            assertParamExists('updateProfile', 'ProfilePartialUpdateQuery', ProfilePartialUpdateQuery)
            const localVarPath = `/api/profiles/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(ProfilePartialUpdateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProfilesApi - functional programming interface
 * @export
 */
export const ProfilesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProfilesApiAxiosParamCreator(configuration)
    return {
        /**
         * Create a new profile.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write`
         * @summary Create Profile
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ProfileCreateQuery} ProfileCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createProfile(revision: string, ProfileCreateQuery: ProfileCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostProfileResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createProfile(revision, ProfileCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get the profile with the given profile ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `lists` memberships, `segments` memberships\"<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Read`
         * @summary Get Profile
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'lists' | 'segments'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProfile(id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, fields_segment?: Array<'name' | 'created' | 'updated'>, include?: Array<'lists' | 'segments'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetProfileResponseWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProfile(id, revision, fields_list, fields_profile, fields_segment, include, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get Profile Lists
         * @param {string} profile_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProfileLists(profile_id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetListResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProfileLists(profile_id, revision, fields_list, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get list membership or segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Profile Relationships
         * @param {string} id 
         * @param {'lists' | 'segments'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProfileRelationships(id: string, related_resource: 'lists' | 'segments', revision: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetProfileSegmentRelationshipsResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProfileRelationships(id, related_resource, revision, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Profile Segments
         * @param {string} profile_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProfileSegments(profile_id: string, revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSegmentResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProfileSegments(profile_id, revision, fields_segment, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all profiles in an account. Profiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `email` Use filters to narrow your results. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 20 profiles per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Write`
         * @summary Get Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;external_id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;anonymous_id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;, &#x60;less-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created' | 'email' | '-email' | 'id' | '-id'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProfiles(revision: string, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created' | 'email' | '-email' | 'id' | '-id', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetProfileResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProfiles(revision, fields_profile, filter, page_cursor, sort, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Subscribe one or more profiles to email marketing, SMS marketing, or both. If the list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message. To add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/v2022-10-17/reference/create_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `List Write` `Profiles Write` `Subscriptions Write`
         * @summary Subscribe Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SubscriptionCreateJobCreateQuery} SubscriptionCreateJobCreateQuery Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels. If a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async subscribeProfiles(revision: string, SubscriptionCreateJobCreateQuery: SubscriptionCreateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.subscribeProfiles(revision, SubscriptionCreateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Manually suppress one or more profiles. Manually suppressed profiles will not receive email marketing. Not supported for SMS marketing.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write` `Subscriptions Write`
         * @summary Suppress Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SuppressionCreateJobCreateQuery} SuppressionCreateJobCreateQuery Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async suppressProfiles(revision: string, SuppressionCreateJobCreateQuery: SuppressionCreateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.suppressProfiles(revision, SuppressionCreateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Unsubscribe one or more profiles to email marketing, SMS marketing, or both. To remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/v2022-10-17/reference/delete_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `List Write` `Profiles Write` `Subscriptions Write`
         * @summary Unsubscribe Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {UnsubscriptionCreateJobCreateQuery} UnsubscriptionCreateJobCreateQuery Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list. Either email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async unsubscribeProfiles(revision: string, UnsubscriptionCreateJobCreateQuery: UnsubscriptionCreateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.unsubscribeProfiles(revision, UnsubscriptionCreateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Unsuppress one or more profiles. Unsuppressed profiles will receive email marketing. Not supported for SMS marketing. Profiles suppressed due to a hard bounced email will not be unsuppressed.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Subscriptions Write`
         * @summary Unsuppress Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {UnsuppressionCreateJobCreateQuery} UnsuppressionCreateJobCreateQuery Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, no action will be taken.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async unsuppressProfiles(revision: string, UnsuppressionCreateJobCreateQuery: UnsuppressionCreateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.unsuppressProfiles(revision, UnsuppressionCreateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update the profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write`
         * @summary Update Profile
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ProfilePartialUpdateQuery} ProfilePartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateProfile(id: string, revision: string, ProfilePartialUpdateQuery: ProfilePartialUpdateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PatchProfileResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateProfile(id, revision, ProfilePartialUpdateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProfilesApi - factory interface
 * @export
 */
export const ProfilesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProfilesApiFp(configuration)
    return {
        /**
         * Create a new profile.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write`
         * @summary Create Profile
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ProfileCreateQuery} ProfileCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createProfile(revision: string, ProfileCreateQuery: ProfileCreateQuery, options?: any): AxiosPromise<PostProfileResponse> {
            return localVarFp.createProfile(revision, ProfileCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Get the profile with the given profile ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `lists` memberships, `segments` memberships\"<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Read`
         * @summary Get Profile
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'lists' | 'segments'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfile(id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, fields_segment?: Array<'name' | 'created' | 'updated'>, include?: Array<'lists' | 'segments'>, options?: any): AxiosPromise<GetProfileResponseWithIncludedSection> {
            return localVarFp.getProfile(id, revision, fields_list, fields_profile, fields_segment, include, options).then((request) => request(axios, basePath));
        },
        /**
         * Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `List Read` `Profiles Read`
         * @summary Get Profile Lists
         * @param {string} profile_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_list] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfileLists(profile_id: string, revision: string, fields_list?: Array<'name' | 'created' | 'updated'>, options?: any): AxiosPromise<GetListResponseCollection> {
            return localVarFp.getProfileLists(profile_id, revision, fields_list, options).then((request) => request(axios, basePath));
        },
        /**
         * Get list membership or segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Profile Relationships
         * @param {string} id 
         * @param {'lists' | 'segments'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfileRelationships(id: string, related_resource: 'lists' | 'segments', revision: string, options?: any): AxiosPromise<GetProfileSegmentRelationshipsResponseCollection> {
            return localVarFp.getProfileRelationships(id, related_resource, revision, options).then((request) => request(axios, basePath));
        },
        /**
         * Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Profile Segments
         * @param {string} profile_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfileSegments(profile_id: string, revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, options?: any): AxiosPromise<GetSegmentResponseCollection> {
            return localVarFp.getProfileSegments(profile_id, revision, fields_segment, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all profiles in an account. Profiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `email` Use filters to narrow your results. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 20 profiles per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Write`
         * @summary Get Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>} [fields_profile] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;external_id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;anonymous_id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;, &#x60;less-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created' | 'email' | '-email' | 'id' | '-id'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProfiles(revision: string, fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created' | 'email' | '-email' | 'id' | '-id', options?: any): AxiosPromise<GetProfileResponseCollectionWithIncludedSection> {
            return localVarFp.getProfiles(revision, fields_profile, filter, page_cursor, sort, options).then((request) => request(axios, basePath));
        },
        /**
         * Subscribe one or more profiles to email marketing, SMS marketing, or both. If the list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message. To add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/v2022-10-17/reference/create_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `List Write` `Profiles Write` `Subscriptions Write`
         * @summary Subscribe Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SubscriptionCreateJobCreateQuery} SubscriptionCreateJobCreateQuery Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels. If a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        subscribeProfiles(revision: string, SubscriptionCreateJobCreateQuery: SubscriptionCreateJobCreateQuery, options?: any): AxiosPromise<void> {
            return localVarFp.subscribeProfiles(revision, SubscriptionCreateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Manually suppress one or more profiles. Manually suppressed profiles will not receive email marketing. Not supported for SMS marketing.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write` `Subscriptions Write`
         * @summary Suppress Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SuppressionCreateJobCreateQuery} SuppressionCreateJobCreateQuery Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        suppressProfiles(revision: string, SuppressionCreateJobCreateQuery: SuppressionCreateJobCreateQuery, options?: any): AxiosPromise<void> {
            return localVarFp.suppressProfiles(revision, SuppressionCreateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Unsubscribe one or more profiles to email marketing, SMS marketing, or both. To remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/v2022-10-17/reference/delete_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `List Write` `Profiles Write` `Subscriptions Write`
         * @summary Unsubscribe Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {UnsubscriptionCreateJobCreateQuery} UnsubscriptionCreateJobCreateQuery Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list. Either email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unsubscribeProfiles(revision: string, UnsubscriptionCreateJobCreateQuery: UnsubscriptionCreateJobCreateQuery, options?: any): AxiosPromise<void> {
            return localVarFp.unsubscribeProfiles(revision, UnsubscriptionCreateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Unsuppress one or more profiles. Unsuppressed profiles will receive email marketing. Not supported for SMS marketing. Profiles suppressed due to a hard bounced email will not be unsuppressed.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Subscriptions Write`
         * @summary Unsuppress Profiles
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {UnsuppressionCreateJobCreateQuery} UnsuppressionCreateJobCreateQuery Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, no action will be taken.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unsuppressProfiles(revision: string, UnsuppressionCreateJobCreateQuery: UnsuppressionCreateJobCreateQuery, options?: any): AxiosPromise<void> {
            return localVarFp.unsuppressProfiles(revision, UnsuppressionCreateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Update the profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write`
         * @summary Update Profile
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {ProfilePartialUpdateQuery} ProfilePartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateProfile(id: string, revision: string, ProfilePartialUpdateQuery: ProfilePartialUpdateQuery, options?: any): AxiosPromise<PatchProfileResponse> {
            return localVarFp.updateProfile(id, revision, ProfilePartialUpdateQuery, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createProfile operation in ProfilesApi.
 * @export
 * @interface ProfilesApiCreateProfileRequest
 */
export interface ProfilesApiCreateProfileRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiCreateProfile
     */
    readonly revision: string

    /**
     * 
     * @type {ProfileCreateQuery}
     * @memberof ProfilesApiCreateProfile
     */
    readonly ProfileCreateQuery: ProfileCreateQuery
}

/**
 * Request parameters for getProfile operation in ProfilesApi.
 * @export
 * @interface ProfilesApiGetProfileRequest
 */
export interface ProfilesApiGetProfileRequest {
    /**
     * 
     * @type {string}
     * @memberof ProfilesApiGetProfile
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiGetProfile
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'name' | 'created' | 'updated'>}
     * @memberof ProfilesApiGetProfile
     */
    readonly fields_list?: Array<'name' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>}
     * @memberof ProfilesApiGetProfile
     */
    readonly fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'name' | 'created' | 'updated'>}
     * @memberof ProfilesApiGetProfile
     */
    readonly fields_segment?: Array<'name' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'lists' | 'segments'>}
     * @memberof ProfilesApiGetProfile
     */
    readonly include?: Array<'lists' | 'segments'>
}

/**
 * Request parameters for getProfileLists operation in ProfilesApi.
 * @export
 * @interface ProfilesApiGetProfileListsRequest
 */
export interface ProfilesApiGetProfileListsRequest {
    /**
     * 
     * @type {string}
     * @memberof ProfilesApiGetProfileLists
     */
    readonly profile_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiGetProfileLists
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'name' | 'created' | 'updated'>}
     * @memberof ProfilesApiGetProfileLists
     */
    readonly fields_list?: Array<'name' | 'created' | 'updated'>
}

/**
 * Request parameters for getProfileRelationships operation in ProfilesApi.
 * @export
 * @interface ProfilesApiGetProfileRelationshipsRequest
 */
export interface ProfilesApiGetProfileRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof ProfilesApiGetProfileRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'lists' | 'segments'}
     * @memberof ProfilesApiGetProfileRelationships
     */
    readonly related_resource: 'lists' | 'segments'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiGetProfileRelationships
     */
    readonly revision: string
}

/**
 * Request parameters for getProfileSegments operation in ProfilesApi.
 * @export
 * @interface ProfilesApiGetProfileSegmentsRequest
 */
export interface ProfilesApiGetProfileSegmentsRequest {
    /**
     * 
     * @type {string}
     * @memberof ProfilesApiGetProfileSegments
     */
    readonly profile_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiGetProfileSegments
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'name' | 'created' | 'updated'>}
     * @memberof ProfilesApiGetProfileSegments
     */
    readonly fields_segment?: Array<'name' | 'created' | 'updated'>
}

/**
 * Request parameters for getProfiles operation in ProfilesApi.
 * @export
 * @interface ProfilesApiGetProfilesRequest
 */
export interface ProfilesApiGetProfilesRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiGetProfiles
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>}
     * @memberof ProfilesApiGetProfiles
     */
    readonly fields_profile?: Array<'email' | 'phone_number' | 'external_id' | 'anonymous_id' | 'first_name' | 'last_name' | 'organization' | 'title' | 'image' | 'created' | 'updated' | 'last_event_date' | 'location' | 'location.address1' | 'location.address2' | 'location.city' | 'location.country' | 'location.latitude' | 'location.longitude' | 'location.region' | 'location.zip' | 'location.timezone' | 'properties'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;external_id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;anonymous_id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;, &#x60;less-than&#x60;
     * @type {string}
     * @memberof ProfilesApiGetProfiles
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof ProfilesApiGetProfiles
     */
    readonly page_cursor?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
     * @type {'created' | '-created' | 'email' | '-email' | 'id' | '-id'}
     * @memberof ProfilesApiGetProfiles
     */
    readonly sort?: 'created' | '-created' | 'email' | '-email' | 'id' | '-id'
}

/**
 * Request parameters for subscribeProfiles operation in ProfilesApi.
 * @export
 * @interface ProfilesApiSubscribeProfilesRequest
 */
export interface ProfilesApiSubscribeProfilesRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiSubscribeProfiles
     */
    readonly revision: string

    /**
     * Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels. If a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed.
     * @type {SubscriptionCreateJobCreateQuery}
     * @memberof ProfilesApiSubscribeProfiles
     */
    readonly SubscriptionCreateJobCreateQuery: SubscriptionCreateJobCreateQuery
}

/**
 * Request parameters for suppressProfiles operation in ProfilesApi.
 * @export
 * @interface ProfilesApiSuppressProfilesRequest
 */
export interface ProfilesApiSuppressProfilesRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiSuppressProfiles
     */
    readonly revision: string

    /**
     * Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed.
     * @type {SuppressionCreateJobCreateQuery}
     * @memberof ProfilesApiSuppressProfiles
     */
    readonly SuppressionCreateJobCreateQuery: SuppressionCreateJobCreateQuery
}

/**
 * Request parameters for unsubscribeProfiles operation in ProfilesApi.
 * @export
 * @interface ProfilesApiUnsubscribeProfilesRequest
 */
export interface ProfilesApiUnsubscribeProfilesRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiUnsubscribeProfiles
     */
    readonly revision: string

    /**
     * Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list. Either email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed.
     * @type {UnsubscriptionCreateJobCreateQuery}
     * @memberof ProfilesApiUnsubscribeProfiles
     */
    readonly UnsubscriptionCreateJobCreateQuery: UnsubscriptionCreateJobCreateQuery
}

/**
 * Request parameters for unsuppressProfiles operation in ProfilesApi.
 * @export
 * @interface ProfilesApiUnsuppressProfilesRequest
 */
export interface ProfilesApiUnsuppressProfilesRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiUnsuppressProfiles
     */
    readonly revision: string

    /**
     * Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, no action will be taken.
     * @type {UnsuppressionCreateJobCreateQuery}
     * @memberof ProfilesApiUnsuppressProfiles
     */
    readonly UnsuppressionCreateJobCreateQuery: UnsuppressionCreateJobCreateQuery
}

/**
 * Request parameters for updateProfile operation in ProfilesApi.
 * @export
 * @interface ProfilesApiUpdateProfileRequest
 */
export interface ProfilesApiUpdateProfileRequest {
    /**
     * 
     * @type {string}
     * @memberof ProfilesApiUpdateProfile
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof ProfilesApiUpdateProfile
     */
    readonly revision: string

    /**
     * 
     * @type {ProfilePartialUpdateQuery}
     * @memberof ProfilesApiUpdateProfile
     */
    readonly ProfilePartialUpdateQuery: ProfilePartialUpdateQuery
}

/**
 * ProfilesApi - object-oriented interface
 * @export
 * @class ProfilesApi
 * @extends {BaseAPI}
 */
export class ProfilesApi extends BaseAPI {
    /**
     * Create a new profile.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write`
     * @summary Create Profile
     * @param {ProfilesApiCreateProfileRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public createProfile(requestParameters: ProfilesApiCreateProfileRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).createProfile(requestParameters.revision, requestParameters.ProfileCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get the profile with the given profile ID. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `lists` memberships, `segments` memberships\"<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Read`
     * @summary Get Profile
     * @param {ProfilesApiGetProfileRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public getProfile(requestParameters: ProfilesApiGetProfileRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).getProfile(requestParameters.id, requestParameters.revision, requestParameters.fields_list, requestParameters.fields_profile, requestParameters.fields_segment, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `List Read` `Profiles Read`
     * @summary Get Profile Lists
     * @param {ProfilesApiGetProfileListsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public getProfileLists(requestParameters: ProfilesApiGetProfileListsRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).getProfileLists(requestParameters.profile_id, requestParameters.revision, requestParameters.fields_list, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get list membership or segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Profiles Read` `Segments Read`
     * @summary Get Profile Relationships
     * @param {ProfilesApiGetProfileRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public getProfileRelationships(requestParameters: ProfilesApiGetProfileRelationshipsRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).getProfileRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `Profiles Read` `Segments Read`
     * @summary Get Profile Segments
     * @param {ProfilesApiGetProfileSegmentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public getProfileSegments(requestParameters: ProfilesApiGetProfileSegmentsRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).getProfileSegments(requestParameters.profile_id, requestParameters.revision, requestParameters.fields_segment, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all profiles in an account. Profiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `email` Use filters to narrow your results. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 20 profiles per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Write`
     * @summary Get Profiles
     * @param {ProfilesApiGetProfilesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public getProfiles(requestParameters: ProfilesApiGetProfilesRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).getProfiles(requestParameters.revision, requestParameters.fields_profile, requestParameters.filter, requestParameters.page_cursor, requestParameters.sort, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Subscribe one or more profiles to email marketing, SMS marketing, or both. If the list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message. To add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/v2022-10-17/reference/create_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `List Write` `Profiles Write` `Subscriptions Write`
     * @summary Subscribe Profiles
     * @param {ProfilesApiSubscribeProfilesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public subscribeProfiles(requestParameters: ProfilesApiSubscribeProfilesRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).subscribeProfiles(requestParameters.revision, requestParameters.SubscriptionCreateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Manually suppress one or more profiles. Manually suppressed profiles will not receive email marketing. Not supported for SMS marketing.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write` `Subscriptions Write`
     * @summary Suppress Profiles
     * @param {ProfilesApiSuppressProfilesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public suppressProfiles(requestParameters: ProfilesApiSuppressProfilesRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).suppressProfiles(requestParameters.revision, requestParameters.SuppressionCreateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Unsubscribe one or more profiles to email marketing, SMS marketing, or both. To remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/v2022-10-17/reference/delete_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `List Write` `Profiles Write` `Subscriptions Write`
     * @summary Unsubscribe Profiles
     * @param {ProfilesApiUnsubscribeProfilesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public unsubscribeProfiles(requestParameters: ProfilesApiUnsubscribeProfilesRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).unsubscribeProfiles(requestParameters.revision, requestParameters.UnsubscriptionCreateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Unsuppress one or more profiles. Unsuppressed profiles will receive email marketing. Not supported for SMS marketing. Profiles suppressed due to a hard bounced email will not be unsuppressed.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Subscriptions Write`
     * @summary Unsuppress Profiles
     * @param {ProfilesApiUnsuppressProfilesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public unsuppressProfiles(requestParameters: ProfilesApiUnsuppressProfilesRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).unsuppressProfiles(requestParameters.revision, requestParameters.UnsuppressionCreateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update the profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Profiles Write`
     * @summary Update Profile
     * @param {ProfilesApiUpdateProfileRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    public updateProfile(requestParameters: ProfilesApiUpdateProfileRequest, options?: AxiosRequestConfig) {
        return ProfilesApiFp(this.configuration).updateProfile(requestParameters.id, requestParameters.revision, requestParameters.ProfilePartialUpdateQuery, options).then((request) => request(this.axios, this.basePath));
    }
}
