/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { CatalogCategoryCreateJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogCategoryCreateQuery } from '../models';
// @ts-ignore
import { CatalogCategoryDeleteJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogCategoryItemOp } from '../models';
// @ts-ignore
import { CatalogCategoryUpdateJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogCategoryUpdateQuery } from '../models';
// @ts-ignore
import { CatalogItemCategoryOp } from '../models';
// @ts-ignore
import { CatalogItemCreateJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogItemCreateQuery } from '../models';
// @ts-ignore
import { CatalogItemDeleteJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogItemUpdateJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogItemUpdateQuery } from '../models';
// @ts-ignore
import { CatalogVariantCreateJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogVariantCreateQuery } from '../models';
// @ts-ignore
import { CatalogVariantDeleteJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogVariantUpdateJobCreateQuery } from '../models';
// @ts-ignore
import { CatalogVariantUpdateQuery } from '../models';
// @ts-ignore
import { GetCatalogCategoryCreateJobResponseCollectionWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogCategoryCreateJobResponseWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogCategoryDeleteJobResponse } from '../models';
// @ts-ignore
import { GetCatalogCategoryDeleteJobResponseCollection } from '../models';
// @ts-ignore
import { GetCatalogCategoryItemListResponseCollection } from '../models';
// @ts-ignore
import { GetCatalogCategoryResponse } from '../models';
// @ts-ignore
import { GetCatalogCategoryResponseCollection } from '../models';
// @ts-ignore
import { GetCatalogCategoryUpdateJobResponseCollectionWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogCategoryUpdateJobResponseWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogItemCategoryListResponseCollection } from '../models';
// @ts-ignore
import { GetCatalogItemCreateJobResponseCollectionWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogItemCreateJobResponseWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogItemDeleteJobResponse } from '../models';
// @ts-ignore
import { GetCatalogItemDeleteJobResponseCollection } from '../models';
// @ts-ignore
import { GetCatalogItemResponseCollectionWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogItemResponseWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogItemUpdateJobResponseCollectionWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogItemUpdateJobResponseWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogItems4XXResponse } from '../models';
// @ts-ignore
import { GetCatalogVariantCreateJobResponseCollectionWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogVariantCreateJobResponseWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogVariantDeleteJobResponse } from '../models';
// @ts-ignore
import { GetCatalogVariantDeleteJobResponseCollection } from '../models';
// @ts-ignore
import { GetCatalogVariantResponse } from '../models';
// @ts-ignore
import { GetCatalogVariantResponseCollection } from '../models';
// @ts-ignore
import { GetCatalogVariantUpdateJobResponseCollectionWithIncludedSection } from '../models';
// @ts-ignore
import { GetCatalogVariantUpdateJobResponseWithIncludedSection } from '../models';
// @ts-ignore
import { PatchCatalogCategoryResponse } from '../models';
// @ts-ignore
import { PatchCatalogItemResponse } from '../models';
// @ts-ignore
import { PatchCatalogVariantResponse } from '../models';
// @ts-ignore
import { PostCatalogCategoryCreateJobResponse } from '../models';
// @ts-ignore
import { PostCatalogCategoryDeleteJobResponse } from '../models';
// @ts-ignore
import { PostCatalogCategoryResponse } from '../models';
// @ts-ignore
import { PostCatalogCategoryUpdateJobResponse } from '../models';
// @ts-ignore
import { PostCatalogItemCreateJobResponse } from '../models';
// @ts-ignore
import { PostCatalogItemDeleteJobResponse } from '../models';
// @ts-ignore
import { PostCatalogItemResponse } from '../models';
// @ts-ignore
import { PostCatalogItemUpdateJobResponse } from '../models';
// @ts-ignore
import { PostCatalogVariantCreateJobResponse } from '../models';
// @ts-ignore
import { PostCatalogVariantDeleteJobResponse } from '../models';
// @ts-ignore
import { PostCatalogVariantResponse } from '../models';
// @ts-ignore
import { PostCatalogVariantUpdateJobResponse } from '../models';
/**
 * CatalogsApi - axios parameter creator
 * @export
 */
export const CatalogsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Category
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryCreateQuery} CatalogCategoryCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogCategory: async (revision: string, CatalogCategoryCreateQuery: CatalogCategoryCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createCatalogCategory', 'revision', revision)
            // verify required parameter 'CatalogCategoryCreateQuery' is not null or undefined
            assertParamExists('createCatalogCategory', 'CatalogCategoryCreateQuery', CatalogCategoryCreateQuery)
            const localVarPath = `/api/catalog-categories/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogCategoryCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogCategoryRelationships: async (id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('createCatalogCategoryRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('createCatalogCategoryRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createCatalogCategoryRelationships', 'revision', revision)
            // verify required parameter 'CatalogCategoryItemOp' is not null or undefined
            assertParamExists('createCatalogCategoryRelationships', 'CatalogCategoryItemOp', CatalogCategoryItemOp)
            const localVarPath = `/api/catalog-categories/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogCategoryItemOp, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Item
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCreateQuery} CatalogItemCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogItem: async (revision: string, CatalogItemCreateQuery: CatalogItemCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createCatalogItem', 'revision', revision)
            // verify required parameter 'CatalogItemCreateQuery' is not null or undefined
            assertParamExists('createCatalogItem', 'CatalogItemCreateQuery', CatalogItemCreateQuery)
            const localVarPath = `/api/catalog-items/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogItemCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogItemRelationships: async (id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('createCatalogItemRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('createCatalogItemRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createCatalogItemRelationships', 'revision', revision)
            // verify required parameter 'CatalogItemCategoryOp' is not null or undefined
            assertParamExists('createCatalogItemRelationships', 'CatalogItemCategoryOp', CatalogItemCategoryOp)
            const localVarPath = `/api/catalog-items/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogItemCategoryOp, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Variant
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantCreateQuery} CatalogVariantCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogVariant: async (revision: string, CatalogVariantCreateQuery: CatalogVariantCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('createCatalogVariant', 'revision', revision)
            // verify required parameter 'CatalogVariantCreateQuery' is not null or undefined
            assertParamExists('createCatalogVariant', 'CatalogVariantCreateQuery', CatalogVariantCreateQuery)
            const localVarPath = `/api/catalog-variants/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogVariantCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogCategory: async (id: string, revision: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('deleteCatalogCategory', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('deleteCatalogCategory', 'revision', revision)
            const localVarPath = `/api/catalog-categories/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogCategoryRelationships: async (id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('deleteCatalogCategoryRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('deleteCatalogCategoryRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('deleteCatalogCategoryRelationships', 'revision', revision)
            // verify required parameter 'CatalogCategoryItemOp' is not null or undefined
            assertParamExists('deleteCatalogCategoryRelationships', 'CatalogCategoryItemOp', CatalogCategoryItemOp)
            const localVarPath = `/api/catalog-categories/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogCategoryItemOp, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogItem: async (id: string, revision: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('deleteCatalogItem', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('deleteCatalogItem', 'revision', revision)
            const localVarPath = `/api/catalog-items/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogItemRelationships: async (id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('deleteCatalogItemRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('deleteCatalogItemRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('deleteCatalogItemRelationships', 'revision', revision)
            // verify required parameter 'CatalogItemCategoryOp' is not null or undefined
            assertParamExists('deleteCatalogItemRelationships', 'CatalogItemCategoryOp', CatalogItemCategoryOp)
            const localVarPath = `/api/catalog-items/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogItemCategoryOp, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogVariant: async (id: string, revision: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('deleteCatalogVariant', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('deleteCatalogVariant', 'revision', revision)
            const localVarPath = `/api/catalog-variants/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog categories in an account. Catalog categories can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Categories
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogCategories: async (revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogCategories', 'revision', revision)
            const localVarPath = `/api/catalog-categories/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category) {
                localVarQueryParameter['fields[catalog-category]'] = fields_catalog_category.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogCategory: async (id: string, revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getCatalogCategory', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogCategory', 'revision', revision)
            const localVarPath = `/api/catalog-categories/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category) {
                localVarQueryParameter['fields[catalog-category]'] = fields_catalog_category.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all items in a category with the given category ID. Items can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants` Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category Items
         * @param {string} category_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogCategoryItems: async (category_id: string, revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, include?: Array<'variants'>, page_cursor?: string, sort?: 'created' | '-created', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'category_id' is not null or undefined
            assertParamExists('getCatalogCategoryItems', 'category_id', category_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogCategoryItems', 'revision', revision)
            const localVarPath = `/api/catalog-categories/{category_id}/items/`
                .replace(`{${"category_id"}}`, encodeURIComponent(String(category_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item) {
                localVarQueryParameter['fields[catalog-item]'] = fields_catalog_item.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_variant) {
                localVarQueryParameter['fields[catalog-variant]'] = fields_catalog_variant.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all items in the given category ID. Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogCategoryRelationships: async (id: string, related_resource: 'items', revision: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getCatalogCategoryRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('getCatalogCategoryRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogCategoryRelationships', 'revision', revision)
            const localVarPath = `/api/catalog-categories/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a specific catalog item with the given item ID. Request specific fields and variants using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItem: async (id: string, revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getCatalogItem', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogItem', 'revision', revision)
            const localVarPath = `/api/catalog-items/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item) {
                localVarQueryParameter['fields[catalog-item]'] = fields_catalog_item.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_variant) {
                localVarQueryParameter['fields[catalog-variant]'] = fields_catalog_variant.join(COLLECTION_FORMATS.csv);
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog categories that an item with the given item ID is in. Catalog categories can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Categories
         * @param {string} item_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItemCategories: async (item_id: string, revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'item_id' is not null or undefined
            assertParamExists('getCatalogItemCategories', 'item_id', item_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogItemCategories', 'revision', revision)
            const localVarPath = `/api/catalog-items/{item_id}/categories/`
                .replace(`{${"item_id"}}`, encodeURIComponent(String(item_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category) {
                localVarQueryParameter['fields[catalog-category]'] = fields_catalog_category.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog categories that a particular item is in. Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItemRelationships: async (id: string, related_resource: 'categories', revision: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getCatalogItemRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('getCatalogItemRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogItemRelationships', 'revision', revision)
            const localVarPath = `/api/catalog-items/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all variants related to the given item ID. Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Variants can be sorted by the following fields, in ascending and descending order: `created` Returns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Variants
         * @param {string} item_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItemVariants: async (item_id: string, revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'item_id' is not null or undefined
            assertParamExists('getCatalogItemVariants', 'item_id', item_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogItemVariants', 'revision', revision)
            const localVarPath = `/api/catalog-items/{item_id}/variants/`
                .replace(`{${"item_id"}}`, encodeURIComponent(String(item_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant) {
                localVarQueryParameter['fields[catalog-variant]'] = fields_catalog_variant.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog items in an account. Catalog items can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants` Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Items
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItems: async (revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, include?: Array<'variants'>, page_cursor?: string, sort?: 'created' | '-created', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogItems', 'revision', revision)
            const localVarPath = `/api/catalog-items/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item) {
                localVarQueryParameter['fields[catalog-item]'] = fields_catalog_item.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_variant) {
                localVarQueryParameter['fields[catalog-variant]'] = fields_catalog_variant.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogVariant: async (id: string, revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getCatalogVariant', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogVariant', 'revision', revision)
            const localVarPath = `/api/catalog-variants/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant) {
                localVarQueryParameter['fields[catalog-variant]'] = fields_catalog_variant.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all variants in an account. Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Variants can be sorted by the following fields, in ascending and descending order: `created` Returns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Variants
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogVariants: async (revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCatalogVariants', 'revision', revision)
            const localVarPath = `/api/catalog-variants/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant) {
                localVarQueryParameter['fields[catalog-variant]'] = fields_catalog_variant.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog category bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'categories'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateCategoriesJob: async (job_id: string, revision: string, fields_catalog_category_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, include?: Array<'categories'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getCreateCategoriesJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCreateCategoriesJob', 'revision', revision)
            const localVarPath = `/api/catalog-category-bulk-create-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category_bulk_create_job) {
                localVarQueryParameter['fields[catalog-category-bulk-create-job]'] = fields_catalog_category_bulk_create_job.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_category) {
                localVarQueryParameter['fields[catalog-category]'] = fields_catalog_category.join(COLLECTION_FORMATS.csv);
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog category bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateCategoriesJobs: async (revision: string, fields_catalog_category_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCreateCategoriesJobs', 'revision', revision)
            const localVarPath = `/api/catalog-category-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category_bulk_create_job) {
                localVarQueryParameter['fields[catalog-category-bulk-create-job]'] = fields_catalog_category_bulk_create_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog item bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'items'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateItemsJob: async (job_id: string, revision: string, fields_catalog_item_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'items'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getCreateItemsJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCreateItemsJob', 'revision', revision)
            const localVarPath = `/api/catalog-item-bulk-create-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item_bulk_create_job) {
                localVarQueryParameter['fields[catalog-item-bulk-create-job]'] = fields_catalog_item_bulk_create_job.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_item) {
                localVarQueryParameter['fields[catalog-item]'] = fields_catalog_item.join(COLLECTION_FORMATS.csv);
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog item bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateItemsJobs: async (revision: string, fields_catalog_item_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCreateItemsJobs', 'revision', revision)
            const localVarPath = `/api/catalog-item-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item_bulk_create_job) {
                localVarQueryParameter['fields[catalog-item-bulk-create-job]'] = fields_catalog_item_bulk_create_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog variant bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateVariantsJob: async (job_id: string, revision: string, fields_catalog_variant_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getCreateVariantsJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCreateVariantsJob', 'revision', revision)
            const localVarPath = `/api/catalog-variant-bulk-create-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant_bulk_create_job) {
                localVarQueryParameter['fields[catalog-variant-bulk-create-job]'] = fields_catalog_variant_bulk_create_job.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_variant) {
                localVarQueryParameter['fields[catalog-variant]'] = fields_catalog_variant.join(COLLECTION_FORMATS.csv);
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog variant bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateVariantsJobs: async (revision: string, fields_catalog_variant_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getCreateVariantsJobs', 'revision', revision)
            const localVarPath = `/api/catalog-variant-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant_bulk_create_job) {
                localVarQueryParameter['fields[catalog-variant-bulk-create-job]'] = fields_catalog_variant_bulk_create_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteCategoriesJob: async (job_id: string, revision: string, fields_catalog_category_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getDeleteCategoriesJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getDeleteCategoriesJob', 'revision', revision)
            const localVarPath = `/api/catalog-category-bulk-delete-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category_bulk_delete_job) {
                localVarQueryParameter['fields[catalog-category-bulk-delete-job]'] = fields_catalog_category_bulk_delete_job.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog category bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteCategoriesJobs: async (revision: string, fields_catalog_category_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getDeleteCategoriesJobs', 'revision', revision)
            const localVarPath = `/api/catalog-category-bulk-delete-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category_bulk_delete_job) {
                localVarQueryParameter['fields[catalog-category-bulk-delete-job]'] = fields_catalog_category_bulk_delete_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteItemsJob: async (job_id: string, revision: string, fields_catalog_item_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getDeleteItemsJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getDeleteItemsJob', 'revision', revision)
            const localVarPath = `/api/catalog-item-bulk-delete-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item_bulk_delete_job) {
                localVarQueryParameter['fields[catalog-item-bulk-delete-job]'] = fields_catalog_item_bulk_delete_job.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog item bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteItemsJobs: async (revision: string, fields_catalog_item_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getDeleteItemsJobs', 'revision', revision)
            const localVarPath = `/api/catalog-item-bulk-delete-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item_bulk_delete_job) {
                localVarQueryParameter['fields[catalog-item-bulk-delete-job]'] = fields_catalog_item_bulk_delete_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteVariantsJob: async (job_id: string, revision: string, fields_catalog_variant_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getDeleteVariantsJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getDeleteVariantsJob', 'revision', revision)
            const localVarPath = `/api/catalog-variant-bulk-delete-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant_bulk_delete_job) {
                localVarQueryParameter['fields[catalog-variant-bulk-delete-job]'] = fields_catalog_variant_bulk_delete_job.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog variant bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteVariantsJobs: async (revision: string, fields_catalog_variant_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getDeleteVariantsJobs', 'revision', revision)
            const localVarPath = `/api/catalog-variant-bulk-delete-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant_bulk_delete_job) {
                localVarQueryParameter['fields[catalog-variant-bulk-delete-job]'] = fields_catalog_variant_bulk_delete_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog category bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'categories'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateCategoriesJob: async (job_id: string, revision: string, fields_catalog_category_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, include?: Array<'categories'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getUpdateCategoriesJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getUpdateCategoriesJob', 'revision', revision)
            const localVarPath = `/api/catalog-category-bulk-update-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category_bulk_update_job) {
                localVarQueryParameter['fields[catalog-category-bulk-update-job]'] = fields_catalog_category_bulk_update_job.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_category) {
                localVarQueryParameter['fields[catalog-category]'] = fields_catalog_category.join(COLLECTION_FORMATS.csv);
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog category bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateCategoriesJobs: async (revision: string, fields_catalog_category_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getUpdateCategoriesJobs', 'revision', revision)
            const localVarPath = `/api/catalog-category-bulk-update-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_category_bulk_update_job) {
                localVarQueryParameter['fields[catalog-category-bulk-update-job]'] = fields_catalog_category_bulk_update_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog item bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'items'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateItemsJob: async (job_id: string, revision: string, fields_catalog_item_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'items'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getUpdateItemsJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getUpdateItemsJob', 'revision', revision)
            const localVarPath = `/api/catalog-item-bulk-update-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item_bulk_update_job) {
                localVarQueryParameter['fields[catalog-item-bulk-update-job]'] = fields_catalog_item_bulk_update_job.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_item) {
                localVarQueryParameter['fields[catalog-item]'] = fields_catalog_item.join(COLLECTION_FORMATS.csv);
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog item bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateItemsJobs: async (revision: string, fields_catalog_item_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getUpdateItemsJobs', 'revision', revision)
            const localVarPath = `/api/catalog-item-bulk-update-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_item_bulk_update_job) {
                localVarQueryParameter['fields[catalog-item-bulk-update-job]'] = fields_catalog_item_bulk_update_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get a catalog variate bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateVariantsJob: async (job_id: string, revision: string, fields_catalog_variant_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job_id' is not null or undefined
            assertParamExists('getUpdateVariantsJob', 'job_id', job_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getUpdateVariantsJob', 'revision', revision)
            const localVarPath = `/api/catalog-variant-bulk-update-jobs/{job_id}/`
                .replace(`{${"job_id"}}`, encodeURIComponent(String(job_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant_bulk_update_job) {
                localVarQueryParameter['fields[catalog-variant-bulk-update-job]'] = fields_catalog_variant_bulk_update_job.join(COLLECTION_FORMATS.csv);
            }

            if (fields_catalog_variant) {
                localVarQueryParameter['fields[catalog-variant]'] = fields_catalog_variant.join(COLLECTION_FORMATS.csv);
            }

            if (include) {
                localVarQueryParameter['include'] = include;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all catalog variant bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateVariantsJobs: async (revision: string, fields_catalog_variant_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getUpdateVariantsJobs', 'revision', revision)
            const localVarPath = `/api/catalog-variant-bulk-update-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_catalog_variant_bulk_update_job) {
                localVarQueryParameter['fields[catalog-variant-bulk-update-job]'] = fields_catalog_variant_bulk_update_job.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog category bulk create job to create a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryCreateJobCreateQuery} CatalogCategoryCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnCreateCategoriesJob: async (revision: string, CatalogCategoryCreateJobCreateQuery: CatalogCategoryCreateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnCreateCategoriesJob', 'revision', revision)
            // verify required parameter 'CatalogCategoryCreateJobCreateQuery' is not null or undefined
            assertParamExists('spawnCreateCategoriesJob', 'CatalogCategoryCreateJobCreateQuery', CatalogCategoryCreateJobCreateQuery)
            const localVarPath = `/api/catalog-category-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogCategoryCreateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog item bulk create job to create a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCreateJobCreateQuery} CatalogItemCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnCreateItemsJob: async (revision: string, CatalogItemCreateJobCreateQuery: CatalogItemCreateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnCreateItemsJob', 'revision', revision)
            // verify required parameter 'CatalogItemCreateJobCreateQuery' is not null or undefined
            assertParamExists('spawnCreateItemsJob', 'CatalogItemCreateJobCreateQuery', CatalogItemCreateJobCreateQuery)
            const localVarPath = `/api/catalog-item-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogItemCreateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog variant bulk create job to create a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantCreateJobCreateQuery} CatalogVariantCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnCreateVariantsJob: async (revision: string, CatalogVariantCreateJobCreateQuery: CatalogVariantCreateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnCreateVariantsJob', 'revision', revision)
            // verify required parameter 'CatalogVariantCreateJobCreateQuery' is not null or undefined
            assertParamExists('spawnCreateVariantsJob', 'CatalogVariantCreateJobCreateQuery', CatalogVariantCreateJobCreateQuery)
            const localVarPath = `/api/catalog-variant-bulk-create-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogVariantCreateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog category bulk delete job to delete a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryDeleteJobCreateQuery} CatalogCategoryDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnDeleteCategoriesJob: async (revision: string, CatalogCategoryDeleteJobCreateQuery: CatalogCategoryDeleteJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnDeleteCategoriesJob', 'revision', revision)
            // verify required parameter 'CatalogCategoryDeleteJobCreateQuery' is not null or undefined
            assertParamExists('spawnDeleteCategoriesJob', 'CatalogCategoryDeleteJobCreateQuery', CatalogCategoryDeleteJobCreateQuery)
            const localVarPath = `/api/catalog-category-bulk-delete-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogCategoryDeleteJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog item bulk delete job to delete a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemDeleteJobCreateQuery} CatalogItemDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnDeleteItemsJob: async (revision: string, CatalogItemDeleteJobCreateQuery: CatalogItemDeleteJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnDeleteItemsJob', 'revision', revision)
            // verify required parameter 'CatalogItemDeleteJobCreateQuery' is not null or undefined
            assertParamExists('spawnDeleteItemsJob', 'CatalogItemDeleteJobCreateQuery', CatalogItemDeleteJobCreateQuery)
            const localVarPath = `/api/catalog-item-bulk-delete-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogItemDeleteJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog variant bulk delete job to delete a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantDeleteJobCreateQuery} CatalogVariantDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnDeleteVariantsJob: async (revision: string, CatalogVariantDeleteJobCreateQuery: CatalogVariantDeleteJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnDeleteVariantsJob', 'revision', revision)
            // verify required parameter 'CatalogVariantDeleteJobCreateQuery' is not null or undefined
            assertParamExists('spawnDeleteVariantsJob', 'CatalogVariantDeleteJobCreateQuery', CatalogVariantDeleteJobCreateQuery)
            const localVarPath = `/api/catalog-variant-bulk-delete-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogVariantDeleteJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog category bulk update job to update a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryUpdateJobCreateQuery} CatalogCategoryUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnUpdateCategoriesJob: async (revision: string, CatalogCategoryUpdateJobCreateQuery: CatalogCategoryUpdateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnUpdateCategoriesJob', 'revision', revision)
            // verify required parameter 'CatalogCategoryUpdateJobCreateQuery' is not null or undefined
            assertParamExists('spawnUpdateCategoriesJob', 'CatalogCategoryUpdateJobCreateQuery', CatalogCategoryUpdateJobCreateQuery)
            const localVarPath = `/api/catalog-category-bulk-update-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogCategoryUpdateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog item bulk update job to update a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemUpdateJobCreateQuery} CatalogItemUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnUpdateItemsJob: async (revision: string, CatalogItemUpdateJobCreateQuery: CatalogItemUpdateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnUpdateItemsJob', 'revision', revision)
            // verify required parameter 'CatalogItemUpdateJobCreateQuery' is not null or undefined
            assertParamExists('spawnUpdateItemsJob', 'CatalogItemUpdateJobCreateQuery', CatalogItemUpdateJobCreateQuery)
            const localVarPath = `/api/catalog-item-bulk-update-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogItemUpdateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a catalog variant bulk update job to update a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantUpdateJobCreateQuery} CatalogVariantUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnUpdateVariantsJob: async (revision: string, CatalogVariantUpdateJobCreateQuery: CatalogVariantUpdateJobCreateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('spawnUpdateVariantsJob', 'revision', revision)
            // verify required parameter 'CatalogVariantUpdateJobCreateQuery' is not null or undefined
            assertParamExists('spawnUpdateVariantsJob', 'CatalogVariantUpdateJobCreateQuery', CatalogVariantUpdateJobCreateQuery)
            const localVarPath = `/api/catalog-variant-bulk-update-jobs/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogVariantUpdateJobCreateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryUpdateQuery} CatalogCategoryUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogCategory: async (id: string, revision: string, CatalogCategoryUpdateQuery: CatalogCategoryUpdateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateCatalogCategory', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateCatalogCategory', 'revision', revision)
            // verify required parameter 'CatalogCategoryUpdateQuery' is not null or undefined
            assertParamExists('updateCatalogCategory', 'CatalogCategoryUpdateQuery', CatalogCategoryUpdateQuery)
            const localVarPath = `/api/catalog-categories/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogCategoryUpdateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogCategoryRelationships: async (id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateCatalogCategoryRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('updateCatalogCategoryRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateCatalogCategoryRelationships', 'revision', revision)
            // verify required parameter 'CatalogCategoryItemOp' is not null or undefined
            assertParamExists('updateCatalogCategoryRelationships', 'CatalogCategoryItemOp', CatalogCategoryItemOp)
            const localVarPath = `/api/catalog-categories/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogCategoryItemOp, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemUpdateQuery} CatalogItemUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogItem: async (id: string, revision: string, CatalogItemUpdateQuery: CatalogItemUpdateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateCatalogItem', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateCatalogItem', 'revision', revision)
            // verify required parameter 'CatalogItemUpdateQuery' is not null or undefined
            assertParamExists('updateCatalogItem', 'CatalogItemUpdateQuery', CatalogItemUpdateQuery)
            const localVarPath = `/api/catalog-items/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogItemUpdateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogItemRelationships: async (id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateCatalogItemRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('updateCatalogItemRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateCatalogItemRelationships', 'revision', revision)
            // verify required parameter 'CatalogItemCategoryOp' is not null or undefined
            assertParamExists('updateCatalogItemRelationships', 'CatalogItemCategoryOp', CatalogItemCategoryOp)
            const localVarPath = `/api/catalog-items/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogItemCategoryOp, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantUpdateQuery} CatalogVariantUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogVariant: async (id: string, revision: string, CatalogVariantUpdateQuery: CatalogVariantUpdateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateCatalogVariant', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateCatalogVariant', 'revision', revision)
            // verify required parameter 'CatalogVariantUpdateQuery' is not null or undefined
            assertParamExists('updateCatalogVariant', 'CatalogVariantUpdateQuery', CatalogVariantUpdateQuery)
            const localVarPath = `/api/catalog-variants/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(CatalogVariantUpdateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CatalogsApi - functional programming interface
 * @export
 */
export const CatalogsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CatalogsApiAxiosParamCreator(configuration)
    return {
        /**
         * Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Category
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryCreateQuery} CatalogCategoryCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createCatalogCategory(revision: string, CatalogCategoryCreateQuery: CatalogCategoryCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogCategoryResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createCatalogCategory(revision, CatalogCategoryCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createCatalogCategoryRelationships(id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createCatalogCategoryRelationships(id, related_resource, revision, CatalogCategoryItemOp, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Item
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCreateQuery} CatalogItemCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createCatalogItem(revision: string, CatalogItemCreateQuery: CatalogItemCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogItemResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createCatalogItem(revision, CatalogItemCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createCatalogItemRelationships(id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createCatalogItemRelationships(id, related_resource, revision, CatalogItemCategoryOp, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Variant
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantCreateQuery} CatalogVariantCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createCatalogVariant(revision: string, CatalogVariantCreateQuery: CatalogVariantCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogVariantResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createCatalogVariant(revision, CatalogVariantCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteCatalogCategory(id: string, revision: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteCatalogCategory(id, revision, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteCatalogCategoryRelationships(id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteCatalogCategoryRelationships(id, related_resource, revision, CatalogCategoryItemOp, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteCatalogItem(id: string, revision: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteCatalogItem(id, revision, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteCatalogItemRelationships(id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteCatalogItemRelationships(id, related_resource, revision, CatalogItemCategoryOp, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteCatalogVariant(id: string, revision: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteCatalogVariant(id, revision, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog categories in an account. Catalog categories can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Categories
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogCategories(revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogCategories(revision, fields_catalog_category, filter, page_cursor, sort, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogCategory(id: string, revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogCategory(id, revision, fields_catalog_category, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all items in a category with the given category ID. Items can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants` Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category Items
         * @param {string} category_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogCategoryItems(category_id: string, revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, include?: Array<'variants'>, page_cursor?: string, sort?: 'created' | '-created', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogCategoryItems(category_id, revision, fields_catalog_item, fields_catalog_variant, filter, include, page_cursor, sort, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all items in the given category ID. Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogCategoryRelationships(id: string, related_resource: 'items', revision: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryItemListResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogCategoryRelationships(id, related_resource, revision, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a specific catalog item with the given item ID. Request specific fields and variants using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogItem(id: string, revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemResponseWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogItem(id, revision, fields_catalog_item, fields_catalog_variant, include, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog categories that an item with the given item ID is in. Catalog categories can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Categories
         * @param {string} item_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogItemCategories(item_id: string, revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogItemCategories(item_id, revision, fields_catalog_category, filter, page_cursor, sort, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog categories that a particular item is in. Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogItemRelationships(id: string, related_resource: 'categories', revision: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemCategoryListResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogItemRelationships(id, related_resource, revision, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all variants related to the given item ID. Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Variants can be sorted by the following fields, in ascending and descending order: `created` Returns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Variants
         * @param {string} item_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogItemVariants(item_id: string, revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogItemVariants(item_id, revision, fields_catalog_variant, filter, page_cursor, sort, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog items in an account. Catalog items can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants` Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Items
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogItems(revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, include?: Array<'variants'>, page_cursor?: string, sort?: 'created' | '-created', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogItems(revision, fields_catalog_item, fields_catalog_variant, filter, include, page_cursor, sort, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogVariant(id: string, revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogVariant(id, revision, fields_catalog_variant, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all variants in an account. Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Variants can be sorted by the following fields, in ascending and descending order: `created` Returns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Variants
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCatalogVariants(revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCatalogVariants(revision, fields_catalog_variant, filter, page_cursor, sort, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog category bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'categories'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCreateCategoriesJob(job_id: string, revision: string, fields_catalog_category_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, include?: Array<'categories'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryCreateJobResponseWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCreateCategoriesJob(job_id, revision, fields_catalog_category_bulk_create_job, fields_catalog_category, include, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog category bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCreateCategoriesJobs(revision: string, fields_catalog_category_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryCreateJobResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCreateCategoriesJobs(revision, fields_catalog_category_bulk_create_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog item bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'items'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCreateItemsJob(job_id: string, revision: string, fields_catalog_item_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'items'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemCreateJobResponseWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCreateItemsJob(job_id, revision, fields_catalog_item_bulk_create_job, fields_catalog_item, include, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog item bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCreateItemsJobs(revision: string, fields_catalog_item_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemCreateJobResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCreateItemsJobs(revision, fields_catalog_item_bulk_create_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog variant bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCreateVariantsJob(job_id: string, revision: string, fields_catalog_variant_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantCreateJobResponseWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCreateVariantsJob(job_id, revision, fields_catalog_variant_bulk_create_job, fields_catalog_variant, include, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog variant bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCreateVariantsJobs(revision: string, fields_catalog_variant_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantCreateJobResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCreateVariantsJobs(revision, fields_catalog_variant_bulk_create_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDeleteCategoriesJob(job_id: string, revision: string, fields_catalog_category_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryDeleteJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDeleteCategoriesJob(job_id, revision, fields_catalog_category_bulk_delete_job, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog category bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDeleteCategoriesJobs(revision: string, fields_catalog_category_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryDeleteJobResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDeleteCategoriesJobs(revision, fields_catalog_category_bulk_delete_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDeleteItemsJob(job_id: string, revision: string, fields_catalog_item_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemDeleteJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDeleteItemsJob(job_id, revision, fields_catalog_item_bulk_delete_job, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog item bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDeleteItemsJobs(revision: string, fields_catalog_item_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemDeleteJobResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDeleteItemsJobs(revision, fields_catalog_item_bulk_delete_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDeleteVariantsJob(job_id: string, revision: string, fields_catalog_variant_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantDeleteJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDeleteVariantsJob(job_id, revision, fields_catalog_variant_bulk_delete_job, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog variant bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getDeleteVariantsJobs(revision: string, fields_catalog_variant_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantDeleteJobResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getDeleteVariantsJobs(revision, fields_catalog_variant_bulk_delete_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog category bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'categories'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getUpdateCategoriesJob(job_id: string, revision: string, fields_catalog_category_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, include?: Array<'categories'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryUpdateJobResponseWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getUpdateCategoriesJob(job_id, revision, fields_catalog_category_bulk_update_job, fields_catalog_category, include, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog category bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getUpdateCategoriesJobs(revision: string, fields_catalog_category_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogCategoryUpdateJobResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getUpdateCategoriesJobs(revision, fields_catalog_category_bulk_update_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog item bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'items'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getUpdateItemsJob(job_id: string, revision: string, fields_catalog_item_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'items'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemUpdateJobResponseWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getUpdateItemsJob(job_id, revision, fields_catalog_item_bulk_update_job, fields_catalog_item, include, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog item bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getUpdateItemsJobs(revision: string, fields_catalog_item_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogItemUpdateJobResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getUpdateItemsJobs(revision, fields_catalog_item_bulk_update_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get a catalog variate bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getUpdateVariantsJob(job_id: string, revision: string, fields_catalog_variant_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantUpdateJobResponseWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getUpdateVariantsJob(job_id, revision, fields_catalog_variant_bulk_update_job, fields_catalog_variant, include, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all catalog variant bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getUpdateVariantsJobs(revision: string, fields_catalog_variant_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCatalogVariantUpdateJobResponseCollectionWithIncludedSection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getUpdateVariantsJobs(revision, fields_catalog_variant_bulk_update_job, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog category bulk create job to create a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryCreateJobCreateQuery} CatalogCategoryCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnCreateCategoriesJob(revision: string, CatalogCategoryCreateJobCreateQuery: CatalogCategoryCreateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogCategoryCreateJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnCreateCategoriesJob(revision, CatalogCategoryCreateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog item bulk create job to create a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCreateJobCreateQuery} CatalogItemCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnCreateItemsJob(revision: string, CatalogItemCreateJobCreateQuery: CatalogItemCreateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogItemCreateJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnCreateItemsJob(revision, CatalogItemCreateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog variant bulk create job to create a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantCreateJobCreateQuery} CatalogVariantCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnCreateVariantsJob(revision: string, CatalogVariantCreateJobCreateQuery: CatalogVariantCreateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogVariantCreateJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnCreateVariantsJob(revision, CatalogVariantCreateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog category bulk delete job to delete a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryDeleteJobCreateQuery} CatalogCategoryDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnDeleteCategoriesJob(revision: string, CatalogCategoryDeleteJobCreateQuery: CatalogCategoryDeleteJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogCategoryDeleteJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnDeleteCategoriesJob(revision, CatalogCategoryDeleteJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog item bulk delete job to delete a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemDeleteJobCreateQuery} CatalogItemDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnDeleteItemsJob(revision: string, CatalogItemDeleteJobCreateQuery: CatalogItemDeleteJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogItemDeleteJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnDeleteItemsJob(revision, CatalogItemDeleteJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog variant bulk delete job to delete a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantDeleteJobCreateQuery} CatalogVariantDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnDeleteVariantsJob(revision: string, CatalogVariantDeleteJobCreateQuery: CatalogVariantDeleteJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogVariantDeleteJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnDeleteVariantsJob(revision, CatalogVariantDeleteJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog category bulk update job to update a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryUpdateJobCreateQuery} CatalogCategoryUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnUpdateCategoriesJob(revision: string, CatalogCategoryUpdateJobCreateQuery: CatalogCategoryUpdateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogCategoryUpdateJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnUpdateCategoriesJob(revision, CatalogCategoryUpdateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog item bulk update job to update a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemUpdateJobCreateQuery} CatalogItemUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnUpdateItemsJob(revision: string, CatalogItemUpdateJobCreateQuery: CatalogItemUpdateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogItemUpdateJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnUpdateItemsJob(revision, CatalogItemUpdateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a catalog variant bulk update job to update a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantUpdateJobCreateQuery} CatalogVariantUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spawnUpdateVariantsJob(revision: string, CatalogVariantUpdateJobCreateQuery: CatalogVariantUpdateJobCreateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCatalogVariantUpdateJobResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spawnUpdateVariantsJob(revision, CatalogVariantUpdateJobCreateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryUpdateQuery} CatalogCategoryUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateCatalogCategory(id: string, revision: string, CatalogCategoryUpdateQuery: CatalogCategoryUpdateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PatchCatalogCategoryResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateCatalogCategory(id, revision, CatalogCategoryUpdateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateCatalogCategoryRelationships(id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateCatalogCategoryRelationships(id, related_resource, revision, CatalogCategoryItemOp, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemUpdateQuery} CatalogItemUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateCatalogItem(id: string, revision: string, CatalogItemUpdateQuery: CatalogItemUpdateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PatchCatalogItemResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateCatalogItem(id, revision, CatalogItemUpdateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateCatalogItemRelationships(id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateCatalogItemRelationships(id, related_resource, revision, CatalogItemCategoryOp, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantUpdateQuery} CatalogVariantUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateCatalogVariant(id: string, revision: string, CatalogVariantUpdateQuery: CatalogVariantUpdateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PatchCatalogVariantResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateCatalogVariant(id, revision, CatalogVariantUpdateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CatalogsApi - factory interface
 * @export
 */
export const CatalogsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CatalogsApiFp(configuration)
    return {
        /**
         * Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Category
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryCreateQuery} CatalogCategoryCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogCategory(revision: string, CatalogCategoryCreateQuery: CatalogCategoryCreateQuery, options?: any): AxiosPromise<PostCatalogCategoryResponse> {
            return localVarFp.createCatalogCategory(revision, CatalogCategoryCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogCategoryRelationships(id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options?: any): AxiosPromise<void> {
            return localVarFp.createCatalogCategoryRelationships(id, related_resource, revision, CatalogCategoryItemOp, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Item
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCreateQuery} CatalogItemCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogItem(revision: string, CatalogItemCreateQuery: CatalogItemCreateQuery, options?: any): AxiosPromise<PostCatalogItemResponse> {
            return localVarFp.createCatalogItem(revision, CatalogItemCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogItemRelationships(id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options?: any): AxiosPromise<void> {
            return localVarFp.createCatalogItemRelationships(id, related_resource, revision, CatalogItemCategoryOp, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Create Catalog Variant
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantCreateQuery} CatalogVariantCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCatalogVariant(revision: string, CatalogVariantCreateQuery: CatalogVariantCreateQuery, options?: any): AxiosPromise<PostCatalogVariantResponse> {
            return localVarFp.createCatalogVariant(revision, CatalogVariantCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogCategory(id: string, revision: string, options?: any): AxiosPromise<void> {
            return localVarFp.deleteCatalogCategory(id, revision, options).then((request) => request(axios, basePath));
        },
        /**
         * Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogCategoryRelationships(id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options?: any): AxiosPromise<void> {
            return localVarFp.deleteCatalogCategoryRelationships(id, related_resource, revision, CatalogCategoryItemOp, options).then((request) => request(axios, basePath));
        },
        /**
         * Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogItem(id: string, revision: string, options?: any): AxiosPromise<void> {
            return localVarFp.deleteCatalogItem(id, revision, options).then((request) => request(axios, basePath));
        },
        /**
         * Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogItemRelationships(id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options?: any): AxiosPromise<void> {
            return localVarFp.deleteCatalogItemRelationships(id, related_resource, revision, CatalogItemCategoryOp, options).then((request) => request(axios, basePath));
        },
        /**
         * Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Delete Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCatalogVariant(id: string, revision: string, options?: any): AxiosPromise<void> {
            return localVarFp.deleteCatalogVariant(id, revision, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog categories in an account. Catalog categories can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Categories
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogCategories(revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options?: any): AxiosPromise<GetCatalogCategoryResponseCollection> {
            return localVarFp.getCatalogCategories(revision, fields_catalog_category, filter, page_cursor, sort, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogCategory(id: string, revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, options?: any): AxiosPromise<GetCatalogCategoryResponse> {
            return localVarFp.getCatalogCategory(id, revision, fields_catalog_category, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all items in a category with the given category ID. Items can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants` Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category Items
         * @param {string} category_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogCategoryItems(category_id: string, revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, include?: Array<'variants'>, page_cursor?: string, sort?: 'created' | '-created', options?: any): AxiosPromise<GetCatalogItemResponseCollectionWithIncludedSection> {
            return localVarFp.getCatalogCategoryItems(category_id, revision, fields_catalog_item, fields_catalog_variant, filter, include, page_cursor, sort, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all items in the given category ID. Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogCategoryRelationships(id: string, related_resource: 'items', revision: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogCategoryItemListResponseCollection> {
            return localVarFp.getCatalogCategoryRelationships(id, related_resource, revision, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a specific catalog item with the given item ID. Request specific fields and variants using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItem(id: string, revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options?: any): AxiosPromise<GetCatalogItemResponseWithIncludedSection> {
            return localVarFp.getCatalogItem(id, revision, fields_catalog_item, fields_catalog_variant, include, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog categories that an item with the given item ID is in. Catalog categories can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Categories
         * @param {string} item_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItemCategories(item_id: string, revision: string, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options?: any): AxiosPromise<GetCatalogCategoryResponseCollection> {
            return localVarFp.getCatalogItemCategories(item_id, revision, fields_catalog_category, filter, page_cursor, sort, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog categories that a particular item is in. Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItemRelationships(id: string, related_resource: 'categories', revision: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogItemCategoryListResponseCollection> {
            return localVarFp.getCatalogItemRelationships(id, related_resource, revision, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all variants related to the given item ID. Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Variants can be sorted by the following fields, in ascending and descending order: `created` Returns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Item Variants
         * @param {string} item_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItemVariants(item_id: string, revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options?: any): AxiosPromise<GetCatalogVariantResponseCollection> {
            return localVarFp.getCatalogItemVariants(item_id, revision, fields_catalog_variant, filter, page_cursor, sort, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog items in an account. Catalog items can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants` Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Items
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogItems(revision: string, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, include?: Array<'variants'>, page_cursor?: string, sort?: 'created' | '-created', options?: any): AxiosPromise<GetCatalogItemResponseCollectionWithIncludedSection> {
            return localVarFp.getCatalogItems(revision, fields_catalog_item, fields_catalog_variant, filter, include, page_cursor, sort, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogVariant(id: string, revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, options?: any): AxiosPromise<GetCatalogVariantResponse> {
            return localVarFp.getCatalogVariant(id, revision, fields_catalog_variant, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all variants in an account. Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Variants can be sorted by the following fields, in ascending and descending order: `created` Returns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Catalog Variants
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {'created' | '-created'} [sort] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCatalogVariants(revision: string, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, filter?: string, page_cursor?: string, sort?: 'created' | '-created', options?: any): AxiosPromise<GetCatalogVariantResponseCollection> {
            return localVarFp.getCatalogVariants(revision, fields_catalog_variant, filter, page_cursor, sort, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog category bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'categories'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateCategoriesJob(job_id: string, revision: string, fields_catalog_category_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, include?: Array<'categories'>, options?: any): AxiosPromise<GetCatalogCategoryCreateJobResponseWithIncludedSection> {
            return localVarFp.getCreateCategoriesJob(job_id, revision, fields_catalog_category_bulk_create_job, fields_catalog_category, include, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog category bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateCategoriesJobs(revision: string, fields_catalog_category_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogCategoryCreateJobResponseCollectionWithIncludedSection> {
            return localVarFp.getCreateCategoriesJobs(revision, fields_catalog_category_bulk_create_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog item bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'items'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateItemsJob(job_id: string, revision: string, fields_catalog_item_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'items'>, options?: any): AxiosPromise<GetCatalogItemCreateJobResponseWithIncludedSection> {
            return localVarFp.getCreateItemsJob(job_id, revision, fields_catalog_item_bulk_create_job, fields_catalog_item, include, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog item bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateItemsJobs(revision: string, fields_catalog_item_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogItemCreateJobResponseCollectionWithIncludedSection> {
            return localVarFp.getCreateItemsJobs(revision, fields_catalog_item_bulk_create_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog variant bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateVariantsJob(job_id: string, revision: string, fields_catalog_variant_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options?: any): AxiosPromise<GetCatalogVariantCreateJobResponseWithIncludedSection> {
            return localVarFp.getCreateVariantsJob(job_id, revision, fields_catalog_variant_bulk_create_job, fields_catalog_variant, include, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog variant bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Create Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_create_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreateVariantsJobs(revision: string, fields_catalog_variant_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogVariantCreateJobResponseCollectionWithIncludedSection> {
            return localVarFp.getCreateVariantsJobs(revision, fields_catalog_variant_bulk_create_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteCategoriesJob(job_id: string, revision: string, fields_catalog_category_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options?: any): AxiosPromise<GetCatalogCategoryDeleteJobResponse> {
            return localVarFp.getDeleteCategoriesJob(job_id, revision, fields_catalog_category_bulk_delete_job, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog category bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteCategoriesJobs(revision: string, fields_catalog_category_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogCategoryDeleteJobResponseCollection> {
            return localVarFp.getDeleteCategoriesJobs(revision, fields_catalog_category_bulk_delete_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteItemsJob(job_id: string, revision: string, fields_catalog_item_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options?: any): AxiosPromise<GetCatalogItemDeleteJobResponse> {
            return localVarFp.getDeleteItemsJob(job_id, revision, fields_catalog_item_bulk_delete_job, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog item bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteItemsJobs(revision: string, fields_catalog_item_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogItemDeleteJobResponseCollection> {
            return localVarFp.getDeleteItemsJobs(revision, fields_catalog_item_bulk_delete_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteVariantsJob(job_id: string, revision: string, fields_catalog_variant_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, options?: any): AxiosPromise<GetCatalogVariantDeleteJobResponse> {
            return localVarFp.getDeleteVariantsJob(job_id, revision, fields_catalog_variant_bulk_delete_job, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog variant bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Delete Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_delete_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeleteVariantsJobs(revision: string, fields_catalog_variant_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogVariantDeleteJobResponseCollection> {
            return localVarFp.getDeleteVariantsJobs(revision, fields_catalog_variant_bulk_delete_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog category bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Categories Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'name' | 'updated'>} [fields_catalog_category] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'categories'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateCategoriesJob(job_id: string, revision: string, fields_catalog_category_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>, include?: Array<'categories'>, options?: any): AxiosPromise<GetCatalogCategoryUpdateJobResponseWithIncludedSection> {
            return localVarFp.getUpdateCategoriesJob(job_id, revision, fields_catalog_category_bulk_update_job, fields_catalog_category, include, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog category bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Categories Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_category_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateCategoriesJobs(revision: string, fields_catalog_category_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogCategoryUpdateJobResponseCollectionWithIncludedSection> {
            return localVarFp.getUpdateCategoriesJobs(revision, fields_catalog_category_bulk_update_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog item bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Items Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_item] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'items'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateItemsJob(job_id: string, revision: string, fields_catalog_item_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'items'>, options?: any): AxiosPromise<GetCatalogItemUpdateJobResponseWithIncludedSection> {
            return localVarFp.getUpdateItemsJob(job_id, revision, fields_catalog_item_bulk_update_job, fields_catalog_item, include, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog item bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Items Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_item_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateItemsJobs(revision: string, fields_catalog_item_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogItemUpdateJobResponseCollectionWithIncludedSection> {
            return localVarFp.getUpdateItemsJobs(revision, fields_catalog_item_bulk_update_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get a catalog variate bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Variants Job
         * @param {string} job_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>} [fields_catalog_variant] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {Array<'variants'>} [include] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateVariantsJob(job_id: string, revision: string, fields_catalog_variant_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>, include?: Array<'variants'>, options?: any): AxiosPromise<GetCatalogVariantUpdateJobResponseWithIncludedSection> {
            return localVarFp.getUpdateVariantsJob(job_id, revision, fields_catalog_variant_bulk_update_job, fields_catalog_variant, include, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all catalog variant bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
         * @summary Get Update Variants Jobs
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>} [fields_catalog_variant_bulk_update_job] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpdateVariantsJobs(revision: string, fields_catalog_variant_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetCatalogVariantUpdateJobResponseCollectionWithIncludedSection> {
            return localVarFp.getUpdateVariantsJobs(revision, fields_catalog_variant_bulk_update_job, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog category bulk create job to create a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryCreateJobCreateQuery} CatalogCategoryCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnCreateCategoriesJob(revision: string, CatalogCategoryCreateJobCreateQuery: CatalogCategoryCreateJobCreateQuery, options?: any): AxiosPromise<PostCatalogCategoryCreateJobResponse> {
            return localVarFp.spawnCreateCategoriesJob(revision, CatalogCategoryCreateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog item bulk create job to create a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCreateJobCreateQuery} CatalogItemCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnCreateItemsJob(revision: string, CatalogItemCreateJobCreateQuery: CatalogItemCreateJobCreateQuery, options?: any): AxiosPromise<PostCatalogItemCreateJobResponse> {
            return localVarFp.spawnCreateItemsJob(revision, CatalogItemCreateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog variant bulk create job to create a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Create Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantCreateJobCreateQuery} CatalogVariantCreateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnCreateVariantsJob(revision: string, CatalogVariantCreateJobCreateQuery: CatalogVariantCreateJobCreateQuery, options?: any): AxiosPromise<PostCatalogVariantCreateJobResponse> {
            return localVarFp.spawnCreateVariantsJob(revision, CatalogVariantCreateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog category bulk delete job to delete a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryDeleteJobCreateQuery} CatalogCategoryDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnDeleteCategoriesJob(revision: string, CatalogCategoryDeleteJobCreateQuery: CatalogCategoryDeleteJobCreateQuery, options?: any): AxiosPromise<PostCatalogCategoryDeleteJobResponse> {
            return localVarFp.spawnDeleteCategoriesJob(revision, CatalogCategoryDeleteJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog item bulk delete job to delete a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemDeleteJobCreateQuery} CatalogItemDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnDeleteItemsJob(revision: string, CatalogItemDeleteJobCreateQuery: CatalogItemDeleteJobCreateQuery, options?: any): AxiosPromise<PostCatalogItemDeleteJobResponse> {
            return localVarFp.spawnDeleteItemsJob(revision, CatalogItemDeleteJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog variant bulk delete job to delete a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Delete Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantDeleteJobCreateQuery} CatalogVariantDeleteJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnDeleteVariantsJob(revision: string, CatalogVariantDeleteJobCreateQuery: CatalogVariantDeleteJobCreateQuery, options?: any): AxiosPromise<PostCatalogVariantDeleteJobResponse> {
            return localVarFp.spawnDeleteVariantsJob(revision, CatalogVariantDeleteJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog category bulk update job to update a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Categories Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryUpdateJobCreateQuery} CatalogCategoryUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnUpdateCategoriesJob(revision: string, CatalogCategoryUpdateJobCreateQuery: CatalogCategoryUpdateJobCreateQuery, options?: any): AxiosPromise<PostCatalogCategoryUpdateJobResponse> {
            return localVarFp.spawnUpdateCategoriesJob(revision, CatalogCategoryUpdateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog item bulk update job to update a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Items Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemUpdateJobCreateQuery} CatalogItemUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnUpdateItemsJob(revision: string, CatalogItemUpdateJobCreateQuery: CatalogItemUpdateJobCreateQuery, options?: any): AxiosPromise<PostCatalogItemUpdateJobResponse> {
            return localVarFp.spawnUpdateItemsJob(revision, CatalogItemUpdateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a catalog variant bulk update job to update a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Spawn Update Variants Job
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantUpdateJobCreateQuery} CatalogVariantUpdateJobCreateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spawnUpdateVariantsJob(revision: string, CatalogVariantUpdateJobCreateQuery: CatalogVariantUpdateJobCreateQuery, options?: any): AxiosPromise<PostCatalogVariantUpdateJobResponse> {
            return localVarFp.spawnUpdateVariantsJob(revision, CatalogVariantUpdateJobCreateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Category
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryUpdateQuery} CatalogCategoryUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogCategory(id: string, revision: string, CatalogCategoryUpdateQuery: CatalogCategoryUpdateQuery, options?: any): AxiosPromise<PatchCatalogCategoryResponse> {
            return localVarFp.updateCatalogCategory(id, revision, CatalogCategoryUpdateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Category Relationships
         * @param {string} id 
         * @param {'items'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogCategoryItemOp} CatalogCategoryItemOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogCategoryRelationships(id: string, related_resource: 'items', revision: string, CatalogCategoryItemOp: CatalogCategoryItemOp, options?: any): AxiosPromise<void> {
            return localVarFp.updateCatalogCategoryRelationships(id, related_resource, revision, CatalogCategoryItemOp, options).then((request) => request(axios, basePath));
        },
        /**
         * Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Item
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemUpdateQuery} CatalogItemUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogItem(id: string, revision: string, CatalogItemUpdateQuery: CatalogItemUpdateQuery, options?: any): AxiosPromise<PatchCatalogItemResponse> {
            return localVarFp.updateCatalogItem(id, revision, CatalogItemUpdateQuery, options).then((request) => request(axios, basePath));
        },
        /**
         * Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Item Relationships
         * @param {string} id 
         * @param {'categories'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogItemCategoryOp} CatalogItemCategoryOp 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogItemRelationships(id: string, related_resource: 'categories', revision: string, CatalogItemCategoryOp: CatalogItemCategoryOp, options?: any): AxiosPromise<void> {
            return localVarFp.updateCatalogItemRelationships(id, related_resource, revision, CatalogItemCategoryOp, options).then((request) => request(axios, basePath));
        },
        /**
         * Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
         * @summary Update Catalog Variant
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {CatalogVariantUpdateQuery} CatalogVariantUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCatalogVariant(id: string, revision: string, CatalogVariantUpdateQuery: CatalogVariantUpdateQuery, options?: any): AxiosPromise<PatchCatalogVariantResponse> {
            return localVarFp.updateCatalogVariant(id, revision, CatalogVariantUpdateQuery, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createCatalogCategory operation in CatalogsApi.
 * @export
 * @interface CatalogsApiCreateCatalogCategoryRequest
 */
export interface CatalogsApiCreateCatalogCategoryRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiCreateCatalogCategory
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogCategoryCreateQuery}
     * @memberof CatalogsApiCreateCatalogCategory
     */
    readonly CatalogCategoryCreateQuery: CatalogCategoryCreateQuery
}

/**
 * Request parameters for createCatalogCategoryRelationships operation in CatalogsApi.
 * @export
 * @interface CatalogsApiCreateCatalogCategoryRelationshipsRequest
 */
export interface CatalogsApiCreateCatalogCategoryRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiCreateCatalogCategoryRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'items'}
     * @memberof CatalogsApiCreateCatalogCategoryRelationships
     */
    readonly related_resource: 'items'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiCreateCatalogCategoryRelationships
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogCategoryItemOp}
     * @memberof CatalogsApiCreateCatalogCategoryRelationships
     */
    readonly CatalogCategoryItemOp: CatalogCategoryItemOp
}

/**
 * Request parameters for createCatalogItem operation in CatalogsApi.
 * @export
 * @interface CatalogsApiCreateCatalogItemRequest
 */
export interface CatalogsApiCreateCatalogItemRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiCreateCatalogItem
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogItemCreateQuery}
     * @memberof CatalogsApiCreateCatalogItem
     */
    readonly CatalogItemCreateQuery: CatalogItemCreateQuery
}

/**
 * Request parameters for createCatalogItemRelationships operation in CatalogsApi.
 * @export
 * @interface CatalogsApiCreateCatalogItemRelationshipsRequest
 */
export interface CatalogsApiCreateCatalogItemRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiCreateCatalogItemRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'categories'}
     * @memberof CatalogsApiCreateCatalogItemRelationships
     */
    readonly related_resource: 'categories'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiCreateCatalogItemRelationships
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogItemCategoryOp}
     * @memberof CatalogsApiCreateCatalogItemRelationships
     */
    readonly CatalogItemCategoryOp: CatalogItemCategoryOp
}

/**
 * Request parameters for createCatalogVariant operation in CatalogsApi.
 * @export
 * @interface CatalogsApiCreateCatalogVariantRequest
 */
export interface CatalogsApiCreateCatalogVariantRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiCreateCatalogVariant
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogVariantCreateQuery}
     * @memberof CatalogsApiCreateCatalogVariant
     */
    readonly CatalogVariantCreateQuery: CatalogVariantCreateQuery
}

/**
 * Request parameters for deleteCatalogCategory operation in CatalogsApi.
 * @export
 * @interface CatalogsApiDeleteCatalogCategoryRequest
 */
export interface CatalogsApiDeleteCatalogCategoryRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogCategory
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogCategory
     */
    readonly revision: string
}

/**
 * Request parameters for deleteCatalogCategoryRelationships operation in CatalogsApi.
 * @export
 * @interface CatalogsApiDeleteCatalogCategoryRelationshipsRequest
 */
export interface CatalogsApiDeleteCatalogCategoryRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogCategoryRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'items'}
     * @memberof CatalogsApiDeleteCatalogCategoryRelationships
     */
    readonly related_resource: 'items'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogCategoryRelationships
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogCategoryItemOp}
     * @memberof CatalogsApiDeleteCatalogCategoryRelationships
     */
    readonly CatalogCategoryItemOp: CatalogCategoryItemOp
}

/**
 * Request parameters for deleteCatalogItem operation in CatalogsApi.
 * @export
 * @interface CatalogsApiDeleteCatalogItemRequest
 */
export interface CatalogsApiDeleteCatalogItemRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogItem
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogItem
     */
    readonly revision: string
}

/**
 * Request parameters for deleteCatalogItemRelationships operation in CatalogsApi.
 * @export
 * @interface CatalogsApiDeleteCatalogItemRelationshipsRequest
 */
export interface CatalogsApiDeleteCatalogItemRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogItemRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'categories'}
     * @memberof CatalogsApiDeleteCatalogItemRelationships
     */
    readonly related_resource: 'categories'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogItemRelationships
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogItemCategoryOp}
     * @memberof CatalogsApiDeleteCatalogItemRelationships
     */
    readonly CatalogItemCategoryOp: CatalogItemCategoryOp
}

/**
 * Request parameters for deleteCatalogVariant operation in CatalogsApi.
 * @export
 * @interface CatalogsApiDeleteCatalogVariantRequest
 */
export interface CatalogsApiDeleteCatalogVariantRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogVariant
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiDeleteCatalogVariant
     */
    readonly revision: string
}

/**
 * Request parameters for getCatalogCategories operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogCategoriesRequest
 */
export interface CatalogsApiGetCatalogCategoriesRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategories
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'name' | 'updated'>}
     * @memberof CatalogsApiGetCatalogCategories
     */
    readonly fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategories
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategories
     */
    readonly page_cursor?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
     * @type {'created' | '-created'}
     * @memberof CatalogsApiGetCatalogCategories
     */
    readonly sort?: 'created' | '-created'
}

/**
 * Request parameters for getCatalogCategory operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogCategoryRequest
 */
export interface CatalogsApiGetCatalogCategoryRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategory
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategory
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'name' | 'updated'>}
     * @memberof CatalogsApiGetCatalogCategory
     */
    readonly fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>
}

/**
 * Request parameters for getCatalogCategoryItems operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogCategoryItemsRequest
 */
export interface CatalogsApiGetCatalogCategoryItemsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategoryItems
     */
    readonly category_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategoryItems
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogCategoryItems
     */
    readonly fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogCategoryItems
     */
    readonly fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategoryItems
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'variants'>}
     * @memberof CatalogsApiGetCatalogCategoryItems
     */
    readonly include?: Array<'variants'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategoryItems
     */
    readonly page_cursor?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
     * @type {'created' | '-created'}
     * @memberof CatalogsApiGetCatalogCategoryItems
     */
    readonly sort?: 'created' | '-created'
}

/**
 * Request parameters for getCatalogCategoryRelationships operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogCategoryRelationshipsRequest
 */
export interface CatalogsApiGetCatalogCategoryRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategoryRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'items'}
     * @memberof CatalogsApiGetCatalogCategoryRelationships
     */
    readonly related_resource: 'items'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategoryRelationships
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCatalogCategoryRelationships
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getCatalogItem operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogItemRequest
 */
export interface CatalogsApiGetCatalogItemRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCatalogItem
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogItem
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogItem
     */
    readonly fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogItem
     */
    readonly fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'variants'>}
     * @memberof CatalogsApiGetCatalogItem
     */
    readonly include?: Array<'variants'>
}

/**
 * Request parameters for getCatalogItemCategories operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogItemCategoriesRequest
 */
export interface CatalogsApiGetCatalogItemCategoriesRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemCategories
     */
    readonly item_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemCategories
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'name' | 'updated'>}
     * @memberof CatalogsApiGetCatalogItemCategories
     */
    readonly fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemCategories
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemCategories
     */
    readonly page_cursor?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
     * @type {'created' | '-created'}
     * @memberof CatalogsApiGetCatalogItemCategories
     */
    readonly sort?: 'created' | '-created'
}

/**
 * Request parameters for getCatalogItemRelationships operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogItemRelationshipsRequest
 */
export interface CatalogsApiGetCatalogItemRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'categories'}
     * @memberof CatalogsApiGetCatalogItemRelationships
     */
    readonly related_resource: 'categories'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemRelationships
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemRelationships
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getCatalogItemVariants operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogItemVariantsRequest
 */
export interface CatalogsApiGetCatalogItemVariantsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemVariants
     */
    readonly item_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemVariants
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogItemVariants
     */
    readonly fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemVariants
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCatalogItemVariants
     */
    readonly page_cursor?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
     * @type {'created' | '-created'}
     * @memberof CatalogsApiGetCatalogItemVariants
     */
    readonly sort?: 'created' | '-created'
}

/**
 * Request parameters for getCatalogItems operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogItemsRequest
 */
export interface CatalogsApiGetCatalogItemsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogItems
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogItems
     */
    readonly fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogItems
     */
    readonly fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCatalogItems
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'variants'>}
     * @memberof CatalogsApiGetCatalogItems
     */
    readonly include?: Array<'variants'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCatalogItems
     */
    readonly page_cursor?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
     * @type {'created' | '-created'}
     * @memberof CatalogsApiGetCatalogItems
     */
    readonly sort?: 'created' | '-created'
}

/**
 * Request parameters for getCatalogVariant operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogVariantRequest
 */
export interface CatalogsApiGetCatalogVariantRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCatalogVariant
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogVariant
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogVariant
     */
    readonly fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>
}

/**
 * Request parameters for getCatalogVariants operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCatalogVariantsRequest
 */
export interface CatalogsApiGetCatalogVariantsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCatalogVariants
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCatalogVariants
     */
    readonly fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCatalogVariants
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCatalogVariants
     */
    readonly page_cursor?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting
     * @type {'created' | '-created'}
     * @memberof CatalogsApiGetCatalogVariants
     */
    readonly sort?: 'created' | '-created'
}

/**
 * Request parameters for getCreateCategoriesJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCreateCategoriesJobRequest
 */
export interface CatalogsApiGetCreateCategoriesJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCreateCategoriesJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCreateCategoriesJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetCreateCategoriesJob
     */
    readonly fields_catalog_category_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'name' | 'updated'>}
     * @memberof CatalogsApiGetCreateCategoriesJob
     */
    readonly fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'categories'>}
     * @memberof CatalogsApiGetCreateCategoriesJob
     */
    readonly include?: Array<'categories'>
}

/**
 * Request parameters for getCreateCategoriesJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCreateCategoriesJobsRequest
 */
export interface CatalogsApiGetCreateCategoriesJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCreateCategoriesJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetCreateCategoriesJobs
     */
    readonly fields_catalog_category_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCreateCategoriesJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCreateCategoriesJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getCreateItemsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCreateItemsJobRequest
 */
export interface CatalogsApiGetCreateItemsJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCreateItemsJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCreateItemsJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetCreateItemsJob
     */
    readonly fields_catalog_item_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCreateItemsJob
     */
    readonly fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'items'>}
     * @memberof CatalogsApiGetCreateItemsJob
     */
    readonly include?: Array<'items'>
}

/**
 * Request parameters for getCreateItemsJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCreateItemsJobsRequest
 */
export interface CatalogsApiGetCreateItemsJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCreateItemsJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetCreateItemsJobs
     */
    readonly fields_catalog_item_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCreateItemsJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCreateItemsJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getCreateVariantsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCreateVariantsJobRequest
 */
export interface CatalogsApiGetCreateVariantsJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetCreateVariantsJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCreateVariantsJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetCreateVariantsJob
     */
    readonly fields_catalog_variant_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetCreateVariantsJob
     */
    readonly fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'variants'>}
     * @memberof CatalogsApiGetCreateVariantsJob
     */
    readonly include?: Array<'variants'>
}

/**
 * Request parameters for getCreateVariantsJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetCreateVariantsJobsRequest
 */
export interface CatalogsApiGetCreateVariantsJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetCreateVariantsJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetCreateVariantsJobs
     */
    readonly fields_catalog_variant_bulk_create_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetCreateVariantsJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetCreateVariantsJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getDeleteCategoriesJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetDeleteCategoriesJobRequest
 */
export interface CatalogsApiGetDeleteCategoriesJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetDeleteCategoriesJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetDeleteCategoriesJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetDeleteCategoriesJob
     */
    readonly fields_catalog_category_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>
}

/**
 * Request parameters for getDeleteCategoriesJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetDeleteCategoriesJobsRequest
 */
export interface CatalogsApiGetDeleteCategoriesJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetDeleteCategoriesJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetDeleteCategoriesJobs
     */
    readonly fields_catalog_category_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetDeleteCategoriesJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetDeleteCategoriesJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getDeleteItemsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetDeleteItemsJobRequest
 */
export interface CatalogsApiGetDeleteItemsJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetDeleteItemsJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetDeleteItemsJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetDeleteItemsJob
     */
    readonly fields_catalog_item_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>
}

/**
 * Request parameters for getDeleteItemsJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetDeleteItemsJobsRequest
 */
export interface CatalogsApiGetDeleteItemsJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetDeleteItemsJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetDeleteItemsJobs
     */
    readonly fields_catalog_item_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetDeleteItemsJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetDeleteItemsJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getDeleteVariantsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetDeleteVariantsJobRequest
 */
export interface CatalogsApiGetDeleteVariantsJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetDeleteVariantsJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetDeleteVariantsJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetDeleteVariantsJob
     */
    readonly fields_catalog_variant_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>
}

/**
 * Request parameters for getDeleteVariantsJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetDeleteVariantsJobsRequest
 */
export interface CatalogsApiGetDeleteVariantsJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetDeleteVariantsJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetDeleteVariantsJobs
     */
    readonly fields_catalog_variant_bulk_delete_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetDeleteVariantsJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetDeleteVariantsJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getUpdateCategoriesJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetUpdateCategoriesJobRequest
 */
export interface CatalogsApiGetUpdateCategoriesJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetUpdateCategoriesJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetUpdateCategoriesJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetUpdateCategoriesJob
     */
    readonly fields_catalog_category_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'name' | 'updated'>}
     * @memberof CatalogsApiGetUpdateCategoriesJob
     */
    readonly fields_catalog_category?: Array<'external_id' | 'name' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'categories'>}
     * @memberof CatalogsApiGetUpdateCategoriesJob
     */
    readonly include?: Array<'categories'>
}

/**
 * Request parameters for getUpdateCategoriesJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetUpdateCategoriesJobsRequest
 */
export interface CatalogsApiGetUpdateCategoriesJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetUpdateCategoriesJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetUpdateCategoriesJobs
     */
    readonly fields_catalog_category_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetUpdateCategoriesJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetUpdateCategoriesJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getUpdateItemsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetUpdateItemsJobRequest
 */
export interface CatalogsApiGetUpdateItemsJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetUpdateItemsJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetUpdateItemsJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetUpdateItemsJob
     */
    readonly fields_catalog_item_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetUpdateItemsJob
     */
    readonly fields_catalog_item?: Array<'external_id' | 'title' | 'description' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'items'>}
     * @memberof CatalogsApiGetUpdateItemsJob
     */
    readonly include?: Array<'items'>
}

/**
 * Request parameters for getUpdateItemsJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetUpdateItemsJobsRequest
 */
export interface CatalogsApiGetUpdateItemsJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetUpdateItemsJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetUpdateItemsJobs
     */
    readonly fields_catalog_item_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetUpdateItemsJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetUpdateItemsJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getUpdateVariantsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetUpdateVariantsJobRequest
 */
export interface CatalogsApiGetUpdateVariantsJobRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiGetUpdateVariantsJob
     */
    readonly job_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetUpdateVariantsJob
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetUpdateVariantsJob
     */
    readonly fields_catalog_variant_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>}
     * @memberof CatalogsApiGetUpdateVariantsJob
     */
    readonly fields_catalog_variant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships
     * @type {Array<'variants'>}
     * @memberof CatalogsApiGetUpdateVariantsJob
     */
    readonly include?: Array<'variants'>
}

/**
 * Request parameters for getUpdateVariantsJobs operation in CatalogsApi.
 * @export
 * @interface CatalogsApiGetUpdateVariantsJobsRequest
 */
export interface CatalogsApiGetUpdateVariantsJobsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiGetUpdateVariantsJobs
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>}
     * @memberof CatalogsApiGetUpdateVariantsJobs
     */
    readonly fields_catalog_variant_bulk_update_job?: Array<'job_id' | 'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'expires_at' | 'errors'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof CatalogsApiGetUpdateVariantsJobs
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof CatalogsApiGetUpdateVariantsJobs
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for spawnCreateCategoriesJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnCreateCategoriesJobRequest
 */
export interface CatalogsApiSpawnCreateCategoriesJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnCreateCategoriesJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogCategoryCreateJobCreateQuery}
     * @memberof CatalogsApiSpawnCreateCategoriesJob
     */
    readonly CatalogCategoryCreateJobCreateQuery: CatalogCategoryCreateJobCreateQuery
}

/**
 * Request parameters for spawnCreateItemsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnCreateItemsJobRequest
 */
export interface CatalogsApiSpawnCreateItemsJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnCreateItemsJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogItemCreateJobCreateQuery}
     * @memberof CatalogsApiSpawnCreateItemsJob
     */
    readonly CatalogItemCreateJobCreateQuery: CatalogItemCreateJobCreateQuery
}

/**
 * Request parameters for spawnCreateVariantsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnCreateVariantsJobRequest
 */
export interface CatalogsApiSpawnCreateVariantsJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnCreateVariantsJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogVariantCreateJobCreateQuery}
     * @memberof CatalogsApiSpawnCreateVariantsJob
     */
    readonly CatalogVariantCreateJobCreateQuery: CatalogVariantCreateJobCreateQuery
}

/**
 * Request parameters for spawnDeleteCategoriesJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnDeleteCategoriesJobRequest
 */
export interface CatalogsApiSpawnDeleteCategoriesJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnDeleteCategoriesJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogCategoryDeleteJobCreateQuery}
     * @memberof CatalogsApiSpawnDeleteCategoriesJob
     */
    readonly CatalogCategoryDeleteJobCreateQuery: CatalogCategoryDeleteJobCreateQuery
}

/**
 * Request parameters for spawnDeleteItemsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnDeleteItemsJobRequest
 */
export interface CatalogsApiSpawnDeleteItemsJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnDeleteItemsJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogItemDeleteJobCreateQuery}
     * @memberof CatalogsApiSpawnDeleteItemsJob
     */
    readonly CatalogItemDeleteJobCreateQuery: CatalogItemDeleteJobCreateQuery
}

/**
 * Request parameters for spawnDeleteVariantsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnDeleteVariantsJobRequest
 */
export interface CatalogsApiSpawnDeleteVariantsJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnDeleteVariantsJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogVariantDeleteJobCreateQuery}
     * @memberof CatalogsApiSpawnDeleteVariantsJob
     */
    readonly CatalogVariantDeleteJobCreateQuery: CatalogVariantDeleteJobCreateQuery
}

/**
 * Request parameters for spawnUpdateCategoriesJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnUpdateCategoriesJobRequest
 */
export interface CatalogsApiSpawnUpdateCategoriesJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnUpdateCategoriesJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogCategoryUpdateJobCreateQuery}
     * @memberof CatalogsApiSpawnUpdateCategoriesJob
     */
    readonly CatalogCategoryUpdateJobCreateQuery: CatalogCategoryUpdateJobCreateQuery
}

/**
 * Request parameters for spawnUpdateItemsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnUpdateItemsJobRequest
 */
export interface CatalogsApiSpawnUpdateItemsJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnUpdateItemsJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogItemUpdateJobCreateQuery}
     * @memberof CatalogsApiSpawnUpdateItemsJob
     */
    readonly CatalogItemUpdateJobCreateQuery: CatalogItemUpdateJobCreateQuery
}

/**
 * Request parameters for spawnUpdateVariantsJob operation in CatalogsApi.
 * @export
 * @interface CatalogsApiSpawnUpdateVariantsJobRequest
 */
export interface CatalogsApiSpawnUpdateVariantsJobRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiSpawnUpdateVariantsJob
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogVariantUpdateJobCreateQuery}
     * @memberof CatalogsApiSpawnUpdateVariantsJob
     */
    readonly CatalogVariantUpdateJobCreateQuery: CatalogVariantUpdateJobCreateQuery
}

/**
 * Request parameters for updateCatalogCategory operation in CatalogsApi.
 * @export
 * @interface CatalogsApiUpdateCatalogCategoryRequest
 */
export interface CatalogsApiUpdateCatalogCategoryRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogCategory
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogCategory
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogCategoryUpdateQuery}
     * @memberof CatalogsApiUpdateCatalogCategory
     */
    readonly CatalogCategoryUpdateQuery: CatalogCategoryUpdateQuery
}

/**
 * Request parameters for updateCatalogCategoryRelationships operation in CatalogsApi.
 * @export
 * @interface CatalogsApiUpdateCatalogCategoryRelationshipsRequest
 */
export interface CatalogsApiUpdateCatalogCategoryRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogCategoryRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'items'}
     * @memberof CatalogsApiUpdateCatalogCategoryRelationships
     */
    readonly related_resource: 'items'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogCategoryRelationships
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogCategoryItemOp}
     * @memberof CatalogsApiUpdateCatalogCategoryRelationships
     */
    readonly CatalogCategoryItemOp: CatalogCategoryItemOp
}

/**
 * Request parameters for updateCatalogItem operation in CatalogsApi.
 * @export
 * @interface CatalogsApiUpdateCatalogItemRequest
 */
export interface CatalogsApiUpdateCatalogItemRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogItem
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogItem
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogItemUpdateQuery}
     * @memberof CatalogsApiUpdateCatalogItem
     */
    readonly CatalogItemUpdateQuery: CatalogItemUpdateQuery
}

/**
 * Request parameters for updateCatalogItemRelationships operation in CatalogsApi.
 * @export
 * @interface CatalogsApiUpdateCatalogItemRelationshipsRequest
 */
export interface CatalogsApiUpdateCatalogItemRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogItemRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'categories'}
     * @memberof CatalogsApiUpdateCatalogItemRelationships
     */
    readonly related_resource: 'categories'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogItemRelationships
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogItemCategoryOp}
     * @memberof CatalogsApiUpdateCatalogItemRelationships
     */
    readonly CatalogItemCategoryOp: CatalogItemCategoryOp
}

/**
 * Request parameters for updateCatalogVariant operation in CatalogsApi.
 * @export
 * @interface CatalogsApiUpdateCatalogVariantRequest
 */
export interface CatalogsApiUpdateCatalogVariantRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogVariant
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof CatalogsApiUpdateCatalogVariant
     */
    readonly revision: string

    /**
     * 
     * @type {CatalogVariantUpdateQuery}
     * @memberof CatalogsApiUpdateCatalogVariant
     */
    readonly CatalogVariantUpdateQuery: CatalogVariantUpdateQuery
}

/**
 * CatalogsApi - object-oriented interface
 * @export
 * @class CatalogsApi
 * @extends {BaseAPI}
 */
export class CatalogsApi extends BaseAPI {
    /**
     * Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Create Catalog Category
     * @param {CatalogsApiCreateCatalogCategoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public createCatalogCategory(requestParameters: CatalogsApiCreateCatalogCategoryRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).createCatalogCategory(requestParameters.revision, requestParameters.CatalogCategoryCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Create Catalog Category Relationships
     * @param {CatalogsApiCreateCatalogCategoryRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public createCatalogCategoryRelationships(requestParameters: CatalogsApiCreateCatalogCategoryRelationshipsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).createCatalogCategoryRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.CatalogCategoryItemOp, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Create Catalog Item
     * @param {CatalogsApiCreateCatalogItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public createCatalogItem(requestParameters: CatalogsApiCreateCatalogItemRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).createCatalogItem(requestParameters.revision, requestParameters.CatalogItemCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Create Catalog Item Relationships
     * @param {CatalogsApiCreateCatalogItemRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public createCatalogItemRelationships(requestParameters: CatalogsApiCreateCatalogItemRelationshipsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).createCatalogItemRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.CatalogItemCategoryOp, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Create Catalog Variant
     * @param {CatalogsApiCreateCatalogVariantRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public createCatalogVariant(requestParameters: CatalogsApiCreateCatalogVariantRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).createCatalogVariant(requestParameters.revision, requestParameters.CatalogVariantCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Delete Catalog Category
     * @param {CatalogsApiDeleteCatalogCategoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public deleteCatalogCategory(requestParameters: CatalogsApiDeleteCatalogCategoryRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).deleteCatalogCategory(requestParameters.id, requestParameters.revision, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Delete Catalog Category Relationships
     * @param {CatalogsApiDeleteCatalogCategoryRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public deleteCatalogCategoryRelationships(requestParameters: CatalogsApiDeleteCatalogCategoryRelationshipsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).deleteCatalogCategoryRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.CatalogCategoryItemOp, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Delete Catalog Item
     * @param {CatalogsApiDeleteCatalogItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public deleteCatalogItem(requestParameters: CatalogsApiDeleteCatalogItemRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).deleteCatalogItem(requestParameters.id, requestParameters.revision, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Delete Catalog Item Relationships
     * @param {CatalogsApiDeleteCatalogItemRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public deleteCatalogItemRelationships(requestParameters: CatalogsApiDeleteCatalogItemRelationshipsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).deleteCatalogItemRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.CatalogItemCategoryOp, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Delete Catalog Variant
     * @param {CatalogsApiDeleteCatalogVariantRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public deleteCatalogVariant(requestParameters: CatalogsApiDeleteCatalogVariantRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).deleteCatalogVariant(requestParameters.id, requestParameters.revision, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog categories in an account. Catalog categories can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Categories
     * @param {CatalogsApiGetCatalogCategoriesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogCategories(requestParameters: CatalogsApiGetCatalogCategoriesRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogCategories(requestParameters.revision, requestParameters.fields_catalog_category, requestParameters.filter, requestParameters.page_cursor, requestParameters.sort, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Category
     * @param {CatalogsApiGetCatalogCategoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogCategory(requestParameters: CatalogsApiGetCatalogCategoryRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogCategory(requestParameters.id, requestParameters.revision, requestParameters.fields_catalog_category, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all items in a category with the given category ID. Items can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants` Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Category Items
     * @param {CatalogsApiGetCatalogCategoryItemsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogCategoryItems(requestParameters: CatalogsApiGetCatalogCategoryItemsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogCategoryItems(requestParameters.category_id, requestParameters.revision, requestParameters.fields_catalog_item, requestParameters.fields_catalog_variant, requestParameters.filter, requestParameters.include, requestParameters.page_cursor, requestParameters.sort, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all items in the given category ID. Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Category Relationships
     * @param {CatalogsApiGetCatalogCategoryRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogCategoryRelationships(requestParameters: CatalogsApiGetCatalogCategoryRelationshipsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogCategoryRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a specific catalog item with the given item ID. Request specific fields and variants using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Item
     * @param {CatalogsApiGetCatalogItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogItem(requestParameters: CatalogsApiGetCatalogItemRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogItem(requestParameters.id, requestParameters.revision, requestParameters.fields_catalog_item, requestParameters.fields_catalog_variant, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog categories that an item with the given item ID is in. Catalog categories can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Item Categories
     * @param {CatalogsApiGetCatalogItemCategoriesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogItemCategories(requestParameters: CatalogsApiGetCatalogItemCategoriesRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogItemCategories(requestParameters.item_id, requestParameters.revision, requestParameters.fields_catalog_category, requestParameters.filter, requestParameters.page_cursor, requestParameters.sort, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog categories that a particular item is in. Returns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Item Relationships
     * @param {CatalogsApiGetCatalogItemRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogItemRelationships(requestParameters: CatalogsApiGetCatalogItemRelationshipsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogItemRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all variants related to the given item ID. Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Variants can be sorted by the following fields, in ascending and descending order: `created` Returns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Item Variants
     * @param {CatalogsApiGetCatalogItemVariantsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogItemVariants(requestParameters: CatalogsApiGetCatalogItemVariantsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogItemVariants(requestParameters.item_id, requestParameters.revision, requestParameters.fields_catalog_variant, requestParameters.filter, requestParameters.page_cursor, requestParameters.sort, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog items in an account. Catalog items can be sorted by the following fields, in ascending and descending order: `created` Use filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Include parameters can be provided to get the following related resource data: `variants` Returns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Items
     * @param {CatalogsApiGetCatalogItemsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogItems(requestParameters: CatalogsApiGetCatalogItemsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogItems(requestParameters.revision, requestParameters.fields_catalog_item, requestParameters.fields_catalog_variant, requestParameters.filter, requestParameters.include, requestParameters.page_cursor, requestParameters.sort, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Variant
     * @param {CatalogsApiGetCatalogVariantRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogVariant(requestParameters: CatalogsApiGetCatalogVariantRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogVariant(requestParameters.id, requestParameters.revision, requestParameters.fields_catalog_variant, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all variants in an account. Use filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets). Variants can be sorted by the following fields, in ascending and descending order: `created` Returns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Catalog Variants
     * @param {CatalogsApiGetCatalogVariantsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCatalogVariants(requestParameters: CatalogsApiGetCatalogVariantsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCatalogVariants(requestParameters.revision, requestParameters.fields_catalog_variant, requestParameters.filter, requestParameters.page_cursor, requestParameters.sort, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog category bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Create Categories Job
     * @param {CatalogsApiGetCreateCategoriesJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCreateCategoriesJob(requestParameters: CatalogsApiGetCreateCategoriesJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCreateCategoriesJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_category_bulk_create_job, requestParameters.fields_catalog_category, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog category bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Create Categories Jobs
     * @param {CatalogsApiGetCreateCategoriesJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCreateCategoriesJobs(requestParameters: CatalogsApiGetCreateCategoriesJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCreateCategoriesJobs(requestParameters.revision, requestParameters.fields_catalog_category_bulk_create_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog item bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Create Items Job
     * @param {CatalogsApiGetCreateItemsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCreateItemsJob(requestParameters: CatalogsApiGetCreateItemsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCreateItemsJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_item_bulk_create_job, requestParameters.fields_catalog_item, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog item bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Create Items Jobs
     * @param {CatalogsApiGetCreateItemsJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCreateItemsJobs(requestParameters: CatalogsApiGetCreateItemsJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCreateItemsJobs(requestParameters.revision, requestParameters.fields_catalog_item_bulk_create_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog variant bulk create job with the given job ID. Include parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Create Variants Job
     * @param {CatalogsApiGetCreateVariantsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCreateVariantsJob(requestParameters: CatalogsApiGetCreateVariantsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCreateVariantsJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_variant_bulk_create_job, requestParameters.fields_catalog_variant, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog variant bulk create jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Create Variants Jobs
     * @param {CatalogsApiGetCreateVariantsJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getCreateVariantsJobs(requestParameters: CatalogsApiGetCreateVariantsJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getCreateVariantsJobs(requestParameters.revision, requestParameters.fields_catalog_variant_bulk_create_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Delete Categories Job
     * @param {CatalogsApiGetDeleteCategoriesJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getDeleteCategoriesJob(requestParameters: CatalogsApiGetDeleteCategoriesJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getDeleteCategoriesJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_category_bulk_delete_job, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog category bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Delete Categories Jobs
     * @param {CatalogsApiGetDeleteCategoriesJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getDeleteCategoriesJobs(requestParameters: CatalogsApiGetDeleteCategoriesJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getDeleteCategoriesJobs(requestParameters.revision, requestParameters.fields_catalog_category_bulk_delete_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Delete Items Job
     * @param {CatalogsApiGetDeleteItemsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getDeleteItemsJob(requestParameters: CatalogsApiGetDeleteItemsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getDeleteItemsJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_item_bulk_delete_job, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog item bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Delete Items Jobs
     * @param {CatalogsApiGetDeleteItemsJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getDeleteItemsJobs(requestParameters: CatalogsApiGetDeleteItemsJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getDeleteItemsJobs(requestParameters.revision, requestParameters.fields_catalog_item_bulk_delete_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Delete Variants Job
     * @param {CatalogsApiGetDeleteVariantsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getDeleteVariantsJob(requestParameters: CatalogsApiGetDeleteVariantsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getDeleteVariantsJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_variant_bulk_delete_job, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog variant bulk delete jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Delete Variants Jobs
     * @param {CatalogsApiGetDeleteVariantsJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getDeleteVariantsJobs(requestParameters: CatalogsApiGetDeleteVariantsJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getDeleteVariantsJobs(requestParameters.revision, requestParameters.fields_catalog_variant_bulk_delete_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog category bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Update Categories Job
     * @param {CatalogsApiGetUpdateCategoriesJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getUpdateCategoriesJob(requestParameters: CatalogsApiGetUpdateCategoriesJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getUpdateCategoriesJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_category_bulk_update_job, requestParameters.fields_catalog_category, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog category bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Update Categories Jobs
     * @param {CatalogsApiGetUpdateCategoriesJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getUpdateCategoriesJobs(requestParameters: CatalogsApiGetUpdateCategoriesJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getUpdateCategoriesJobs(requestParameters.revision, requestParameters.fields_catalog_category_bulk_update_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog item bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Update Items Job
     * @param {CatalogsApiGetUpdateItemsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getUpdateItemsJob(requestParameters: CatalogsApiGetUpdateItemsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getUpdateItemsJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_item_bulk_update_job, requestParameters.fields_catalog_item, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog item bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Update Items Jobs
     * @param {CatalogsApiGetUpdateItemsJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getUpdateItemsJobs(requestParameters: CatalogsApiGetUpdateItemsJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getUpdateItemsJobs(requestParameters.revision, requestParameters.fields_catalog_item_bulk_update_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get a catalog variate bulk update job with the given job ID. Include parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Update Variants Job
     * @param {CatalogsApiGetUpdateVariantsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getUpdateVariantsJob(requestParameters: CatalogsApiGetUpdateVariantsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getUpdateVariantsJob(requestParameters.job_id, requestParameters.revision, requestParameters.fields_catalog_variant_bulk_update_job, requestParameters.fields_catalog_variant, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all catalog variant bulk update jobs. Returns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `Catalogs Read`
     * @summary Get Update Variants Jobs
     * @param {CatalogsApiGetUpdateVariantsJobsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public getUpdateVariantsJobs(requestParameters: CatalogsApiGetUpdateVariantsJobsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).getUpdateVariantsJobs(requestParameters.revision, requestParameters.fields_catalog_variant_bulk_update_job, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog category bulk create job to create a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Create Categories Job
     * @param {CatalogsApiSpawnCreateCategoriesJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnCreateCategoriesJob(requestParameters: CatalogsApiSpawnCreateCategoriesJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnCreateCategoriesJob(requestParameters.revision, requestParameters.CatalogCategoryCreateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog item bulk create job to create a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Create Items Job
     * @param {CatalogsApiSpawnCreateItemsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnCreateItemsJob(requestParameters: CatalogsApiSpawnCreateItemsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnCreateItemsJob(requestParameters.revision, requestParameters.CatalogItemCreateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog variant bulk create job to create a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Create Variants Job
     * @param {CatalogsApiSpawnCreateVariantsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnCreateVariantsJob(requestParameters: CatalogsApiSpawnCreateVariantsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnCreateVariantsJob(requestParameters.revision, requestParameters.CatalogVariantCreateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog category bulk delete job to delete a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Delete Categories Job
     * @param {CatalogsApiSpawnDeleteCategoriesJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnDeleteCategoriesJob(requestParameters: CatalogsApiSpawnDeleteCategoriesJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnDeleteCategoriesJob(requestParameters.revision, requestParameters.CatalogCategoryDeleteJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog item bulk delete job to delete a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Delete Items Job
     * @param {CatalogsApiSpawnDeleteItemsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnDeleteItemsJob(requestParameters: CatalogsApiSpawnDeleteItemsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnDeleteItemsJob(requestParameters.revision, requestParameters.CatalogItemDeleteJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog variant bulk delete job to delete a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Delete Variants Job
     * @param {CatalogsApiSpawnDeleteVariantsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnDeleteVariantsJob(requestParameters: CatalogsApiSpawnDeleteVariantsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnDeleteVariantsJob(requestParameters.revision, requestParameters.CatalogVariantDeleteJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog category bulk update job to update a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Update Categories Job
     * @param {CatalogsApiSpawnUpdateCategoriesJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnUpdateCategoriesJob(requestParameters: CatalogsApiSpawnUpdateCategoriesJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnUpdateCategoriesJob(requestParameters.revision, requestParameters.CatalogCategoryUpdateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog item bulk update job to update a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Update Items Job
     * @param {CatalogsApiSpawnUpdateItemsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnUpdateItemsJob(requestParameters: CatalogsApiSpawnUpdateItemsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnUpdateItemsJob(requestParameters.revision, requestParameters.CatalogItemUpdateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a catalog variant bulk update job to update a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Spawn Update Variants Job
     * @param {CatalogsApiSpawnUpdateVariantsJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public spawnUpdateVariantsJob(requestParameters: CatalogsApiSpawnUpdateVariantsJobRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).spawnUpdateVariantsJob(requestParameters.revision, requestParameters.CatalogVariantUpdateJobCreateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Update Catalog Category
     * @param {CatalogsApiUpdateCatalogCategoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public updateCatalogCategory(requestParameters: CatalogsApiUpdateCatalogCategoryRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).updateCatalogCategory(requestParameters.id, requestParameters.revision, requestParameters.CatalogCategoryUpdateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Update Catalog Category Relationships
     * @param {CatalogsApiUpdateCatalogCategoryRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public updateCatalogCategoryRelationships(requestParameters: CatalogsApiUpdateCatalogCategoryRelationshipsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).updateCatalogCategoryRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.CatalogCategoryItemOp, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Update Catalog Item
     * @param {CatalogsApiUpdateCatalogItemRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public updateCatalogItem(requestParameters: CatalogsApiUpdateCatalogItemRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).updateCatalogItem(requestParameters.id, requestParameters.revision, requestParameters.CatalogItemUpdateQuery, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Update Catalog Item Relationships
     * @param {CatalogsApiUpdateCatalogItemRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public updateCatalogItemRelationships(requestParameters: CatalogsApiUpdateCatalogItemRelationshipsRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).updateCatalogItemRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.CatalogItemCategoryOp, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `Catalogs Write`
     * @summary Update Catalog Variant
     * @param {CatalogsApiUpdateCatalogVariantRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatalogsApi
     */
    public updateCatalogVariant(requestParameters: CatalogsApiUpdateCatalogVariantRequest, options?: AxiosRequestConfig) {
        return CatalogsApiFp(this.configuration).updateCatalogVariant(requestParameters.id, requestParameters.revision, requestParameters.CatalogVariantUpdateQuery, options).then((request) => request(this.axios, this.basePath));
    }
}
