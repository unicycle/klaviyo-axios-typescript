/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { GetCatalogItems4XXResponse } from '../models';
// @ts-ignore
import { GetSegmentRelationshipsResponseCollection } from '../models';
// @ts-ignore
import { GetSegmentResponse } from '../models';
// @ts-ignore
import { GetSegmentResponseCollection } from '../models';
// @ts-ignore
import { PatchSegmentResponse } from '../models';
// @ts-ignore
import { SegmentPartialUpdateQuery } from '../models';
/**
 * SegmentsApi - axios parameter creator
 * @export
 */
export const SegmentsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Read`
         * @summary Get Segment
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSegment: async (id: string, revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getSegment', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getSegment', 'revision', revision)
            const localVarPath = `/api/segments/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_segment) {
                localVarQueryParameter['fields[segment]'] = fields_segment.join(COLLECTION_FORMATS.csv);
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all profiles within the given segment ID. Filter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Segment Profiles
         * @param {string} segment_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;push_token&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSegmentProfiles: async (segment_id: string, revision: string, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'segment_id' is not null or undefined
            assertParamExists('getSegmentProfiles', 'segment_id', segment_id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getSegmentProfiles', 'revision', revision)
            const localVarPath = `/api/segments/{segment_id}/profiles/`
                .replace(`{${"segment_id"}}`, encodeURIComponent(String(segment_id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for the given segment ID. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Segment Relationships
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSegmentRelationships: async (id: string, related_resource: 'profiles', revision: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('getSegmentRelationships', 'id', id)
            // verify required parameter 'related_resource' is not null or undefined
            assertParamExists('getSegmentRelationships', 'related_resource', related_resource)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getSegmentRelationships', 'revision', revision)
            const localVarPath = `/api/segments/{id}/relationships/{related_resource}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"related_resource"}}`, encodeURIComponent(String(related_resource)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get all segments in an account. Filter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Read`
         * @summary Get Segments
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSegments: async (revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, filter?: string, page_cursor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('getSegments', 'revision', revision)
            const localVarPath = `/api/segments/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (fields_segment) {
                localVarQueryParameter['fields[segment]'] = fields_segment.join(COLLECTION_FORMATS.csv);
            }

            if (filter !== undefined) {
                localVarQueryParameter['filter'] = filter;
            }

            if (page_cursor !== undefined) {
                localVarQueryParameter['page[cursor]'] = page_cursor;
            }

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Write`
         * @summary Update Segment
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SegmentPartialUpdateQuery} SegmentPartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSegment: async (id: string, revision: string, SegmentPartialUpdateQuery: SegmentPartialUpdateQuery, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('updateSegment', 'id', id)
            // verify required parameter 'revision' is not null or undefined
            assertParamExists('updateSegment', 'revision', revision)
            // verify required parameter 'SegmentPartialUpdateQuery' is not null or undefined
            assertParamExists('updateSegment', 'SegmentPartialUpdateQuery', SegmentPartialUpdateQuery)
            const localVarPath = `/api/segments/{id}/`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Klaviyo-API-Key required
            await setApiKeyToObject(localVarHeaderParameter, "Authorization", configuration)

            if (revision != null) {
                localVarHeaderParameter['revision'] = String(revision);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(SegmentPartialUpdateQuery, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * SegmentsApi - functional programming interface
 * @export
 */
export const SegmentsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = SegmentsApiAxiosParamCreator(configuration)
    return {
        /**
         * Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Read`
         * @summary Get Segment
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getSegment(id: string, revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSegmentResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getSegment(id, revision, fields_segment, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all profiles within the given segment ID. Filter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Segment Profiles
         * @param {string} segment_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;push_token&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getSegmentProfiles(segment_id: string, revision: string, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getSegmentProfiles(segment_id, revision, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for the given segment ID. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Segment Relationships
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getSegmentRelationships(id: string, related_resource: 'profiles', revision: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSegmentRelationshipsResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getSegmentRelationships(id, related_resource, revision, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get all segments in an account. Filter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Read`
         * @summary Get Segments
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getSegments(revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, filter?: string, page_cursor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSegmentResponseCollection>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getSegments(revision, fields_segment, filter, page_cursor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Write`
         * @summary Update Segment
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SegmentPartialUpdateQuery} SegmentPartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSegment(id: string, revision: string, SegmentPartialUpdateQuery: SegmentPartialUpdateQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PatchSegmentResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSegment(id, revision, SegmentPartialUpdateQuery, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * SegmentsApi - factory interface
 * @export
 */
export const SegmentsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = SegmentsApiFp(configuration)
    return {
        /**
         * Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Read`
         * @summary Get Segment
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSegment(id: string, revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, options?: any): AxiosPromise<GetSegmentResponse> {
            return localVarFp.getSegment(id, revision, fields_segment, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all profiles within the given segment ID. Filter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Segment Profiles
         * @param {string} segment_id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;push_token&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSegmentProfiles(segment_id: string, revision: string, filter?: string, page_cursor?: string, options?: any): AxiosPromise<void> {
            return localVarFp.getSegmentProfiles(segment_id, revision, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for the given segment ID. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Read` `Segments Read`
         * @summary Get Segment Relationships
         * @param {string} id 
         * @param {'profiles'} related_resource 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSegmentRelationships(id: string, related_resource: 'profiles', revision: string, page_cursor?: string, options?: any): AxiosPromise<GetSegmentRelationshipsResponseCollection> {
            return localVarFp.getSegmentRelationships(id, related_resource, revision, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Get all segments in an account. Filter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Read`
         * @summary Get Segments
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {Array<'name' | 'created' | 'updated'>} [fields_segment] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
         * @param {string} [filter] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;
         * @param {string} [page_cursor] For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSegments(revision: string, fields_segment?: Array<'name' | 'created' | 'updated'>, filter?: string, page_cursor?: string, options?: any): AxiosPromise<GetSegmentResponseCollection> {
            return localVarFp.getSegments(revision, fields_segment, filter, page_cursor, options).then((request) => request(axios, basePath));
        },
        /**
         * Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Write`
         * @summary Update Segment
         * @param {string} id 
         * @param {string} revision API endpoint revision (format: YYYY-MM-DD[.suffix])
         * @param {SegmentPartialUpdateQuery} SegmentPartialUpdateQuery 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSegment(id: string, revision: string, SegmentPartialUpdateQuery: SegmentPartialUpdateQuery, options?: any): AxiosPromise<PatchSegmentResponse> {
            return localVarFp.updateSegment(id, revision, SegmentPartialUpdateQuery, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getSegment operation in SegmentsApi.
 * @export
 * @interface SegmentsApiGetSegmentRequest
 */
export interface SegmentsApiGetSegmentRequest {
    /**
     * 
     * @type {string}
     * @memberof SegmentsApiGetSegment
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof SegmentsApiGetSegment
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'name' | 'created' | 'updated'>}
     * @memberof SegmentsApiGetSegment
     */
    readonly fields_segment?: Array<'name' | 'created' | 'updated'>
}

/**
 * Request parameters for getSegmentProfiles operation in SegmentsApi.
 * @export
 * @interface SegmentsApiGetSegmentProfilesRequest
 */
export interface SegmentsApiGetSegmentProfilesRequest {
    /**
     * 
     * @type {string}
     * @memberof SegmentsApiGetSegmentProfiles
     */
    readonly segment_id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof SegmentsApiGetSegmentProfiles
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;email&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;phone_number&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;push_token&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;_kx&#x60;: &#x60;equals&#x60;
     * @type {string}
     * @memberof SegmentsApiGetSegmentProfiles
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof SegmentsApiGetSegmentProfiles
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getSegmentRelationships operation in SegmentsApi.
 * @export
 * @interface SegmentsApiGetSegmentRelationshipsRequest
 */
export interface SegmentsApiGetSegmentRelationshipsRequest {
    /**
     * 
     * @type {string}
     * @memberof SegmentsApiGetSegmentRelationships
     */
    readonly id: string

    /**
     * 
     * @type {'profiles'}
     * @memberof SegmentsApiGetSegmentRelationships
     */
    readonly related_resource: 'profiles'

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof SegmentsApiGetSegmentRelationships
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof SegmentsApiGetSegmentRelationships
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for getSegments operation in SegmentsApi.
 * @export
 * @interface SegmentsApiGetSegmentsRequest
 */
export interface SegmentsApiGetSegmentsRequest {
    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof SegmentsApiGetSegments
     */
    readonly revision: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets
     * @type {Array<'name' | 'created' | 'updated'>}
     * @memberof SegmentsApiGetSegments
     */
    readonly fields_segment?: Array<'name' | 'created' | 'updated'>

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-than&#x60;
     * @type {string}
     * @memberof SegmentsApiGetSegments
     */
    readonly filter?: string

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination
     * @type {string}
     * @memberof SegmentsApiGetSegments
     */
    readonly page_cursor?: string
}

/**
 * Request parameters for updateSegment operation in SegmentsApi.
 * @export
 * @interface SegmentsApiUpdateSegmentRequest
 */
export interface SegmentsApiUpdateSegmentRequest {
    /**
     * 
     * @type {string}
     * @memberof SegmentsApiUpdateSegment
     */
    readonly id: string

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     * @type {string}
     * @memberof SegmentsApiUpdateSegment
     */
    readonly revision: string

    /**
     * 
     * @type {SegmentPartialUpdateQuery}
     * @memberof SegmentsApiUpdateSegment
     */
    readonly SegmentPartialUpdateQuery: SegmentPartialUpdateQuery
}

/**
 * SegmentsApi - object-oriented interface
 * @export
 * @class SegmentsApi
 * @extends {BaseAPI}
 */
export class SegmentsApi extends BaseAPI {
    /**
     * Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Read`
     * @summary Get Segment
     * @param {SegmentsApiGetSegmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    public getSegment(requestParameters: SegmentsApiGetSegmentRequest, options?: AxiosRequestConfig) {
        return SegmentsApiFp(this.configuration).getSegment(requestParameters.id, requestParameters.revision, requestParameters.fields_segment, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all profiles within the given segment ID. Filter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Read` `Segments Read`
     * @summary Get Segment Profiles
     * @param {SegmentsApiGetSegmentProfilesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    public getSegmentProfiles(requestParameters: SegmentsApiGetSegmentProfilesRequest, options?: AxiosRequestConfig) {
        return SegmentsApiFp(this.configuration).getSegmentProfiles(requestParameters.segment_id, requestParameters.revision, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for the given segment ID. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Profiles Read` `Segments Read`
     * @summary Get Segment Relationships
     * @param {SegmentsApiGetSegmentRelationshipsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    public getSegmentRelationships(requestParameters: SegmentsApiGetSegmentRelationshipsRequest, options?: AxiosRequestConfig) {
        return SegmentsApiFp(this.configuration).getSegmentRelationships(requestParameters.id, requestParameters.related_resource, requestParameters.revision, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get all segments in an account. Filter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields. Returns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Read`
     * @summary Get Segments
     * @param {SegmentsApiGetSegmentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    public getSegments(requestParameters: SegmentsApiGetSegmentsRequest, options?: AxiosRequestConfig) {
        return SegmentsApiFp(this.configuration).getSegments(requestParameters.revision, requestParameters.fields_segment, requestParameters.filter, requestParameters.page_cursor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `Segments Write`
     * @summary Update Segment
     * @param {SegmentsApiUpdateSegmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    public updateSegment(requestParameters: SegmentsApiUpdateSegmentRequest, options?: AxiosRequestConfig) {
        return SegmentsApiFp(this.configuration).updateSegment(requestParameters.id, requestParameters.revision, requestParameters.SegmentPartialUpdateQuery, options).then((request) => request(this.axios, this.basePath));
    }
}
