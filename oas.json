{
    "openapi": "3.0.2",
    "info": {
      "title": "Klaviyo API",
      "version": "2022-10-17",
      "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
      "contact": {
        "name": "Klaviyo Developer Experience Team",
        "email": "developers@klaviyo.com",
        "url": "https://developers.klaviyo.com"
      },
      "termsOfService": "https://www.klaviyo.com/legal/api-terms",
      "license": {
        "name": "License",
        "url": "https://www.klaviyo.com/legal"
      }
    },
    "paths": {
      "/api/catalog-items/": {
        "get": {
          "operationId": "get_catalog_items",
          "summary": "Get Catalog Items",
          "description": "Get all catalog items in an account.\nCatalog items can be sorted by the following fields, in ascending and descending order: `created`\nUse filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: `variants`\nReturns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-item]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-variant]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_catalog_item",
          "summary": "Create Catalog Item",
          "description": "Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogItemResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-items/{id}/": {
        "get": {
          "operationId": "get_catalog_item",
          "summary": "Get Catalog Item",
          "description": "Get a specific catalog item with the given item ID.\nRequest specific fields and variants using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: `variants`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-item]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-variant]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "patch": {
          "operationId": "update_catalog_item",
          "summary": "Update Catalog Item",
          "description": "Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchCatalogItemResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemUpdateQuery"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_catalog_item",
          "summary": "Delete Catalog Item",
          "description": "Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-categories/{category_id}/items/": {
        "get": {
          "operationId": "get_catalog_category_items",
          "summary": "Get Catalog Category Items",
          "description": "Get all items in a category with the given category ID.\nItems can be sorted by the following fields, in ascending and descending order: `created`\nUse filters to return specific fields and any variants. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: `variants`\nReturns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "category_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-item]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-variant]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-variants/": {
        "get": {
          "operationId": "get_catalog_variants",
          "summary": "Get Catalog Variants",
          "description": "Get all variants in an account.\nUse filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nVariants can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-variant]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_catalog_variant",
          "summary": "Create Catalog Variant",
          "description": "Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogVariantResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-variants/{id}/": {
        "get": {
          "operationId": "get_catalog_variant",
          "summary": "Get Catalog Variant",
          "description": "Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-variant]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "patch": {
          "operationId": "update_catalog_variant",
          "summary": "Update Catalog Variant",
          "description": "Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchCatalogVariantResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantUpdateQuery"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_catalog_variant",
          "summary": "Delete Catalog Variant",
          "description": "Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-items/{item_id}/variants/": {
        "get": {
          "operationId": "get_catalog_item_variants",
          "summary": "Get Catalog Item Variants",
          "description": "Get all variants related to the given item ID.\nUse filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nVariants can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 variants per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "item_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-variant]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-categories/": {
        "get": {
          "operationId": "get_catalog_categories",
          "summary": "Get Catalog Categories",
          "description": "Get all catalog categories in an account.\nCatalog categories can be sorted by the following fields, in ascending and descending order: `created`\nUse filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nReturns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-category]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`name`: `contains`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_catalog_category",
          "summary": "Create Catalog Category",
          "description": "Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogCategoryResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-categories/{id}/": {
        "get": {
          "operationId": "get_catalog_category",
          "summary": "Get Catalog Category",
          "description": "Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-category]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "patch": {
          "operationId": "update_catalog_category",
          "summary": "Update Catalog Category",
          "description": "Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchCatalogCategoryResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateQuery"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_catalog_category",
          "summary": "Delete Catalog Category",
          "description": "Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-items/{item_id}/categories/": {
        "get": {
          "operationId": "get_catalog_item_categories",
          "summary": "Get Catalog Item Categories",
          "description": "Get all catalog categories that an item with the given item ID is in.\nCatalog categories can be sorted by the following fields, in ascending and descending order: `created`\nUse filters to return specific fields. Request specific fields [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nReturns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "item_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-category]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`name`: `contains`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/events/": {
        "get": {
          "operationId": "get_events",
          "summary": "Get Events",
          "description": "Get all events in an account\nRequests can be sorted by the following fields: `datetime`, `timestamp`\nUse filters to narrow your results to specific metrics. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: `metrics`, `profiles`\nReturns a maximum of 200 events per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Read`",
          "parameters": [
            {
              "name": "fields[event]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metric_id",
                    "profile_id",
                    "timestamp",
                    "event_properties",
                    "datetime",
                    "uuid"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[metric]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[profile]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "anonymous_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`metric_id`: `equals`<br>`datetime`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`timestamp`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metrics",
                    "profiles"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "datetime",
                  "-datetime",
                  "timestamp",
                  "-timestamp"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEventResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Events Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_event",
          "summary": "Create Event",
          "description": "Create an event. Events are created asynchronously.\nSuccessful response indicates that the event was validated and submitted for processing, but does not guarantee that processing is complete.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Events Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCreateQuery"
                }
              }
            },
            "description": "Event to create."
          }
        }
      },
      "/api/events/{id}/": {
        "get": {
          "operationId": "get_event",
          "summary": "Get Event",
          "description": "Get an event with the given event ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: `metrics`, `profiles`<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Events Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[event]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metric_id",
                    "profile_id",
                    "timestamp",
                    "event_properties",
                    "datetime",
                    "uuid"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[metric]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[profile]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "anonymous_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metrics",
                    "profiles"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEventResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Events Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/events/{id}/metrics/": {
        "get": {
          "operationId": "get_event_metrics",
          "summary": "Get Event Metrics",
          "description": "Get the metric for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Read`\n`Metrics Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[metric]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetMetricResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Events Read",
            "Metrics Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/events/{id}/profiles/": {
        "get": {
          "operationId": "get_event_profiles",
          "summary": "Get Event Profiles",
          "description": "Get the profile associated with an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Read`\n`Profiles Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[profile]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "anonymous_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Events Read",
            "Profiles Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/metrics/": {
        "get": {
          "operationId": "get_metrics",
          "summary": "Get Metrics",
          "description": "Get all metrics in an account.\nRequests can be filtered by the following fields: integration `name`, integration `category`\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nReturns a maximum of 200 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination)<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Metrics Read`",
          "parameters": [
            {
              "name": "fields[metric]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`integration.name`: `equals`<br>`integration.category`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetMetricResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Metrics"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Metrics Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/metrics/{id}/": {
        "get": {
          "operationId": "get_metric",
          "summary": "Get Metric",
          "description": "Get a metric with the given metric ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets)<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Metrics Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[metric]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetMetricResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Metrics"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Metrics Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/lists/": {
        "get": {
          "operationId": "get_lists",
          "summary": "Get Lists",
          "description": "Get all lists in an account.\nUse filters to narrow your results.\nReturns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Read`",
          "parameters": [
            {
              "name": "fields[list]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_list",
          "summary": "Create List",
          "description": "Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostListResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/lists/{id}/": {
        "get": {
          "operationId": "get_list",
          "summary": "Get List",
          "description": "Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[list]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Write"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "patch": {
          "operationId": "update_list",
          "summary": "Update List",
          "description": "Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchListResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPartialUpdateQuery"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_list",
          "summary": "Delete List",
          "description": "Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Write"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/lists/{list_id}/profiles/": {
        "get": {
          "operationId": "get_list_profiles",
          "summary": "Get List Profiles",
          "description": "Get all profiles within a list with the given list ID.\nUse filters to narrow your results.\nReturns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Read`\n`Profiles Read`",
          "parameters": [
            {
              "name": "list_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[profile]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "anonymous_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`<br>`phone_number`: `any`<br>`push_token`: `any`<br>`_kx`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Read",
            "Profiles Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/segments/": {
        "get": {
          "operationId": "get_segments",
          "summary": "Get Segments",
          "description": "Get all segments in an account.\nFilter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields.\nReturns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Segments Read`",
          "parameters": [
            {
              "name": "fields[segment]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Segments Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/segments/{id}/": {
        "get": {
          "operationId": "get_segment",
          "summary": "Get Segment",
          "description": "Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Segments Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[segment]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Segments Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "patch": {
          "operationId": "update_segment",
          "summary": "Update Segment",
          "description": "Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Segments Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchSegmentResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Segments Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentPartialUpdateQuery"
                }
              }
            }
          }
        }
      },
      "/api/segments/{segment_id}/profiles/": {
        "get": {
          "operationId": "get_segment_profiles",
          "summary": "Get Segment Profiles",
          "description": "Get all profiles within the given segment ID.\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields.\nReturns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Profiles Read`\n`Segments Read`",
          "parameters": [
            {
              "name": "segment_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`<br>`phone_number`: `any`<br>`push_token`: `any`<br>`_kx`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Read",
            "Segments Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/profiles/": {
        "get": {
          "operationId": "get_profiles",
          "summary": "Get Profiles",
          "description": "Get all profiles in an account.\nProfiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `email`\nUse filters to narrow your results. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nReturns a maximum of 20 profiles per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Profiles Write`",
          "parameters": [
            {
              "name": "fields[profile]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "anonymous_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`external_id`: `any`, `equals`<br>`anonymous_id`: `any`, `equals`<br>`_kx`: `equals`<br>`created`: `greater-than`, `less-than`<br>`updated`: `greater-than`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "email",
                  "-email",
                  "id",
                  "-id"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Write"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_profile",
          "summary": "Create Profile",
          "description": "Create a new profile.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Profiles Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostProfileResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/profiles/{id}/": {
        "get": {
          "operationId": "get_profile",
          "summary": "Get Profile",
          "description": "Get the profile with the given profile ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: `lists` memberships, `segments` memberships\"<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Profiles Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[list]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[profile]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "anonymous_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[segment]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "lists",
                    "segments"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "patch": {
          "operationId": "update_profile",
          "summary": "Update Profile",
          "description": "Update the profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Profiles Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchProfileResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePartialUpdateQuery"
                }
              }
            }
          }
        }
      },
      "/api/profiles/{profile_id}/lists/": {
        "get": {
          "operationId": "get_profile_lists",
          "summary": "Get Profile Lists",
          "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`List Read`\n`Profiles Read`",
          "parameters": [
            {
              "name": "profile_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[list]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "List Read",
            "Profiles Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/profiles/{profile_id}/segments/": {
        "get": {
          "operationId": "get_profile_segments",
          "summary": "Get Profile Segments",
          "description": "Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Profiles Read`\n`Segments Read`",
          "parameters": [
            {
              "name": "profile_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[segment]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Read",
            "Segments Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flows/": {
        "get": {
          "operationId": "get_flows",
          "summary": "Get Flows",
          "description": "Get all flows in an account.\nFlows can be sorted by the following fields, in ascending and descending order: `id`, `name`, `status`, `trigger_type`, `created`, `updated`\nUse filters to narrow your results. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: `flow-actions`\nReturns a maximum of 50 flows per request, which can be paginated with [offset pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination)<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "fields[flow-action]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[flow]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "created",
                    "updated",
                    "trigger_type"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`status`: `equals`<br>`archived`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`trigger_type`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "flow-actions"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "status",
                  "-status",
                  "trigger_type",
                  "-trigger_type",
                  "updated",
                  "-updated"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flows/{id}/": {
        "get": {
          "operationId": "get_flow",
          "summary": "Get Flow",
          "description": "Get a flow with the given flow ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: `flow-actions`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[flow-action]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[flow]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "created",
                    "updated",
                    "trigger_type"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "flow-actions"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "patch": {
          "operationId": "update_flow",
          "summary": "Update Flow Status",
          "description": "Update the status of a flow with the given flow ID, and all actions in that flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchFlowResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowUpdateQuery"
                }
              }
            }
          }
        }
      },
      "/api/flows/{flow_id}/flow-actions/": {
        "get": {
          "operationId": "get_flow_flow_actions",
          "summary": "Get Flow Actions For Flow",
          "description": "Get all flow actions associated with the given flow ID.\nFlow actions can be sorted by the following fields, in ascending and descending order: `id`,  `status`, `created`, `updated`, `action_type`\nUse filters to narrow your results. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nReturns a maximum of 50 flows per request, which can be paginated with [offset pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination). Offset pagination uses the following parameters: `page[size]` and `page[number]`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "flow_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[flow-action]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`action_type`: `any`, `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "action_type",
                  "-action_type",
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "status",
                  "-status",
                  "updated",
                  "-updated"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flow-actions/{id}/": {
        "get": {
          "operationId": "get_flow_action",
          "summary": "Get Flow Action",
          "description": "Get a flow action from a flow with the given flow action ID.\nInclude parameters can be provided to get the following related resource data: `flows`, `flow-messages`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[flow-action]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[flow-message]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "channel",
                    "content",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[flow]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "created",
                    "updated",
                    "trigger_type"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "flow-messages",
                    "flows"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flow-actions/{action_id}/flow/": {
        "get": {
          "operationId": "get_flow_action_flow",
          "summary": "Get Flow For Flow Action",
          "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "action_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[flow]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "created",
                    "updated",
                    "trigger_type"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flow-actions/{action_id}/flow-messages/": {
        "get": {
          "operationId": "get_flow_action_messages",
          "summary": "Get Messages For Flow Action",
          "description": "Get all flow messages associated with the given action ID.\n\nFlow messages can be sorted by the following fields, in ascending and descending order:\n\nascending: `id`,  `name`, `created`, `updated`\ndescending: `-id`,  `-name`, `-created`, `-updated`\n\nUse filters to narrow your results. Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\n\nReturns a maximum of 50 flows per request, which can be paginated with [offset pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination). Offset pagination uses the following parameters: `page[size]` and `page[number]`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "action_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[flow-message]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "channel",
                    "content",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "updated",
                  "-updated"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowMessageResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flow-messages/{id}/": {
        "get": {
          "operationId": "get_flow_message",
          "summary": "Get Flow Message",
          "description": "Get the flow message of a flow with the given message ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nInclude parameters can be provided to get the following related resource data: 'flow-actions'<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[flow-action]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[flow-message]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "channel",
                    "content",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "flow-action"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowMessageResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flow-messages/{message_id}/flow-action/": {
        "get": {
          "operationId": "get_flow_message_action",
          "summary": "Get Flow Action For Message",
          "description": "Get the flow action for a flow message with the given message ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "message_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[flow-action]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/templates/": {
        "get": {
          "operationId": "get_templates",
          "summary": "Get Templates",
          "description": "Get all templates in an account.\nFilter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated`\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\nReturns a maximum of 20 results per page. Results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Read`",
          "parameters": [
            {
              "name": "fields[template]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html",
                    "text",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "updated",
                  "-updated"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTemplateResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Templates Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_template",
          "summary": "Create Template",
          "description": "Create a new custom HTML template.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Templates Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateCreateQuery"
                }
              }
            },
            "description": "Query for creating a CODE template"
          }
        }
      },
      "/api/templates/{id}/": {
        "get": {
          "operationId": "get_template",
          "summary": "Get Template",
          "description": "Get a template with the given template ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[template]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html",
                    "text",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Templates Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "patch": {
          "operationId": "update_template",
          "summary": "Update Template",
          "description": "Update a template with the given template ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Templates Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateUpdateQuery"
                }
              }
            },
            "description": "Query for updating a CODE template"
          }
        },
        "delete": {
          "operationId": "delete_template",
          "summary": "Delete Template",
          "description": "Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DeleteTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Templates Write"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-item-bulk-create-jobs/": {
        "get": {
          "operationId": "get_create_items_jobs",
          "summary": "Get Create Items Jobs",
          "description": "Get all catalog item bulk create jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-item-bulk-create-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_create_items_job",
          "summary": "Spawn Create Items Job",
          "description": "Create a catalog item bulk create job to create a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogItemCreateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCreateJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-item-bulk-create-jobs/{job_id}/": {
        "get": {
          "operationId": "get_create_items_job",
          "summary": "Get Create Items Job",
          "description": "Get a catalog item bulk create job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-item-bulk-create-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-item]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "items"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-item-bulk-update-jobs/": {
        "get": {
          "operationId": "get_update_items_jobs",
          "summary": "Get Update Items Jobs",
          "description": "Get all catalog item bulk update jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-item-bulk-update-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_update_items_job",
          "summary": "Spawn Update Items Job",
          "description": "Create a catalog item bulk update job to update a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogItemUpdateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-item-bulk-update-jobs/{job_id}/": {
        "get": {
          "operationId": "get_update_items_job",
          "summary": "Get Update Items Job",
          "description": "Get a catalog item bulk update job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-item-bulk-update-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-item]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "items"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-item-bulk-delete-jobs/": {
        "get": {
          "operationId": "get_delete_items_jobs",
          "summary": "Get Delete Items Jobs",
          "description": "Get all catalog item bulk delete jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-item-bulk-delete-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_delete_items_job",
          "summary": "Spawn Delete Items Job",
          "description": "Create a catalog item bulk delete job to delete a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogItemDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-item-bulk-delete-jobs/{job_id}/": {
        "get": {
          "operationId": "get_delete_items_job",
          "summary": "Get Delete Items Job",
          "description": "Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-item-bulk-delete-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-variant-bulk-create-jobs/": {
        "get": {
          "operationId": "get_create_variants_jobs",
          "summary": "Get Create Variants Jobs",
          "description": "Get all catalog variant bulk create jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-variant-bulk-create-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_create_variants_job",
          "summary": "Spawn Create Variants Job",
          "description": "Create a catalog variant bulk create job to create a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogVariantCreateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-variant-bulk-create-jobs/{job_id}/": {
        "get": {
          "operationId": "get_create_variants_job",
          "summary": "Get Create Variants Job",
          "description": "Get a catalog variant bulk create job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-variant-bulk-create-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-variant]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-variant-bulk-update-jobs/": {
        "get": {
          "operationId": "get_update_variants_jobs",
          "summary": "Get Update Variants Jobs",
          "description": "Get all catalog variant bulk update jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-variant-bulk-update-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_update_variants_job",
          "summary": "Spawn Update Variants Job",
          "description": "Create a catalog variant bulk update job to update a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogVariantUpdateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-variant-bulk-update-jobs/{job_id}/": {
        "get": {
          "operationId": "get_update_variants_job",
          "summary": "Get Update Variants Job",
          "description": "Get a catalog variate bulk update job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-variant-bulk-update-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-variant]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-variant-bulk-delete-jobs/": {
        "get": {
          "operationId": "get_delete_variants_jobs",
          "summary": "Get Delete Variants Jobs",
          "description": "Get all catalog variant bulk delete jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-variant-bulk-delete-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_delete_variants_job",
          "summary": "Spawn Delete Variants Job",
          "description": "Create a catalog variant bulk delete job to delete a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogVariantDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-variant-bulk-delete-jobs/{job_id}/": {
        "get": {
          "operationId": "get_delete_variants_job",
          "summary": "Get Delete Variants Job",
          "description": "Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-variant-bulk-delete-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-category-bulk-create-jobs/": {
        "get": {
          "operationId": "get_create_categories_jobs",
          "summary": "Get Create Categories Jobs",
          "description": "Get all catalog category bulk create jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-category-bulk-create-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_create_categories_job",
          "summary": "Spawn Create Categories Job",
          "description": "Create a catalog category bulk create job to create a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogCategoryCreateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-category-bulk-create-jobs/{job_id}/": {
        "get": {
          "operationId": "get_create_categories_job",
          "summary": "Get Create Categories Job",
          "description": "Get a catalog category bulk create job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-category-bulk-create-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-category]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "categories"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-category-bulk-update-jobs/": {
        "get": {
          "operationId": "get_update_categories_jobs",
          "summary": "Get Update Categories Jobs",
          "description": "Get all catalog category bulk update jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-category-bulk-update-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCollectionWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_update_categories_job",
          "summary": "Spawn Update Categories Job",
          "description": "Create a catalog category bulk update job to update a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogCategoryUpdateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-category-bulk-update-jobs/{job_id}/": {
        "get": {
          "operationId": "get_update_categories_job",
          "summary": "Get Update Categories Job",
          "description": "Get a catalog category bulk update job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-category-bulk-update-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "fields[catalog-category]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "include",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "categories"
                  ]
                }
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#relationships"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseWithIncludedSection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/catalog-category-bulk-delete-jobs/": {
        "get": {
          "operationId": "get_delete_categories_jobs",
          "summary": "Get Delete Categories Jobs",
          "description": "Get all catalog category bulk delete jobs.\nReturns a maximum of 100 jobs per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "fields[catalog-category-bulk-delete-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "spawn_delete_categories_job",
          "summary": "Spawn Delete Categories Job",
          "description": "Create a catalog category bulk delete job to delete a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogCategoryDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-category-bulk-delete-jobs/{job_id}/": {
        "get": {
          "operationId": "get_delete_categories_job",
          "summary": "Get Delete Categories Job",
          "description": "Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[catalog-category-bulk-delete-job]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/metric-aggregates/": {
        "post": {
          "operationId": "query_metric_aggregates",
          "summary": "Query Metric Aggregates",
          "description": "Query and aggregate event data associated with a metric, including native Klaviyo metrics, integration-specific metrics, and custom events. Queries must be passed in the JSON body of your `POST` request.\n\nResults can be filtered and grouped by time, event, or profile dimensions.\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets)\n* `sort`: sort results by a specified field, such as `\"-timestamp\"`\n* `page_cursor`: results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination)\n* `page_size`: limit the number of returned results per page\n* `by`: optional attributes used to group by the aggregation function\n    * When using `by` attributes, an empty `dimensions` response is expected when the counts for the events do not have the associated dimension requested by the set `by` attribute. For example, a query including `\"by\": [\"$flow\"]` will return an empty dimensions response for counts of metrics not associated with a `$flow`\n* `measurement`: the measurement key supports the following values:\n    * `\"sum_value\"`: perform a summation of the `_Event Value_`, optionally partitioned over any dimension provided in the `by` field\n    * `\"count\"`: counts the number of events associated to a metric, optionally partitioned over any dimension provided in the `by` field\n    * `\"unique\"` counts the number of unique customers associated to a metric, optionally partitioned over any dimension provided in the `by` field\n* `interval`: aggregation interval, such as `\"hour\"`,`\"day\"`,`\"week\"`, and `\"month\"`\n* `metric_id`: the metric ID used in the aggregation\n* `filter`: list of filters for specific fields, must include time range using ISO 8601 format (`\"YYYY-MM-DDTHH:MM:SS.mmmmmm\"`)\n    * The time range can be filtered by providing a `greater_or_equal` filter on the datetime field, such as `\"greater-or-equal(datetime,2021-07-01T00:00:00)\"` and a `less-than` filter on the same datetime field, such as `\"less-than(datetime,2022-07-01T00:00:00)\"`\n    * The time range may span a maximum of one year. Time range dates may be set to a maximum of 5 years prior to the current date\n    * Filter the list of supported aggregate dimensions using the common filter syntax, such as `\"equals(URL,\\\"https://www.klaviyo.com/\\\")\"`\n* `timezone`: the timezone used when processing the query. Case sensitive. This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones)\n\nFor a comprehensive list of native Klaviyo metrics and their associated attributes for grouping and filtering, please refer to the [metrics attributes guide](https://developers.klaviyo.com/en/v2022-10-17/docs/supported_metrics_and_attributes).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Metrics Read`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostMetricAggregateResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Metrics"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Metrics Read"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAggregateQuery"
                }
              }
            },
            "description": "Retrieve Metric Aggregations"
          }
        }
      },
      "/api/templates/{id}/render/": {
        "post": {
          "operationId": "create_template_render",
          "summary": "Create Template Render",
          "description": "Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).\n* `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.\n\nEmail templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.\n\nEx. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Templates Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Templates Read"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2TemplateRenderQuery"
                }
              }
            },
            "description": "Query for rendering a template"
          }
        }
      },
      "/api/templates/{id}/clone/": {
        "post": {
          "operationId": "create_template_clone",
          "summary": "Create Template Clone",
          "description": "Create a clone of a template with the given template ID.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Templates Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateCloneQuery"
                }
              }
            },
            "description": "Query for cloning a template"
          }
        }
      },
      "/api/profile-suppression-bulk-create-jobs/": {
        "post": {
          "operationId": "suppress_profiles",
          "summary": "Suppress Profiles",
          "description": "Manually suppress one or more profiles. Manually suppressed profiles will not receive email marketing.\nNot supported for SMS marketing.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Profiles Write`\n`Subscriptions Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Write",
            "Subscriptions Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuppressionCreateJobCreateQuery"
                }
              }
            },
            "description": "Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed."
          }
        }
      },
      "/api/profile-unsuppression-bulk-create-jobs/": {
        "post": {
          "operationId": "unsuppress_profiles",
          "summary": "Unsuppress Profiles",
          "description": "Unsuppress one or more profiles. Unsuppressed profiles will receive email marketing.\nNot supported for SMS marketing. Profiles suppressed due to a hard bounced email will not be unsuppressed.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Subscriptions Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Subscriptions Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQuery"
                }
              }
            },
            "description": "Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, no action will be taken."
          }
        }
      },
      "/api/profile-subscription-bulk-create-jobs/": {
        "post": {
          "operationId": "subscribe_profiles",
          "summary": "Subscribe Profiles",
          "description": "Subscribe one or more profiles to email marketing, SMS marketing, or both. If the list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message.\nTo add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/v2022-10-17/reference/create_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`List Write`\n`Profiles Write`\n`Subscriptions Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "List Write",
            "Profiles Write",
            "Subscriptions Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCreateJobCreateQuery"
                }
              }
            },
            "description": "Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels. If a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed."
          }
        }
      },
      "/api/profile-unsubscription-bulk-create-jobs/": {
        "post": {
          "operationId": "unsubscribe_profiles",
          "summary": "Unsubscribe Profiles",
          "description": "Unsubscribe one or more profiles to email marketing, SMS marketing, or both.\nTo remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/v2022-10-17/reference/delete_list_relationships).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`List Write`\n`Profiles Write`\n`Subscriptions Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "List Write",
            "Profiles Write",
            "Subscriptions Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQuery"
                }
              }
            },
            "description": "Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list. Either email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed."
          }
        }
      },
      "/client/subscriptions/": {
        "post": {
          "operationId": "create_client_subscription",
          "summary": "Create Client Subscription",
          "description": "Create a new subscription for the given list ID and channel:\n\n* Email `email`\n* SMS `phone_number`\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/profile-subscription-bulk-create-jobs](https://developers.klaviyo.com/en/reference/subscribe_profiles)<br><br>*Rate limits*:<br>Burst: `100/s`<br>Steady: `100/m`\n\n**Scopes:**\n`Subscriptions Write`",
          "parameters": [
            {
              "name": "company_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "query"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            }
          },
          "security": [],
          "tags": [
            "Client"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "100/s",
            "steady": "100/m"
          },
          "x-klaviyo-scopes": [
            "Subscriptions Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnsiteSubscriptionCreateQuery"
                }
              }
            },
            "description": "Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number attributes respectively. One of either email or phone_number must be provided. To create a subscription and consent record for only one channel but still include the other channel as a profile property the consent channel can be provided as a top level attribute and the other channel can be included in the properties object."
          }
        }
      },
      "/client/events/": {
        "post": {
          "operationId": "create_client_event",
          "summary": "Create Client Event",
          "description": "Create a new event to track a profile's activity.\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create [events] from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/v2022-10-17/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Write`",
          "parameters": [
            {
              "name": "company_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "query"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "security": [],
          "tags": [
            "Client"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Events Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCreateQuery"
                }
              }
            },
            "description": "Event to create."
          }
        }
      },
      "/client/profiles/": {
        "post": {
          "operationId": "create_client_profile",
          "summary": "Create Client Profile",
          "description": "Create and update properties about a profile without tracking an associated event.\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Profiles Write`",
          "parameters": [
            {
              "name": "company_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "query"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "security": [],
          "tags": [
            "Client"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnsiteProfileCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/catalog-categories/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_catalog_category_relationships",
          "summary": "Get Catalog Category Relationships",
          "description": "Get all items in the given category ID.\nReturns a maximum of 100 items per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "items"
                ]
              },
              "in": "path"
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryItemListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_catalog_category_relationships",
          "summary": "Create Catalog Category Relationships",
          "description": "Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "items"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryItemOp"
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "update_catalog_category_relationships",
          "summary": "Update Catalog Category Relationships",
          "description": "Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "items"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryItemOp"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_catalog_category_relationships",
          "summary": "Delete Catalog Category Relationships",
          "description": "Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "items"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryItemOp"
                }
              }
            }
          }
        }
      },
      "/api/catalog-items/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_catalog_item_relationships",
          "summary": "Get Catalog Item Relationships",
          "description": "Get all catalog categories that a particular item is in.\nReturns a maximum of 100 categories per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              },
              "in": "path"
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemCategoryListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_catalog_item_relationships",
          "summary": "Create Catalog Item Relationships",
          "description": "Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCategoryOp"
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "update_catalog_item_relationships",
          "summary": "Update Catalog Item Relationships",
          "description": "Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCategoryOp"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_catalog_item_relationships",
          "summary": "Delete Catalog Item Relationships",
          "description": "Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "Catalogs Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCategoryOp"
                }
              }
            }
          }
        }
      },
      "/api/events/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_event_relationships",
          "summary": "Get Event Relationships",
          "description": "Get metrics or profile [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Read`\n`Profiles Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "metrics",
                  "profiles"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEventProfilesRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "Events Read",
            "Profiles Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/lists/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_list_relationships",
          "summary": "Get List Profile Relationships",
          "description": "Get profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for a list with the given list ID.\nReturns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Read`\n`Profiles Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "profiles"
                ]
              },
              "in": "path"
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Read",
            "Profiles Read"
          ],
          "x-klaviyo-pre-release": "None"
        },
        "post": {
          "operationId": "create_list_relationships",
          "summary": "Add Profile to List",
          "description": "Add a profile to a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`\n`Profiles Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "profiles"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Write",
            "Profiles Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembersAddQuery"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_list_relationships",
          "summary": "Remove Profile from List",
          "description": "Remove a profile from a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`\n`Profiles Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "profiles"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "List Write",
            "Profiles Write"
          ],
          "x-klaviyo-pre-release": "None",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembersDeleteQuery"
                }
              }
            }
          }
        }
      },
      "/api/segments/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_segment_relationships",
          "summary": "Get Segment Relationships",
          "description": "Get all profile membership [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for the given segment ID.\nReturns a maximum of 10 results per page, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Profiles Read`\n`Segments Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "profiles"
                ]
              },
              "in": "path"
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#pagination"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Read",
            "Segments Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/profiles/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_profile_relationships",
          "summary": "Get Profile Relationships",
          "description": "Get list membership or segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Profiles Read`\n`Segments Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "lists",
                  "segments"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileSegmentRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Profiles Read",
            "Segments Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flows/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_flow_relationships",
          "summary": "Get Flow Relationships",
          "description": "Get all [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for flow actions associated with the given flow ID.\nFlow action relationships can be sorted by the following fields, in ascending and descending order: `id`,  `status`, `created`, `updated`\nUse filters to narrow your results.\nReturns a maximum of 50 flow action relationships per request, which can be paginated with [offset pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination)<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "flow-actions"
                ]
              },
              "in": "path"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`action_type`: `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "status",
                  "-status",
                  "updated",
                  "-updated"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowFlowActionRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flow-actions/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_flow_action_relationships",
          "summary": "Get Flow Action Relationships",
          "description": "Get all [relationships](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for flow messages associated with the given flow action ID.\n\nFlow message relationships can be sorted by the following fields, in ascending and descending order:\n\n`id`,  `name`, `created`, `updated`\n\nUse filters to narrow your results.\n\nReturns a maximum of 50 flow message relationships per request, which can be paginated with [offset pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination). Offset pagination uses the following parameters: `page[size]` and `page[number]`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "flow",
                  "flow-messages"
                ]
              },
              "in": "path"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "updated",
                  "-updated"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionFlowMessageRelationshipResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      },
      "/api/flow-messages/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_flow_message_relationships",
          "summary": "Get Flow Message Relationships",
          "description": "Get the [relationship](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#relationships) for a flow message's flow action, given the flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "flow-action"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-10-17"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowMessageFlowActionRelationshipResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read"
          ],
          "x-klaviyo-pre-release": "None"
        }
      }
    },
    "components": {
      "schemas": {
        "GetCatalogItemResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-item"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "external_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "image_full_url": {
                        "type": "string"
                      },
                      "image_thumbnail_url": {
                        "type": "string"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "custom_metadata": {
                        "type": "object"
                      },
                      "published": {
                        "type": "boolean"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-variant"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IncludedVariants"
                    }
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogItemResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "image_full_url": {
                      "type": "string"
                    },
                    "image_thumbnail_url": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_metadata": {
                      "type": "object"
                    },
                    "published": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedVariants"
                  }
                }
              }
            }
          }
        },
        "GetCatalogVariantResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-variant"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "external_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "inventory_policy": {
                        "type": "integer",
                        "enum": [
                          0,
                          1,
                          2
                        ],
                        "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                      },
                      "inventory_quantity": {
                        "type": "number"
                      },
                      "price": {
                        "type": "number"
                      },
                      "url": {
                        "type": "string"
                      },
                      "image_full_url": {
                        "type": "string"
                      },
                      "image_thumbnail_url": {
                        "type": "string"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "custom_metadata": {
                        "type": "object"
                      },
                      "published": {
                        "type": "boolean"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogVariantResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "inventory_policy": {
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                    },
                    "inventory_quantity": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "image_full_url": {
                      "type": "string"
                    },
                    "image_thumbnail_url": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_metadata": {
                      "type": "object"
                    },
                    "published": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetCatalogCategoryResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-category"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "external_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogCategoryResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetCatalogCategoryItemListResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-item"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetCatalogItemCategoryListResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-category"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetEventResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "event"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "metric_id": {
                        "type": "string"
                      },
                      "profile_id": {
                        "type": "string"
                      },
                      "timestamp": {
                        "type": "string"
                      },
                      "event_properties": {
                        "type": "object"
                      },
                      "datetime": {
                        "type": "string"
                      },
                      "uuid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "metric_id"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "metrics": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "metric"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "profiles": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "profile"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/IncludedMetrics"
                        },
                        {
                          "$ref": "#/components/schemas/IncludedProfiles"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetEventResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "event"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "metric_id": {
                      "type": "string"
                    },
                    "profile_id": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "event_properties": {
                      "type": "object"
                    },
                    "datetime": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "metric_id"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "metrics": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "metric"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "profiles": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "profile"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IncludedMetrics"
                      },
                      {
                        "$ref": "#/components/schemas/IncludedProfiles"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "GetMetricResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "metric"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string"
                      },
                      "updated": {
                        "type": "string"
                      },
                      "integration": {
                        "type": "object"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "ProfileLocation": {
          "type": "object",
          "properties": {
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "latitude": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "longitude": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "region": {
              "type": "string"
            },
            "zip": {
              "type": "string"
            },
            "timezone": {
              "type": "string"
            }
          }
        },
        "GetProfileResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "external_id": {
                        "type": "string"
                      },
                      "anonymous_id": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "organization": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "last_event_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "location": {
                        "$ref": "#/components/schemas/ProfileLocation"
                      },
                      "properties": {
                        "type": "object"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetEventMetricsRelationshipListResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "metric"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetEventProfilesRelationshipListResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetMetricResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "metric"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string"
                    },
                    "updated": {
                      "type": "string"
                    },
                    "integration": {
                      "type": "object"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetListResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "list"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetListResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "list"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetListRelationshipsResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetSegmentResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "segment"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetSegmentResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "segment"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetSegmentRelationshipsResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetProfileResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "external_id": {
                        "type": "string"
                      },
                      "anonymous_id": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "organization": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "last_event_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "location": {
                        "$ref": "#/components/schemas/ProfileLocation"
                      },
                      "properties": {
                        "type": "object"
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "list"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "segment"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetProfileResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "external_id": {
                      "type": "string"
                    },
                    "anonymous_id": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_event_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "location": {
                      "$ref": "#/components/schemas/ProfileLocation"
                    },
                    "properties": {
                      "type": "object"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "list"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "segments": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "segment"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IncludedLists"
                      },
                      {
                        "$ref": "#/components/schemas/IncludedSegments"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "GetProfileListRelationshipsResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "list"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetProfileSegmentRelationshipsResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "segment"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetFlowResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "archived": {
                        "type": "boolean"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "trigger_type": {
                        "type": "string"
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-actions": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "flow-action"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IncludedFlowActions"
                    }
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetFlowResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "trigger_type": {
                      "type": "string"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "flow-actions": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "flow-action"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedFlowActions"
                  }
                }
              }
            }
          }
        },
        "UtmParamInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ]
        },
        "EmailTrackingOptions": {
          "type": "object",
          "properties": {
            "add_utm": {
              "type": "boolean"
            },
            "utm_params": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtmParamInfo"
              }
            },
            "is_tracking_opens": {
              "type": "boolean"
            },
            "is_tracking_clicks": {
              "type": "boolean"
            }
          },
          "required": [
            "add_utm",
            "utm_params",
            "is_tracking_opens",
            "is_tracking_clicks"
          ]
        },
        "SMSTrackingOptions": {
          "type": "object",
          "properties": {
            "add_utm": {
              "type": "boolean"
            },
            "utm_params": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtmParamInfo"
              }
            }
          },
          "required": [
            "add_utm",
            "utm_params"
          ]
        },
        "SendOptions": {
          "type": "object",
          "properties": {
            "use_smart_sending": {
              "type": "boolean"
            },
            "is_transactional": {
              "type": "boolean"
            }
          },
          "required": [
            "use_smart_sending",
            "is_transactional"
          ]
        },
        "SMSRenderOptions": {
          "type": "object",
          "properties": {
            "shorten_links": {
              "type": "boolean"
            },
            "add_org_prefix": {
              "type": "boolean"
            },
            "add_info_link": {
              "type": "boolean"
            },
            "add_opt_out_language": {
              "type": "boolean"
            }
          },
          "required": [
            "shorten_links",
            "add_org_prefix",
            "add_info_link",
            "add_opt_out_language"
          ]
        },
        "GetFlowActionResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow-action"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "action_type": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "settings": {
                        "type": "object"
                      },
                      "tracking_options": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/EmailTrackingOptions"
                          },
                          {
                            "$ref": "#/components/schemas/SMSTrackingOptions"
                          }
                        ]
                      },
                      "send_options": {
                        "$ref": "#/components/schemas/SendOptions"
                      },
                      "render_options": {
                        "$ref": "#/components/schemas/SMSRenderOptions"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetFlowFlowActionRelationshipListResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow-action"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetFlowActionResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow-action"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "settings": {
                      "type": "object"
                    },
                    "tracking_options": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/EmailTrackingOptions"
                        },
                        {
                          "$ref": "#/components/schemas/SMSTrackingOptions"
                        }
                      ]
                    },
                    "send_options": {
                      "$ref": "#/components/schemas/SendOptions"
                    },
                    "render_options": {
                      "$ref": "#/components/schemas/SMSRenderOptions"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "flow-messages": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "flow-message"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "flows": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "flow"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IncludedFlowMessages"
                      },
                      {
                        "$ref": "#/components/schemas/IncludedFlows"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "GetFlowResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "trigger_type": {
                      "type": "string"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetFlowActionFlowRelationshipResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "EmailMessageContent": {
          "type": "object",
          "properties": {
            "subject": {
              "type": "string"
            },
            "preview_text": {
              "type": "string"
            },
            "from_email": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            }
          },
          "required": [
            "subject",
            "preview_text",
            "from_email",
            "from_name"
          ]
        },
        "SMSMessageContent": {
          "type": "object",
          "properties": {
            "body": {
              "type": "string"
            },
            "media": {
              "type": "string"
            }
          },
          "required": [
            "body",
            "media"
          ]
        },
        "GetFlowMessageResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow-message"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "channel": {
                        "type": "string"
                      },
                      "content": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/EmailMessageContent"
                          },
                          {
                            "$ref": "#/components/schemas/SMSMessageContent"
                          }
                        ]
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "name",
                      "channel",
                      "content"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetFlowActionFlowMessageRelationshipResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow-message"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "GetFlowMessageResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow-message"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "channel": {
                      "type": "string"
                    },
                    "content": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/EmailMessageContent"
                        },
                        {
                          "$ref": "#/components/schemas/SMSMessageContent"
                        }
                      ]
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "name",
                    "channel",
                    "content"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "flow-action": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "flow-action"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedFlowAction"
                  }
                }
              }
            }
          }
        },
        "GetFlowActionResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow-action"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "settings": {
                      "type": "object"
                    },
                    "tracking_options": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/EmailTrackingOptions"
                        },
                        {
                          "$ref": "#/components/schemas/SMSTrackingOptions"
                        }
                      ]
                    },
                    "send_options": {
                      "$ref": "#/components/schemas/SendOptions"
                    },
                    "render_options": {
                      "$ref": "#/components/schemas/SMSRenderOptions"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetFlowMessageFlowActionRelationshipResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow-action"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "GetTemplateResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "template"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "company_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "editor_type": {
                        "type": "string"
                      },
                      "html": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "company_id",
                      "name",
                      "editor_type",
                      "html"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetTemplateResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "template"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "editor_type": {
                      "type": "string"
                    },
                    "html": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "ErrorSource": {
          "type": "object",
          "properties": {
            "pointer": {
              "type": "string"
            }
          },
          "required": [
            "pointer"
          ]
        },
        "CatalogJobErrorPayload": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "code": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "detail": {
              "type": "string"
            },
            "source": {
              "$ref": "#/components/schemas/ErrorSource"
            }
          },
          "required": [
            "id",
            "code",
            "title",
            "detail",
            "source"
          ]
        },
        "GetCatalogItemCreateJobResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-item-bulk-create-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-item"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogItemCreateJobResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedItems"
                  }
                }
              }
            }
          }
        },
        "GetCatalogItemUpdateJobResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-item-bulk-update-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-item"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogItemUpdateJobResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedItems"
                  }
                }
              }
            }
          }
        },
        "GetCatalogItemDeleteJobResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-item-bulk-delete-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-item"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogItemDeleteJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetCatalogVariantCreateJobResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-variant-bulk-create-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-variant"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogVariantCreateJobResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedVariants"
                  }
                }
              }
            }
          }
        },
        "GetCatalogVariantUpdateJobResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-variant-bulk-update-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-variant"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogVariantUpdateJobResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedVariants"
                  }
                }
              }
            }
          }
        },
        "GetCatalogVariantDeleteJobResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-variant-bulk-delete-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-variant"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogVariantDeleteJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetCatalogCategoryCreateJobResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-category-bulk-create-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-category"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogCategoryCreateJobResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedCategories"
                  }
                }
              }
            }
          }
        },
        "GetCatalogCategoryUpdateJobResponseCollectionWithIncludedSection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-category-bulk-update-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-category"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogCategoryUpdateJobResponseWithIncludedSection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                "included": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncludedCategories"
                  }
                }
              }
            }
          }
        },
        "GetCatalogCategoryDeleteJobResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-category-bulk-delete-job"
                    ]
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "job_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "complete",
                          "processing",
                          "queued"
                        ],
                        "description": "The valid top level statuses for an asynchronous query"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "total_count": {
                        "type": "integer"
                      },
                      "completed_count": {
                        "type": "integer"
                      },
                      "failed_count": {
                        "type": "integer"
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CatalogJobErrorPayload"
                        }
                      }
                    },
                    "required": [
                      "job_id",
                      "status",
                      "created_at",
                      "total_count",
                      "completed_count",
                      "failed_count"
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "catalog-category"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetCatalogCategoryDeleteJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogItemCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "integration_type": {
                  "type": "string",
                  "enum": [
                    "$custom"
                  ],
                  "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
                },
                "title": {
                  "type": "string"
                },
                "catalog_type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                }
              },
              "required": [
                "external_id",
                "title",
                "description",
                "url"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-category"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogItemCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogItemResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "image_full_url": {
                      "type": "string"
                    },
                    "image_thumbnail_url": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_metadata": {
                      "type": "object"
                    },
                    "published": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogVariantCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "catalog_type": {
                  "type": "string"
                },
                "integration_type": {
                  "type": "string",
                  "enum": [
                    "$custom"
                  ],
                  "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sku": {
                  "type": "string"
                },
                "inventory_policy": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                },
                "inventory_quantity": {
                  "type": "number"
                },
                "price": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                }
              },
              "required": [
                "external_id",
                "title",
                "description",
                "sku",
                "inventory_policy",
                "inventory_quantity",
                "price",
                "url"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogVariantCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogVariantResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "inventory_policy": {
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                    },
                    "inventory_quantity": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "image_full_url": {
                      "type": "string"
                    },
                    "image_thumbnail_url": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_metadata": {
                      "type": "object"
                    },
                    "published": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogCategoryCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "integration_type": {
                  "type": "string",
                  "enum": [
                    "$custom"
                  ],
                  "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
                },
                "catalog_type": {
                  "type": "string"
                }
              },
              "required": [
                "external_id",
                "name"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogCategoryCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogCategoryResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogCategoryItemOp": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-item"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "CatalogItemCategoryOp": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-category"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "_MetricCreateQuery": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "service": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        },
        "EventCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "event"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "profile": {
                  "type": "object"
                },
                "metric": {
                  "$ref": "#/components/schemas/_MetricCreateQuery"
                },
                "properties": {
                  "type": "object"
                },
                "time": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "number"
                },
                "unique_id": {
                  "type": "string"
                }
              },
              "required": [
                "profile",
                "metric",
                "properties"
              ]
            }
          }
        },
        "EventCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/EventCreateQueryAsSubResource"
            }
          }
        },
        "MetricAggregateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "metric-aggregate"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "metric_id": {
                  "type": "string"
                },
                "measurements": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "count",
                      "sum_value",
                      "unique"
                    ],
                    "description": "Supported measurements for aggregation"
                  }
                },
                "interval": {
                  "type": "string",
                  "enum": [
                    "day",
                    "hour",
                    "month",
                    "week"
                  ],
                  "description": "Supported intervals for bucketing query results by time"
                },
                "page_size": {
                  "type": "integer"
                },
                "by": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "$attributed_channel",
                      "$attributed_flow",
                      "$attributed_message",
                      "$attributed_variation",
                      "$campaign_channel",
                      "$flow",
                      "$flow_channel",
                      "$message",
                      "$message_send_cohort",
                      "$variation",
                      "$variation_send_cohort",
                      "Bounce Type",
                      "Campaign Name",
                      "Client Canonical",
                      "Client Name",
                      "Client Type",
                      "Email Domain",
                      "Failure Source",
                      "Failure Type",
                      "From Number",
                      "From Phone Region",
                      "List",
                      "Message Name",
                      "Message Type",
                      "Method",
                      "Subject",
                      "To Number",
                      "To Phone Region",
                      "URL",
                      "form_id"
                    ],
                    "description": "Supported dimensions for grouping and filtering"
                  }
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filter": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "timezone": {
                  "type": "string"
                },
                "sort": {
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "-$attributed_channel",
                    "$attributed_flow",
                    "-$attributed_flow",
                    "$attributed_message",
                    "-$attributed_message",
                    "$attributed_variation",
                    "-$attributed_variation",
                    "$campaign_channel",
                    "-$campaign_channel",
                    "$flow",
                    "-$flow",
                    "$flow_channel",
                    "-$flow_channel",
                    "$message",
                    "-$message",
                    "$message_send_cohort",
                    "-$message_send_cohort",
                    "$variation",
                    "-$variation",
                    "$variation_send_cohort",
                    "-$variation_send_cohort",
                    "Bounce Type",
                    "-Bounce Type",
                    "Campaign Name",
                    "-Campaign Name",
                    "Client Canonical",
                    "-Client Canonical",
                    "Client Name",
                    "-Client Name",
                    "Client Type",
                    "-Client Type",
                    "Email Domain",
                    "-Email Domain",
                    "Failure Source",
                    "-Failure Source",
                    "Failure Type",
                    "-Failure Type",
                    "From Number",
                    "-From Number",
                    "From Phone Region",
                    "-From Phone Region",
                    "List",
                    "-List",
                    "Message Name",
                    "-Message Name",
                    "Message Type",
                    "-Message Type",
                    "Method",
                    "-Method",
                    "Subject",
                    "-Subject",
                    "To Number",
                    "-To Number",
                    "To Phone Region",
                    "-To Phone Region",
                    "URL",
                    "-URL",
                    "count",
                    "-count",
                    "form_id",
                    "-form_id",
                    "sum_value",
                    "-sum_value",
                    "unique",
                    "-unique"
                  ]
                },
                "page_cursor": {
                  "type": "string"
                }
              },
              "required": [
                "metric_id",
                "measurements",
                "interval",
                "filter",
                "timezone"
              ]
            }
          }
        },
        "MetricAggregateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/MetricAggregateQueryAsSubResource"
            }
          }
        },
        "MetricAggregateRowDTO": {
          "type": "object",
          "properties": {
            "dimensions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "measurements": {
              "type": "object"
            }
          },
          "required": [
            "dimensions",
            "measurements"
          ]
        },
        "PostMetricAggregateResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "metric-aggregate"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "dates": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetricAggregateRowDTO"
                      }
                    }
                  },
                  "required": [
                    "dates",
                    "data"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "ListCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "list"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "ListCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ListCreateQueryAsSubResource"
            }
          }
        },
        "PostListResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "list"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "ListMembersAddQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "ProfileCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "ProfileCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ProfileCreateQueryAsSubResource"
            }
          }
        },
        "PostProfileResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "external_id": {
                      "type": "string"
                    },
                    "anonymous_id": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_event_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "location": {
                      "$ref": "#/components/schemas/ProfileLocation"
                    },
                    "properties": {
                      "type": "object"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "TemplateCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "editor_type": {
                  "type": "string"
                },
                "html": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "editor_type"
              ]
            }
          }
        },
        "TemplateCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateCreateQueryAsSubResource"
            }
          }
        },
        "PostTemplateResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "template"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "editor_type": {
                      "type": "string"
                    },
                    "html": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "V2TemplateRenderQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "object"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "context"
              ]
            }
          }
        },
        "V2TemplateRenderQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/V2TemplateRenderQueryAsSubResource"
            }
          }
        },
        "TemplateCloneQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "TemplateCloneQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateCloneQueryAsSubResource"
            }
          }
        },
        "CatalogItemCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          }
        },
        "CatalogItemCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogItemCreateJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogItemUpdateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item-bulk-update-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          }
        },
        "CatalogItemUpdateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogItemUpdateJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogItemDeleteJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item-bulk-delete-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemDeleteQueryAsSubResource"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          }
        },
        "CatalogItemDeleteJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogItemDeleteJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogVariantCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          }
        },
        "CatalogVariantCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogVariantCreateJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogVariantUpdateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant-bulk-update-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          }
        },
        "CatalogVariantUpdateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogVariantUpdateJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogVariantDeleteJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant-bulk-delete-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantDeleteQueryAsSubResource"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          }
        },
        "CatalogVariantDeleteJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogVariantDeleteJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogCategoryCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          }
        },
        "CatalogCategoryCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogCategoryCreateJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogCategoryUpdateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category-bulk-update-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          }
        },
        "CatalogCategoryUpdateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogCategoryUpdateJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogCategoryDeleteJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category-bulk-delete-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryDeleteQueryAsSubResource"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          }
        },
        "CatalogCategoryDeleteJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryAsSubResource"
            }
          }
        },
        "PostCatalogCategoryDeleteJobResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "Suppression": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            }
          },
          "required": [
            "email"
          ]
        },
        "SuppressionCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile-suppression-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "suppressions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suppression"
                  }
                }
              },
              "required": [
                "suppressions"
              ]
            }
          }
        },
        "SuppressionCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "UnsuppressionCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile-unsuppression-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "suppressions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suppression"
                  }
                }
              },
              "required": [
                "suppressions"
              ]
            }
          }
        },
        "UnsuppressionCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "Subscription": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            }
          }
        },
        "SubscriptionCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile-subscription-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string"
                },
                "custom_source": {
                  "type": "string"
                },
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              },
              "required": [
                "list_id",
                "subscriptions"
              ]
            }
          }
        },
        "SubscriptionCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "UnsubscriptionCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile-unsubscription-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string"
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "list_id"
              ]
            }
          }
        },
        "UnsubscriptionCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "OnsiteSubscriptionCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "subscription"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string"
                },
                "custom_source": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "properties": {
                  "type": "object"
                }
              },
              "required": [
                "list_id"
              ]
            }
          }
        },
        "OnsiteSubscriptionCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryAsSubResource"
            }
          }
        },
        "_OnsiteProfileMetaIdentifiers": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "external_id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "anonymous_id": {
              "type": "string"
            },
            "_kx": {
              "type": "string"
            }
          }
        },
        "_OnsiteProfileMeta": {
          "type": "object",
          "properties": {
            "identifiers": {
              "$ref": "#/components/schemas/_OnsiteProfileMetaIdentifiers"
            }
          },
          "required": [
            "identifiers"
          ]
        },
        "OnsiteProfileCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            },
            "meta": {
              "$ref": "#/components/schemas/_OnsiteProfileMeta"
            }
          }
        },
        "OnsiteProfileCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/OnsiteProfileCreateQueryAsSubResource"
            }
          }
        },
        "CatalogItemUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-category"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogItemUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
            }
          }
        },
        "PatchCatalogItemResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "image_full_url": {
                      "type": "string"
                    },
                    "image_thumbnail_url": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_metadata": {
                      "type": "object"
                    },
                    "published": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogVariantUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "inventory_policy": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                },
                "inventory_quantity": {
                  "type": "number"
                },
                "price": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "CatalogVariantUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
            }
          }
        },
        "PatchCatalogVariantResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "inventory_policy": {
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                    },
                    "inventory_quantity": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "image_full_url": {
                      "type": "string"
                    },
                    "image_thumbnail_url": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_metadata": {
                      "type": "object"
                    },
                    "published": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogCategoryUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogCategoryUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
            }
          }
        },
        "PatchCatalogCategoryResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "ListPartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "list"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "ListPartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ListPartialUpdateQueryAsSubResource"
            }
          }
        },
        "PatchListResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "list"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "SegmentPartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "segment"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "SegmentPartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SegmentPartialUpdateQueryAsSubResource"
            }
          }
        },
        "PatchSegmentResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "segment"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "ProfilePartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "ProfilePartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ProfilePartialUpdateQueryAsSubResource"
            }
          }
        },
        "PatchProfileResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "external_id": {
                      "type": "string"
                    },
                    "anonymous_id": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_event_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "location": {
                      "$ref": "#/components/schemas/ProfileLocation"
                    },
                    "properties": {
                      "type": "object"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "FlowUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        },
        "FlowUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/FlowUpdateQueryAsSubResource"
            }
          }
        },
        "PatchFlowResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "trigger_type": {
                      "type": "string"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "TemplateUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "html": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "TemplateUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateUpdateQueryAsSubResource"
            }
          }
        },
        "PatchTemplateResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "template"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "editor_type": {
                      "type": "string"
                    },
                    "html": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogItemDeleteQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item"
              ]
            },
            "id": {
              "type": "string"
            }
          }
        },
        "CatalogVariantDeleteQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant"
              ]
            },
            "id": {
              "type": "string"
            }
          }
        },
        "CatalogCategoryDeleteQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category"
              ]
            },
            "id": {
              "type": "string"
            }
          }
        },
        "ListDeleteQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "list"
              ]
            },
            "id": {
              "type": "string"
            }
          }
        },
        "ListMembersDeleteQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "TemplateDeleteQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "id": {
              "type": "string"
            }
          }
        },
        "DeleteTemplateResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "template"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "editor_type": {
                      "type": "string"
                    },
                    "html": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "IncludedVariants": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sku": {
                  "type": "string"
                },
                "inventory_policy": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                },
                "inventory_quantity": {
                  "type": "number"
                },
                "price": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedMetrics": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "metric"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "updated": {
                  "type": "string"
                },
                "integration": {
                  "type": "object"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedProfiles": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "last_event_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedLists": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "list"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedSegments": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "segment"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedProfile": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "last_event_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedFlowActions": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow-action"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "action_type": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "settings": {
                  "type": "object"
                },
                "tracking_options": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTrackingOptions"
                    },
                    {
                      "$ref": "#/components/schemas/SMSTrackingOptions"
                    }
                  ]
                },
                "send_options": {
                  "$ref": "#/components/schemas/SendOptions"
                },
                "render_options": {
                  "$ref": "#/components/schemas/SMSRenderOptions"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedFlowMessages": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow-message"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                },
                "content": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailMessageContent"
                    },
                    {
                      "$ref": "#/components/schemas/SMSMessageContent"
                    }
                  ]
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "name",
                "channel",
                "content"
              ]
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedFlows": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "archived": {
                  "type": "boolean"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "trigger_type": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedFlowAction": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow-action"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "action_type": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "settings": {
                  "type": "object"
                },
                "tracking_options": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTrackingOptions"
                    },
                    {
                      "$ref": "#/components/schemas/SMSTrackingOptions"
                    }
                  ]
                },
                "send_options": {
                  "$ref": "#/components/schemas/SendOptions"
                },
                "render_options": {
                  "$ref": "#/components/schemas/SMSRenderOptions"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedItems": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedCategories": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        }
      },
      "responses": {
        "ClientError": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "code",
                        "title",
                        "detail"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "detail": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "pointer": {
                              "type": "string"
                            },
                            "parameter": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Client Error"
        },
        "ServerError": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "code",
                        "title",
                        "detail"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "detail": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "pointer": {
                              "type": "string"
                            },
                            "parameter": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Server Error"
        }
      },
      "securitySchemes": {
        "Klaviyo-API-Key": {
          "type": "apiKey",
          "in": "header",
          "name": "Authorization",
          "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2022-10-17/reference/api-overview#authentication",
          "x-default": "Klaviyo-API-Key your-private-api-key"
        }
      }
    },
    "servers": [
      {
        "url": "https://a.klaviyo.com",
        "description": "Production"
      }
    ],
    "security": [
      {
        "Klaviyo-API-Key": []
      }
    ],
    "tags": [
      {
        "name": "Catalogs",
        "description": "catalogs"
      },
      {
        "name": "Events",
        "description": "events"
      },
      {
        "name": "Metrics",
        "description": "metrics"
      },
      {
        "name": "Lists",
        "description": "lists"
      },
      {
        "name": "Segments",
        "description": "segments"
      },
      {
        "name": "Profiles",
        "description": "profiles"
      },
      {
        "name": "Flows",
        "description": "flows"
      },
      {
        "name": "Templates",
        "description": "templates"
      },
      {
        "name": "Subscriptions",
        "description": "subscriptions"
      },
      {
        "name": "Client",
        "description": "client"
      }
    ],
    "x-readme": {
      "explorer-enabled": false,
      "proxy-enabled": true,
      "samples-enabled": true
    }
  }